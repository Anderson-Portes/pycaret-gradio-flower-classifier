2023-11-24 15:50:01,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:50:01,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:50:01,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:50:01,720:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 15:51:18,996:INFO:PyCaret ClassificationExperiment
2023-11-24 15:51:18,996:INFO:Logging name: clf-default-name
2023-11-24 15:51:19,000:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 15:51:19,000:INFO:version 3.2.0
2023-11-24 15:51:19,000:INFO:Initializing setup()
2023-11-24 15:51:19,000:INFO:self.USI: e97f
2023-11-24 15:51:19,013:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'y_train', 'exp_name_log', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'html_param', 'n_jobs_param', 'gpu_param', 'log_plots_param', 'USI', 'X_test', 'y_test', 'X', 'exp_id', 'pipeline', 'data', 'fold_groups_param', 'is_multiclass', 'seed', 'gpu_n_jobs_param', '_ml_usecase', 'fix_imbalance', 'X_train', 'target_param'}
2023-11-24 15:51:19,013:INFO:Checking environment
2023-11-24 15:51:19,013:INFO:python_version: 3.11.4
2023-11-24 15:51:19,013:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2023-11-24 15:51:19,013:INFO:machine: AMD64
2023-11-24 15:51:19,013:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-24 15:51:19,014:INFO:Memory: svmem(total=8548933632, available=1979793408, percent=76.8, used=6569140224, free=1979793408)
2023-11-24 15:51:19,014:INFO:Physical Core: 4
2023-11-24 15:51:19,014:INFO:Logical Core: 4
2023-11-24 15:51:19,014:INFO:Checking libraries
2023-11-24 15:51:19,014:INFO:System:
2023-11-24 15:51:19,014:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2023-11-24 15:51:19,014:INFO:executable: c:\Users\PC\AppData\Local\Programs\Python\Python311\python.exe
2023-11-24 15:51:19,014:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-24 15:51:19,014:INFO:PyCaret required dependencies:
2023-11-24 15:51:19,316:INFO:                 pip: 23.3.1
2023-11-24 15:51:19,316:INFO:          setuptools: 65.5.0
2023-11-24 15:51:19,316:INFO:             pycaret: 3.2.0
2023-11-24 15:51:19,316:INFO:             IPython: 8.14.0
2023-11-24 15:51:19,316:INFO:          ipywidgets: 8.1.0
2023-11-24 15:51:19,316:INFO:                tqdm: 4.66.1
2023-11-24 15:51:19,316:INFO:               numpy: 1.24.3
2023-11-24 15:51:19,316:INFO:              pandas: 1.5.3
2023-11-24 15:51:19,316:INFO:              jinja2: 3.1.2
2023-11-24 15:51:19,316:INFO:               scipy: 1.10.1
2023-11-24 15:51:19,316:INFO:              joblib: 1.3.2
2023-11-24 15:51:19,316:INFO:             sklearn: 1.2.2
2023-11-24 15:51:19,316:INFO:                pyod: 1.1.1
2023-11-24 15:51:19,316:INFO:            imblearn: 0.11.0
2023-11-24 15:51:19,316:INFO:   category_encoders: 2.6.3
2023-11-24 15:51:19,316:INFO:            lightgbm: 4.1.0
2023-11-24 15:51:19,316:INFO:               numba: 0.58.1
2023-11-24 15:51:19,316:INFO:            requests: 2.31.0
2023-11-24 15:51:19,316:INFO:          matplotlib: 3.6.0
2023-11-24 15:51:19,316:INFO:          scikitplot: 0.3.7
2023-11-24 15:51:19,316:INFO:         yellowbrick: 1.5
2023-11-24 15:51:19,316:INFO:              plotly: 5.17.0
2023-11-24 15:51:19,316:INFO:    plotly-resampler: Not installed
2023-11-24 15:51:19,316:INFO:             kaleido: 0.2.1
2023-11-24 15:51:19,316:INFO:           schemdraw: 0.15
2023-11-24 15:51:19,316:INFO:         statsmodels: 0.14.0
2023-11-24 15:51:19,316:INFO:              sktime: 0.21.1
2023-11-24 15:51:19,316:INFO:               tbats: 1.1.3
2023-11-24 15:51:19,316:INFO:            pmdarima: 2.0.4
2023-11-24 15:51:19,316:INFO:              psutil: 5.9.5
2023-11-24 15:51:19,316:INFO:          markupsafe: 2.1.3
2023-11-24 15:51:19,316:INFO:             pickle5: Not installed
2023-11-24 15:51:19,316:INFO:         cloudpickle: 3.0.0
2023-11-24 15:51:19,316:INFO:         deprecation: 2.1.0
2023-11-24 15:51:19,316:INFO:              xxhash: 3.4.1
2023-11-24 15:51:19,316:INFO:           wurlitzer: Not installed
2023-11-24 15:51:19,316:INFO:PyCaret optional dependencies:
2023-11-24 15:51:39,901:INFO:                shap: Not installed
2023-11-24 15:51:39,901:INFO:           interpret: Not installed
2023-11-24 15:51:39,902:INFO:                umap: Not installed
2023-11-24 15:51:39,902:INFO:     ydata_profiling: 4.5.1
2023-11-24 15:51:39,902:INFO:  explainerdashboard: Not installed
2023-11-24 15:51:39,902:INFO:             autoviz: Not installed
2023-11-24 15:51:39,902:INFO:           fairlearn: Not installed
2023-11-24 15:51:39,902:INFO:          deepchecks: Not installed
2023-11-24 15:51:39,902:INFO:             xgboost: Not installed
2023-11-24 15:51:39,902:INFO:            catboost: Not installed
2023-11-24 15:51:39,902:INFO:              kmodes: Not installed
2023-11-24 15:51:39,902:INFO:             mlxtend: Not installed
2023-11-24 15:51:39,902:INFO:       statsforecast: Not installed
2023-11-24 15:51:39,902:INFO:        tune_sklearn: Not installed
2023-11-24 15:51:39,902:INFO:                 ray: Not installed
2023-11-24 15:51:39,903:INFO:            hyperopt: Not installed
2023-11-24 15:51:39,903:INFO:              optuna: Not installed
2023-11-24 15:51:39,903:INFO:               skopt: Not installed
2023-11-24 15:51:39,903:INFO:              mlflow: Not installed
2023-11-24 15:51:39,903:INFO:              gradio: 4.5.0
2023-11-24 15:51:39,903:INFO:             fastapi: 0.104.1
2023-11-24 15:51:39,903:INFO:             uvicorn: 0.24.0.post1
2023-11-24 15:51:39,903:INFO:              m2cgen: Not installed
2023-11-24 15:51:39,903:INFO:           evidently: Not installed
2023-11-24 15:51:39,903:INFO:               fugue: Not installed
2023-11-24 15:51:39,903:INFO:           streamlit: 1.27.1
2023-11-24 15:51:39,903:INFO:             prophet: Not installed
2023-11-24 15:51:39,903:INFO:None
2023-11-24 15:51:39,904:INFO:Set up data.
2023-11-24 15:51:39,946:INFO:Set up folding strategy.
2023-11-24 15:51:39,946:INFO:Set up train/test split.
2023-11-24 15:51:39,957:INFO:Set up index.
2023-11-24 15:51:39,957:INFO:Assigning column types.
2023-11-24 15:51:39,961:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 15:51:40,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:51:40,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 15:51:40,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:40,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:40,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 15:51:40,478:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 15:51:40,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:40,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:40,587:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 15:51:40,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 15:51:40,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:40,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,007:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 15:51:41,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,101:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 15:51:41,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:41,601:INFO:Preparing preprocessing pipeline...
2023-11-24 15:51:41,629:INFO:Set up label encoding.
2023-11-24 15:51:41,629:INFO:Set up simple imputation.
2023-11-24 15:51:41,702:INFO:Finished creating preprocessing pipeline.
2023-11-24 15:51:41,729:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-11-24 15:51:41,729:INFO:Creating final display dataframe.
2023-11-24 15:51:41,892:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                 306  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 5)  
5                                            (150, 5)  
6                                            (105, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               e97f  
2023-11-24 15:51:42,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:42,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:42,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:42,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 15:51:42,546:INFO:setup() successfully completed in 23.82s...............
2023-11-24 15:52:06,354:INFO:Initializing compare_models()
2023-11-24 15:52:06,354:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 15:52:06,355:INFO:Checking exceptions
2023-11-24 15:52:06,360:INFO:Preparing display monitor
2023-11-24 15:52:06,398:INFO:Initializing Logistic Regression
2023-11-24 15:52:06,399:INFO:Total runtime is 1.662572224934896e-05 minutes
2023-11-24 15:52:06,405:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:06,405:INFO:Initializing create_model()
2023-11-24 15:52:06,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:06,406:INFO:Checking exceptions
2023-11-24 15:52:06,406:INFO:Importing libraries
2023-11-24 15:52:06,406:INFO:Copying training dataset
2023-11-24 15:52:06,410:INFO:Defining folds
2023-11-24 15:52:06,411:INFO:Declaring metric variables
2023-11-24 15:52:06,419:INFO:Importing untrained model
2023-11-24 15:52:06,428:INFO:Logistic Regression Imported successfully
2023-11-24 15:52:06,446:INFO:Starting cross validation
2023-11-24 15:52:06,448:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:12,308:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,315:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,316:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,479:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,479:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,479:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,479:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,498:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,547:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,547:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,551:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,554:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,573:INFO:Calculating mean and std
2023-11-24 15:52:12,575:INFO:Creating metrics dataframe
2023-11-24 15:52:12,594:INFO:Uploading results into container
2023-11-24 15:52:12,595:INFO:Uploading model into container now
2023-11-24 15:52:12,596:INFO:_master_model_container: 1
2023-11-24 15:52:12,596:INFO:_display_container: 2
2023-11-24 15:52:12,597:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 15:52:12,597:INFO:create_model() successfully completed......................................
2023-11-24 15:52:12,734:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:12,734:INFO:Creating metrics dataframe
2023-11-24 15:52:12,748:INFO:Initializing K Neighbors Classifier
2023-11-24 15:52:12,749:INFO:Total runtime is 0.1058517058690389 minutes
2023-11-24 15:52:12,754:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:12,754:INFO:Initializing create_model()
2023-11-24 15:52:12,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:12,755:INFO:Checking exceptions
2023-11-24 15:52:12,755:INFO:Importing libraries
2023-11-24 15:52:12,755:INFO:Copying training dataset
2023-11-24 15:52:12,762:INFO:Defining folds
2023-11-24 15:52:12,762:INFO:Declaring metric variables
2023-11-24 15:52:12,768:INFO:Importing untrained model
2023-11-24 15:52:12,777:INFO:K Neighbors Classifier Imported successfully
2023-11-24 15:52:12,791:INFO:Starting cross validation
2023-11-24 15:52:12,794:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:12,962:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,963:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,963:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,966:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,966:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,966:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,968:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,970:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,970:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:12,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,045:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,045:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,048:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,048:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,049:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,050:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,051:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,053:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,054:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,058:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,118:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,118:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,121:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,122:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,125:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,127:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,137:INFO:Calculating mean and std
2023-11-24 15:52:13,139:INFO:Creating metrics dataframe
2023-11-24 15:52:13,146:INFO:Uploading results into container
2023-11-24 15:52:13,147:INFO:Uploading model into container now
2023-11-24 15:52:13,147:INFO:_master_model_container: 2
2023-11-24 15:52:13,148:INFO:_display_container: 2
2023-11-24 15:52:13,148:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 15:52:13,148:INFO:create_model() successfully completed......................................
2023-11-24 15:52:13,275:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:13,275:INFO:Creating metrics dataframe
2023-11-24 15:52:13,292:INFO:Initializing Naive Bayes
2023-11-24 15:52:13,292:INFO:Total runtime is 0.11490213871002197 minutes
2023-11-24 15:52:13,297:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:13,298:INFO:Initializing create_model()
2023-11-24 15:52:13,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:13,298:INFO:Checking exceptions
2023-11-24 15:52:13,298:INFO:Importing libraries
2023-11-24 15:52:13,298:INFO:Copying training dataset
2023-11-24 15:52:13,304:INFO:Defining folds
2023-11-24 15:52:13,304:INFO:Declaring metric variables
2023-11-24 15:52:13,310:INFO:Importing untrained model
2023-11-24 15:52:13,317:INFO:Naive Bayes Imported successfully
2023-11-24 15:52:13,329:INFO:Starting cross validation
2023-11-24 15:52:13,329:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:13,393:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,394:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,395:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,396:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,454:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,454:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,464:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,476:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,480:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,481:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,484:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,484:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,487:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,496:INFO:Calculating mean and std
2023-11-24 15:52:13,498:INFO:Creating metrics dataframe
2023-11-24 15:52:13,503:INFO:Uploading results into container
2023-11-24 15:52:13,504:INFO:Uploading model into container now
2023-11-24 15:52:13,504:INFO:_master_model_container: 3
2023-11-24 15:52:13,505:INFO:_display_container: 2
2023-11-24 15:52:13,505:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 15:52:13,505:INFO:create_model() successfully completed......................................
2023-11-24 15:52:13,636:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:13,636:INFO:Creating metrics dataframe
2023-11-24 15:52:13,652:INFO:Initializing Decision Tree Classifier
2023-11-24 15:52:13,652:INFO:Total runtime is 0.12088700135548909 minutes
2023-11-24 15:52:13,657:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:13,657:INFO:Initializing create_model()
2023-11-24 15:52:13,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:13,657:INFO:Checking exceptions
2023-11-24 15:52:13,658:INFO:Importing libraries
2023-11-24 15:52:13,658:INFO:Copying training dataset
2023-11-24 15:52:13,665:INFO:Defining folds
2023-11-24 15:52:13,665:INFO:Declaring metric variables
2023-11-24 15:52:13,671:INFO:Importing untrained model
2023-11-24 15:52:13,678:INFO:Decision Tree Classifier Imported successfully
2023-11-24 15:52:13,691:INFO:Starting cross validation
2023-11-24 15:52:13,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:13,816:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,819:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,823:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,823:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,824:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,824:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,859:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,861:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,865:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,868:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,903:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,907:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,909:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:13,919:INFO:Calculating mean and std
2023-11-24 15:52:13,921:INFO:Creating metrics dataframe
2023-11-24 15:52:13,926:INFO:Uploading results into container
2023-11-24 15:52:13,928:INFO:Uploading model into container now
2023-11-24 15:52:13,929:INFO:_master_model_container: 4
2023-11-24 15:52:13,929:INFO:_display_container: 2
2023-11-24 15:52:13,929:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best')
2023-11-24 15:52:13,929:INFO:create_model() successfully completed......................................
2023-11-24 15:52:14,059:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:14,060:INFO:Creating metrics dataframe
2023-11-24 15:52:14,076:INFO:Initializing SVM - Linear Kernel
2023-11-24 15:52:14,076:INFO:Total runtime is 0.12796743313471476 minutes
2023-11-24 15:52:14,082:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:14,082:INFO:Initializing create_model()
2023-11-24 15:52:14,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:14,083:INFO:Checking exceptions
2023-11-24 15:52:14,083:INFO:Importing libraries
2023-11-24 15:52:14,084:INFO:Copying training dataset
2023-11-24 15:52:14,090:INFO:Defining folds
2023-11-24 15:52:14,090:INFO:Declaring metric variables
2023-11-24 15:52:14,098:INFO:Importing untrained model
2023-11-24 15:52:14,104:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 15:52:14,116:INFO:Starting cross validation
2023-11-24 15:52:14,117:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:14,318:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,320:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,323:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,323:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,325:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:14,326:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,326:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,326:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,371:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,373:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,373:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,374:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,375:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,376:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,376:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,378:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,379:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,382:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:14,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,387:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,388:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:14,390:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,424:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,425:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:52:14,426:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,427:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,430:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:14,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:14,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,448:INFO:Calculating mean and std
2023-11-24 15:52:14,450:INFO:Creating metrics dataframe
2023-11-24 15:52:14,455:INFO:Uploading results into container
2023-11-24 15:52:14,455:INFO:Uploading model into container now
2023-11-24 15:52:14,456:INFO:_master_model_container: 5
2023-11-24 15:52:14,456:INFO:_display_container: 2
2023-11-24 15:52:14,457:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 15:52:14,458:INFO:create_model() successfully completed......................................
2023-11-24 15:52:14,586:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:14,586:INFO:Creating metrics dataframe
2023-11-24 15:52:14,602:INFO:Initializing Ridge Classifier
2023-11-24 15:52:14,603:INFO:Total runtime is 0.13675140142440795 minutes
2023-11-24 15:52:14,607:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:14,609:INFO:Initializing create_model()
2023-11-24 15:52:14,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:14,609:INFO:Checking exceptions
2023-11-24 15:52:14,609:INFO:Importing libraries
2023-11-24 15:52:14,609:INFO:Copying training dataset
2023-11-24 15:52:14,616:INFO:Defining folds
2023-11-24 15:52:14,616:INFO:Declaring metric variables
2023-11-24 15:52:14,623:INFO:Importing untrained model
2023-11-24 15:52:14,628:INFO:Ridge Classifier Imported successfully
2023-11-24 15:52:14,641:INFO:Starting cross validation
2023-11-24 15:52:14,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:14,900:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,902:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,905:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,907:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,907:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,907:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,909:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,911:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,914:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,940:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,941:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,942:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,943:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,945:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,945:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,946:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,946:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,950:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,950:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,954:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,956:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,958:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,960:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,962:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,963:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,977:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,977:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:52:14,979:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,979:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,983:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,984:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,987:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,989:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:14,998:INFO:Calculating mean and std
2023-11-24 15:52:15,000:INFO:Creating metrics dataframe
2023-11-24 15:52:15,006:INFO:Uploading results into container
2023-11-24 15:52:15,007:INFO:Uploading model into container now
2023-11-24 15:52:15,008:INFO:_master_model_container: 6
2023-11-24 15:52:15,008:INFO:_display_container: 2
2023-11-24 15:52:15,009:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001)
2023-11-24 15:52:15,009:INFO:create_model() successfully completed......................................
2023-11-24 15:52:15,136:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:15,136:INFO:Creating metrics dataframe
2023-11-24 15:52:15,152:INFO:Initializing Random Forest Classifier
2023-11-24 15:52:15,153:INFO:Total runtime is 0.14591163794199624 minutes
2023-11-24 15:52:15,157:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:15,158:INFO:Initializing create_model()
2023-11-24 15:52:15,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:15,158:INFO:Checking exceptions
2023-11-24 15:52:15,158:INFO:Importing libraries
2023-11-24 15:52:15,158:INFO:Copying training dataset
2023-11-24 15:52:15,164:INFO:Defining folds
2023-11-24 15:52:15,165:INFO:Declaring metric variables
2023-11-24 15:52:15,171:INFO:Importing untrained model
2023-11-24 15:52:15,177:INFO:Random Forest Classifier Imported successfully
2023-11-24 15:52:15,191:INFO:Starting cross validation
2023-11-24 15:52:15,193:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:15,570:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,579:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,579:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,579:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,579:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,579:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,589:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,599:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,599:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,623:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,902:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,902:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,917:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,920:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,920:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,931:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,973:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,973:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:15,986:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,229:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,233:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,236:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,240:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,243:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,247:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,260:INFO:Calculating mean and std
2023-11-24 15:52:16,262:INFO:Creating metrics dataframe
2023-11-24 15:52:16,267:INFO:Uploading results into container
2023-11-24 15:52:16,270:INFO:Uploading model into container now
2023-11-24 15:52:16,271:INFO:_master_model_container: 7
2023-11-24 15:52:16,271:INFO:_display_container: 2
2023-11-24 15:52:16,273:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False)
2023-11-24 15:52:16,274:INFO:create_model() successfully completed......................................
2023-11-24 15:52:16,401:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:16,401:INFO:Creating metrics dataframe
2023-11-24 15:52:16,418:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 15:52:16,418:INFO:Total runtime is 0.16699203650156655 minutes
2023-11-24 15:52:16,424:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:16,425:INFO:Initializing create_model()
2023-11-24 15:52:16,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:16,425:INFO:Checking exceptions
2023-11-24 15:52:16,425:INFO:Importing libraries
2023-11-24 15:52:16,425:INFO:Copying training dataset
2023-11-24 15:52:16,431:INFO:Defining folds
2023-11-24 15:52:16,431:INFO:Declaring metric variables
2023-11-24 15:52:16,438:INFO:Importing untrained model
2023-11-24 15:52:16,443:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:52:16,456:INFO:Starting cross validation
2023-11-24 15:52:16,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:16,648:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,650:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,650:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,652:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,652:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,654:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,655:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,656:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,656:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,658:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,658:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,660:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,692:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,693:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,693:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,695:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,696:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,696:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,698:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,699:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,705:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,710:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,713:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,739:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,740:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:16,755:INFO:Calculating mean and std
2023-11-24 15:52:16,757:INFO:Creating metrics dataframe
2023-11-24 15:52:16,763:INFO:Uploading results into container
2023-11-24 15:52:16,764:INFO:Uploading model into container now
2023-11-24 15:52:16,765:INFO:_master_model_container: 8
2023-11-24 15:52:16,765:INFO:_display_container: 2
2023-11-24 15:52:16,765:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:52:16,765:INFO:create_model() successfully completed......................................
2023-11-24 15:52:16,885:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:16,886:INFO:Creating metrics dataframe
2023-11-24 15:52:16,903:INFO:Initializing Ada Boost Classifier
2023-11-24 15:52:16,903:INFO:Total runtime is 0.17507247924804686 minutes
2023-11-24 15:52:16,908:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:16,909:INFO:Initializing create_model()
2023-11-24 15:52:16,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:16,909:INFO:Checking exceptions
2023-11-24 15:52:16,909:INFO:Importing libraries
2023-11-24 15:52:16,909:INFO:Copying training dataset
2023-11-24 15:52:16,915:INFO:Defining folds
2023-11-24 15:52:16,915:INFO:Declaring metric variables
2023-11-24 15:52:16,922:INFO:Importing untrained model
2023-11-24 15:52:16,928:INFO:Ada Boost Classifier Imported successfully
2023-11-24 15:52:16,939:INFO:Starting cross validation
2023-11-24 15:52:16,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:17,171:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,344:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,344:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,344:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,515:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,516:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,518:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,519:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,521:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,522:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:17,534:INFO:Calculating mean and std
2023-11-24 15:52:17,536:INFO:Creating metrics dataframe
2023-11-24 15:52:17,543:INFO:Uploading results into container
2023-11-24 15:52:17,544:INFO:Uploading model into container now
2023-11-24 15:52:17,544:INFO:_master_model_container: 9
2023-11-24 15:52:17,545:INFO:_display_container: 2
2023-11-24 15:52:17,545:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306)
2023-11-24 15:52:17,545:INFO:create_model() successfully completed......................................
2023-11-24 15:52:17,667:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:17,667:INFO:Creating metrics dataframe
2023-11-24 15:52:17,685:INFO:Initializing Gradient Boosting Classifier
2023-11-24 15:52:17,685:INFO:Total runtime is 0.1881126801172892 minutes
2023-11-24 15:52:17,691:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:17,692:INFO:Initializing create_model()
2023-11-24 15:52:17,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:17,693:INFO:Checking exceptions
2023-11-24 15:52:17,693:INFO:Importing libraries
2023-11-24 15:52:17,693:INFO:Copying training dataset
2023-11-24 15:52:17,698:INFO:Defining folds
2023-11-24 15:52:17,698:INFO:Declaring metric variables
2023-11-24 15:52:17,703:INFO:Importing untrained model
2023-11-24 15:52:17,709:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 15:52:17,720:INFO:Starting cross validation
2023-11-24 15:52:17,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:18,156:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,156:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,156:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,160:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,161:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,161:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,161:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,163:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,164:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,164:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,165:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,566:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,569:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,572:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,583:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,583:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,586:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,586:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,588:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,589:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,590:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,591:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,597:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,949:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,952:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,955:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,963:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,966:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,970:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:18,986:INFO:Calculating mean and std
2023-11-24 15:52:18,988:INFO:Creating metrics dataframe
2023-11-24 15:52:18,992:INFO:Uploading results into container
2023-11-24 15:52:18,993:INFO:Uploading model into container now
2023-11-24 15:52:18,993:INFO:_master_model_container: 10
2023-11-24 15:52:18,993:INFO:_display_container: 2
2023-11-24 15:52:18,993:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 15:52:18,993:INFO:create_model() successfully completed......................................
2023-11-24 15:52:19,117:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:19,118:INFO:Creating metrics dataframe
2023-11-24 15:52:19,137:INFO:Initializing Linear Discriminant Analysis
2023-11-24 15:52:19,137:INFO:Total runtime is 0.212307071685791 minutes
2023-11-24 15:52:19,144:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:19,145:INFO:Initializing create_model()
2023-11-24 15:52:19,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:19,145:INFO:Checking exceptions
2023-11-24 15:52:19,145:INFO:Importing libraries
2023-11-24 15:52:19,145:INFO:Copying training dataset
2023-11-24 15:52:19,153:INFO:Defining folds
2023-11-24 15:52:19,153:INFO:Declaring metric variables
2023-11-24 15:52:19,159:INFO:Importing untrained model
2023-11-24 15:52:19,165:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 15:52:19,176:INFO:Starting cross validation
2023-11-24 15:52:19,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:19,345:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,350:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,351:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,351:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,352:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,353:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,356:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,356:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,357:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,359:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,390:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,392:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,393:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,395:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,398:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,401:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,405:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,406:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,411:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,435:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,437:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,441:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,449:INFO:Calculating mean and std
2023-11-24 15:52:19,451:INFO:Creating metrics dataframe
2023-11-24 15:52:19,455:INFO:Uploading results into container
2023-11-24 15:52:19,456:INFO:Uploading model into container now
2023-11-24 15:52:19,456:INFO:_master_model_container: 11
2023-11-24 15:52:19,456:INFO:_display_container: 2
2023-11-24 15:52:19,456:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 15:52:19,456:INFO:create_model() successfully completed......................................
2023-11-24 15:52:19,579:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:19,580:INFO:Creating metrics dataframe
2023-11-24 15:52:19,602:INFO:Initializing Extra Trees Classifier
2023-11-24 15:52:19,602:INFO:Total runtime is 0.22005485296249389 minutes
2023-11-24 15:52:19,607:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:19,607:INFO:Initializing create_model()
2023-11-24 15:52:19,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:19,607:INFO:Checking exceptions
2023-11-24 15:52:19,607:INFO:Importing libraries
2023-11-24 15:52:19,607:INFO:Copying training dataset
2023-11-24 15:52:19,615:INFO:Defining folds
2023-11-24 15:52:19,615:INFO:Declaring metric variables
2023-11-24 15:52:19,621:INFO:Importing untrained model
2023-11-24 15:52:19,627:INFO:Extra Trees Classifier Imported successfully
2023-11-24 15:52:19,643:INFO:Starting cross validation
2023-11-24 15:52:19,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:19,920:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,922:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,925:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,926:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,928:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,938:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,941:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:19,945:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,192:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,194:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,195:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,197:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,198:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,201:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,217:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,221:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,222:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,226:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,229:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,456:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,460:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,462:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,463:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,465:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,469:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:20,485:INFO:Calculating mean and std
2023-11-24 15:52:20,487:INFO:Creating metrics dataframe
2023-11-24 15:52:20,494:INFO:Uploading results into container
2023-11-24 15:52:20,494:INFO:Uploading model into container now
2023-11-24 15:52:20,495:INFO:_master_model_container: 12
2023-11-24 15:52:20,495:INFO:_display_container: 2
2023-11-24 15:52:20,496:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False)
2023-11-24 15:52:20,496:INFO:create_model() successfully completed......................................
2023-11-24 15:52:20,610:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:20,610:INFO:Creating metrics dataframe
2023-11-24 15:52:20,636:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 15:52:20,636:INFO:Total runtime is 0.23728839159011839 minutes
2023-11-24 15:52:20,642:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:20,642:INFO:Initializing create_model()
2023-11-24 15:52:20,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:20,642:INFO:Checking exceptions
2023-11-24 15:52:20,643:INFO:Importing libraries
2023-11-24 15:52:20,643:INFO:Copying training dataset
2023-11-24 15:52:20,648:INFO:Defining folds
2023-11-24 15:52:20,649:INFO:Declaring metric variables
2023-11-24 15:52:20,655:INFO:Importing untrained model
2023-11-24 15:52:20,661:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 15:52:20,672:INFO:Starting cross validation
2023-11-24 15:52:20,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:21,014:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,017:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,022:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,023:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,025:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,054:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,057:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,062:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,065:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,069:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,233:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,238:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,242:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,242:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,245:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,274:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,278:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,280:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,308:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,315:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,458:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,462:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,465:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,467:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,475:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,484:INFO:Calculating mean and std
2023-11-24 15:52:21,486:INFO:Creating metrics dataframe
2023-11-24 15:52:21,493:INFO:Uploading results into container
2023-11-24 15:52:21,494:INFO:Uploading model into container now
2023-11-24 15:52:21,494:INFO:_master_model_container: 13
2023-11-24 15:52:21,494:INFO:_display_container: 2
2023-11-24 15:52:21,495:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 15:52:21,495:INFO:create_model() successfully completed......................................
2023-11-24 15:52:21,617:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:21,617:INFO:Creating metrics dataframe
2023-11-24 15:52:21,638:INFO:Initializing Dummy Classifier
2023-11-24 15:52:21,638:INFO:Total runtime is 0.25398867527643837 minutes
2023-11-24 15:52:21,644:INFO:SubProcess create_model() called ==================================
2023-11-24 15:52:21,645:INFO:Initializing create_model()
2023-11-24 15:52:21,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C3AC9990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:21,645:INFO:Checking exceptions
2023-11-24 15:52:21,645:INFO:Importing libraries
2023-11-24 15:52:21,645:INFO:Copying training dataset
2023-11-24 15:52:21,650:INFO:Defining folds
2023-11-24 15:52:21,650:INFO:Declaring metric variables
2023-11-24 15:52:21,658:INFO:Importing untrained model
2023-11-24 15:52:21,663:INFO:Dummy Classifier Imported successfully
2023-11-24 15:52:21,676:INFO:Starting cross validation
2023-11-24 15:52:21,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:52:21,712:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,715:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,717:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,717:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,718:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,720:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,725:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,726:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,729:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,732:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,733:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,750:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,753:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,756:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,761:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,765:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,768:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,769:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,769:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,770:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,772:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,776:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,776:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,778:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,780:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,795:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,799:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,801:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,801:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,804:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,806:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:52:21,809:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:52:21,821:INFO:Calculating mean and std
2023-11-24 15:52:21,823:INFO:Creating metrics dataframe
2023-11-24 15:52:21,828:INFO:Uploading results into container
2023-11-24 15:52:21,829:INFO:Uploading model into container now
2023-11-24 15:52:21,829:INFO:_master_model_container: 14
2023-11-24 15:52:21,829:INFO:_display_container: 2
2023-11-24 15:52:21,830:INFO:DummyClassifier(constant=None, random_state=306, strategy='prior')
2023-11-24 15:52:21,830:INFO:create_model() successfully completed......................................
2023-11-24 15:52:21,951:INFO:SubProcess create_model() end ==================================
2023-11-24 15:52:21,951:INFO:Creating metrics dataframe
2023-11-24 15:52:21,986:INFO:Initializing create_model()
2023-11-24 15:52:21,987:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:52:21,987:INFO:Checking exceptions
2023-11-24 15:52:21,989:INFO:Importing libraries
2023-11-24 15:52:21,990:INFO:Copying training dataset
2023-11-24 15:52:21,996:INFO:Defining folds
2023-11-24 15:52:21,996:INFO:Declaring metric variables
2023-11-24 15:52:21,996:INFO:Importing untrained model
2023-11-24 15:52:21,996:INFO:Declaring custom model
2023-11-24 15:52:21,997:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:52:21,998:INFO:Cross validation set to False
2023-11-24 15:52:21,998:INFO:Fitting Model
2023-11-24 15:52:22,010:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:52:22,010:INFO:create_model() successfully completed......................................
2023-11-24 15:52:22,183:INFO:_master_model_container: 14
2023-11-24 15:52:22,183:INFO:_display_container: 2
2023-11-24 15:52:22,183:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:52:22,183:INFO:compare_models() successfully completed......................................
2023-11-24 15:53:57,694:INFO:Initializing compare_models()
2023-11-24 15:53:57,700:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 15:53:57,700:INFO:Checking exceptions
2023-11-24 15:53:57,702:INFO:Preparing display monitor
2023-11-24 15:53:57,735:INFO:Initializing Logistic Regression
2023-11-24 15:53:57,735:INFO:Total runtime is 0.0 minutes
2023-11-24 15:53:57,735:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:57,735:INFO:Initializing create_model()
2023-11-24 15:53:57,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:57,735:INFO:Checking exceptions
2023-11-24 15:53:57,735:INFO:Importing libraries
2023-11-24 15:53:57,735:INFO:Copying training dataset
2023-11-24 15:53:57,750:INFO:Defining folds
2023-11-24 15:53:57,750:INFO:Declaring metric variables
2023-11-24 15:53:57,755:INFO:Importing untrained model
2023-11-24 15:53:57,759:INFO:Logistic Regression Imported successfully
2023-11-24 15:53:57,769:INFO:Starting cross validation
2023-11-24 15:53:57,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:57,876:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,882:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,914:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,939:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,955:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,955:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,987:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,990:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:57,994:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,028:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,028:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,028:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,035:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,037:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,039:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,057:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,064:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,080:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,086:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,090:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,106:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,109:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,112:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,121:INFO:Calculating mean and std
2023-11-24 15:53:58,121:INFO:Creating metrics dataframe
2023-11-24 15:53:58,124:INFO:Uploading results into container
2023-11-24 15:53:58,124:INFO:Uploading model into container now
2023-11-24 15:53:58,124:INFO:_master_model_container: 15
2023-11-24 15:53:58,124:INFO:_display_container: 3
2023-11-24 15:53:58,124:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 15:53:58,124:INFO:create_model() successfully completed......................................
2023-11-24 15:53:58,264:INFO:SubProcess create_model() end ==================================
2023-11-24 15:53:58,265:INFO:Creating metrics dataframe
2023-11-24 15:53:58,270:INFO:Initializing K Neighbors Classifier
2023-11-24 15:53:58,270:INFO:Total runtime is 0.008917661507924397 minutes
2023-11-24 15:53:58,270:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:58,270:INFO:Initializing create_model()
2023-11-24 15:53:58,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:58,270:INFO:Checking exceptions
2023-11-24 15:53:58,270:INFO:Importing libraries
2023-11-24 15:53:58,270:INFO:Copying training dataset
2023-11-24 15:53:58,287:INFO:Defining folds
2023-11-24 15:53:58,287:INFO:Declaring metric variables
2023-11-24 15:53:58,287:INFO:Importing untrained model
2023-11-24 15:53:58,301:INFO:K Neighbors Classifier Imported successfully
2023-11-24 15:53:58,306:INFO:Starting cross validation
2023-11-24 15:53:58,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,407:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,411:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,470:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,476:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,530:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,530:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,539:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,540:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,541:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,541:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,550:INFO:Calculating mean and std
2023-11-24 15:53:58,550:INFO:Creating metrics dataframe
2023-11-24 15:53:58,554:INFO:Uploading results into container
2023-11-24 15:53:58,554:INFO:Uploading model into container now
2023-11-24 15:53:58,554:INFO:_master_model_container: 16
2023-11-24 15:53:58,554:INFO:_display_container: 3
2023-11-24 15:53:58,554:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 15:53:58,554:INFO:create_model() successfully completed......................................
2023-11-24 15:53:58,671:INFO:SubProcess create_model() end ==================================
2023-11-24 15:53:58,671:INFO:Creating metrics dataframe
2023-11-24 15:53:58,689:INFO:Initializing Naive Bayes
2023-11-24 15:53:58,690:INFO:Total runtime is 0.01591569185256958 minutes
2023-11-24 15:53:58,691:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:58,691:INFO:Initializing create_model()
2023-11-24 15:53:58,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:58,691:INFO:Checking exceptions
2023-11-24 15:53:58,691:INFO:Importing libraries
2023-11-24 15:53:58,691:INFO:Copying training dataset
2023-11-24 15:53:58,691:INFO:Defining folds
2023-11-24 15:53:58,691:INFO:Declaring metric variables
2023-11-24 15:53:58,705:INFO:Importing untrained model
2023-11-24 15:53:58,714:INFO:Naive Bayes Imported successfully
2023-11-24 15:53:58,729:INFO:Starting cross validation
2023-11-24 15:53:58,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:58,770:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,772:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,776:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,777:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,779:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,780:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,781:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,783:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,787:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,791:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,791:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,852:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,856:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,863:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,863:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:58,873:INFO:Calculating mean and std
2023-11-24 15:53:58,873:INFO:Creating metrics dataframe
2023-11-24 15:53:58,873:INFO:Uploading results into container
2023-11-24 15:53:58,873:INFO:Uploading model into container now
2023-11-24 15:53:58,873:INFO:_master_model_container: 17
2023-11-24 15:53:58,873:INFO:_display_container: 3
2023-11-24 15:53:58,873:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 15:53:58,873:INFO:create_model() successfully completed......................................
2023-11-24 15:53:58,995:INFO:SubProcess create_model() end ==================================
2023-11-24 15:53:58,995:INFO:Creating metrics dataframe
2023-11-24 15:53:59,008:INFO:Initializing Decision Tree Classifier
2023-11-24 15:53:59,008:INFO:Total runtime is 0.02122564713160197 minutes
2023-11-24 15:53:59,024:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:59,024:INFO:Initializing create_model()
2023-11-24 15:53:59,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:59,024:INFO:Checking exceptions
2023-11-24 15:53:59,024:INFO:Importing libraries
2023-11-24 15:53:59,024:INFO:Copying training dataset
2023-11-24 15:53:59,024:INFO:Defining folds
2023-11-24 15:53:59,024:INFO:Declaring metric variables
2023-11-24 15:53:59,024:INFO:Importing untrained model
2023-11-24 15:53:59,044:INFO:Decision Tree Classifier Imported successfully
2023-11-24 15:53:59,059:INFO:Starting cross validation
2023-11-24 15:53:59,060:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:59,109:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,112:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,116:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,122:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,124:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,120:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,126:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,127:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,128:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,160:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,160:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,160:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,143:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,167:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,171:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,191:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,201:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,215:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,215:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,215:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,224:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,224:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,224:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,234:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,234:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,255:INFO:Calculating mean and std
2023-11-24 15:53:59,256:INFO:Creating metrics dataframe
2023-11-24 15:53:59,260:INFO:Uploading results into container
2023-11-24 15:53:59,260:INFO:Uploading model into container now
2023-11-24 15:53:59,260:INFO:_master_model_container: 18
2023-11-24 15:53:59,260:INFO:_display_container: 3
2023-11-24 15:53:59,265:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best')
2023-11-24 15:53:59,266:INFO:create_model() successfully completed......................................
2023-11-24 15:53:59,377:INFO:SubProcess create_model() end ==================================
2023-11-24 15:53:59,377:INFO:Creating metrics dataframe
2023-11-24 15:53:59,392:INFO:Initializing SVM - Linear Kernel
2023-11-24 15:53:59,392:INFO:Total runtime is 0.02762233813603719 minutes
2023-11-24 15:53:59,392:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:59,408:INFO:Initializing create_model()
2023-11-24 15:53:59,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:59,408:INFO:Checking exceptions
2023-11-24 15:53:59,408:INFO:Importing libraries
2023-11-24 15:53:59,408:INFO:Copying training dataset
2023-11-24 15:53:59,408:INFO:Defining folds
2023-11-24 15:53:59,408:INFO:Declaring metric variables
2023-11-24 15:53:59,408:INFO:Importing untrained model
2023-11-24 15:53:59,423:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 15:53:59,429:INFO:Starting cross validation
2023-11-24 15:53:59,429:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,550:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,550:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,553:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,553:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,553:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,557:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,560:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,561:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,563:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,564:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:53:59,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:53:59,573:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,573:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:53:59,603:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:53:59,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,633:INFO:Calculating mean and std
2023-11-24 15:53:59,633:INFO:Creating metrics dataframe
2023-11-24 15:53:59,633:INFO:Uploading results into container
2023-11-24 15:53:59,633:INFO:Uploading model into container now
2023-11-24 15:53:59,643:INFO:_master_model_container: 19
2023-11-24 15:53:59,643:INFO:_display_container: 3
2023-11-24 15:53:59,644:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 15:53:59,644:INFO:create_model() successfully completed......................................
2023-11-24 15:53:59,762:INFO:SubProcess create_model() end ==================================
2023-11-24 15:53:59,762:INFO:Creating metrics dataframe
2023-11-24 15:53:59,781:INFO:Initializing Ridge Classifier
2023-11-24 15:53:59,781:INFO:Total runtime is 0.03410543600718181 minutes
2023-11-24 15:53:59,781:INFO:SubProcess create_model() called ==================================
2023-11-24 15:53:59,781:INFO:Initializing create_model()
2023-11-24 15:53:59,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:53:59,781:INFO:Checking exceptions
2023-11-24 15:53:59,781:INFO:Importing libraries
2023-11-24 15:53:59,781:INFO:Copying training dataset
2023-11-24 15:53:59,781:INFO:Defining folds
2023-11-24 15:53:59,781:INFO:Declaring metric variables
2023-11-24 15:53:59,797:INFO:Importing untrained model
2023-11-24 15:53:59,797:INFO:Ridge Classifier Imported successfully
2023-11-24 15:53:59,816:INFO:Starting cross validation
2023-11-24 15:53:59,816:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:53:59,856:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,859:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,860:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,861:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,863:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,865:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,866:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,868:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,875:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,893:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,902:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,904:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,911:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,912:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,913:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,913:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,913:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,913:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,943:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,946:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,950:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,953:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,958:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:53:59,967:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,968:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,970:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,976:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:53:59,988:INFO:Calculating mean and std
2023-11-24 15:53:59,989:INFO:Creating metrics dataframe
2023-11-24 15:53:59,996:INFO:Uploading results into container
2023-11-24 15:53:59,997:INFO:Uploading model into container now
2023-11-24 15:53:59,997:INFO:_master_model_container: 20
2023-11-24 15:53:59,997:INFO:_display_container: 3
2023-11-24 15:53:59,998:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001)
2023-11-24 15:53:59,998:INFO:create_model() successfully completed......................................
2023-11-24 15:54:00,115:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:00,115:INFO:Creating metrics dataframe
2023-11-24 15:54:00,131:INFO:Initializing Random Forest Classifier
2023-11-24 15:54:00,131:INFO:Total runtime is 0.03993571996688843 minutes
2023-11-24 15:54:00,147:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:00,147:INFO:Initializing create_model()
2023-11-24 15:54:00,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:00,147:INFO:Checking exceptions
2023-11-24 15:54:00,147:INFO:Importing libraries
2023-11-24 15:54:00,147:INFO:Copying training dataset
2023-11-24 15:54:00,147:INFO:Defining folds
2023-11-24 15:54:00,147:INFO:Declaring metric variables
2023-11-24 15:54:00,147:INFO:Importing untrained model
2023-11-24 15:54:00,163:INFO:Random Forest Classifier Imported successfully
2023-11-24 15:54:00,178:INFO:Starting cross validation
2023-11-24 15:54:00,180:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:00,497:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,503:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,510:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,517:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,517:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,529:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,529:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,529:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,888:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:00,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,125:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,132:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,135:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,160:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,168:INFO:Calculating mean and std
2023-11-24 15:54:01,168:INFO:Creating metrics dataframe
2023-11-24 15:54:01,168:INFO:Uploading results into container
2023-11-24 15:54:01,168:INFO:Uploading model into container now
2023-11-24 15:54:01,168:INFO:_master_model_container: 21
2023-11-24 15:54:01,168:INFO:_display_container: 3
2023-11-24 15:54:01,168:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:01,168:INFO:create_model() successfully completed......................................
2023-11-24 15:54:01,296:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:01,296:INFO:Creating metrics dataframe
2023-11-24 15:54:01,317:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 15:54:01,317:INFO:Total runtime is 0.0597078800201416 minutes
2023-11-24 15:54:01,322:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:01,323:INFO:Initializing create_model()
2023-11-24 15:54:01,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:01,323:INFO:Checking exceptions
2023-11-24 15:54:01,323:INFO:Importing libraries
2023-11-24 15:54:01,323:INFO:Copying training dataset
2023-11-24 15:54:01,329:INFO:Defining folds
2023-11-24 15:54:01,329:INFO:Declaring metric variables
2023-11-24 15:54:01,331:INFO:Importing untrained model
2023-11-24 15:54:01,331:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:54:01,353:INFO:Starting cross validation
2023-11-24 15:54:01,355:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:01,394:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,394:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,396:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,398:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,399:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,415:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,443:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,443:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,449:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,452:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,454:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,460:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,474:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,474:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,474:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,474:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,484:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,484:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,494:INFO:Calculating mean and std
2023-11-24 15:54:01,494:INFO:Creating metrics dataframe
2023-11-24 15:54:01,505:INFO:Uploading results into container
2023-11-24 15:54:01,505:INFO:Uploading model into container now
2023-11-24 15:54:01,505:INFO:_master_model_container: 22
2023-11-24 15:54:01,505:INFO:_display_container: 3
2023-11-24 15:54:01,505:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:54:01,505:INFO:create_model() successfully completed......................................
2023-11-24 15:54:01,629:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:01,629:INFO:Creating metrics dataframe
2023-11-24 15:54:01,649:INFO:Initializing Ada Boost Classifier
2023-11-24 15:54:01,649:INFO:Total runtime is 0.06523023049036662 minutes
2023-11-24 15:54:01,656:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:01,657:INFO:Initializing create_model()
2023-11-24 15:54:01,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:01,657:INFO:Checking exceptions
2023-11-24 15:54:01,657:INFO:Importing libraries
2023-11-24 15:54:01,657:INFO:Copying training dataset
2023-11-24 15:54:01,662:INFO:Defining folds
2023-11-24 15:54:01,662:INFO:Declaring metric variables
2023-11-24 15:54:01,669:INFO:Importing untrained model
2023-11-24 15:54:01,675:INFO:Ada Boost Classifier Imported successfully
2023-11-24 15:54:01,687:INFO:Starting cross validation
2023-11-24 15:54:01,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,872:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:01,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,010:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,034:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,175:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,175:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,185:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,185:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,185:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,185:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,195:INFO:Calculating mean and std
2023-11-24 15:54:02,195:INFO:Creating metrics dataframe
2023-11-24 15:54:02,203:INFO:Uploading results into container
2023-11-24 15:54:02,203:INFO:Uploading model into container now
2023-11-24 15:54:02,203:INFO:_master_model_container: 23
2023-11-24 15:54:02,203:INFO:_display_container: 3
2023-11-24 15:54:02,203:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306)
2023-11-24 15:54:02,203:INFO:create_model() successfully completed......................................
2023-11-24 15:54:02,342:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:02,342:INFO:Creating metrics dataframe
2023-11-24 15:54:02,364:INFO:Initializing Gradient Boosting Classifier
2023-11-24 15:54:02,364:INFO:Total runtime is 0.0771527647972107 minutes
2023-11-24 15:54:02,372:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:02,373:INFO:Initializing create_model()
2023-11-24 15:54:02,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:02,373:INFO:Checking exceptions
2023-11-24 15:54:02,373:INFO:Importing libraries
2023-11-24 15:54:02,373:INFO:Copying training dataset
2023-11-24 15:54:02,379:INFO:Defining folds
2023-11-24 15:54:02,379:INFO:Declaring metric variables
2023-11-24 15:54:02,386:INFO:Importing untrained model
2023-11-24 15:54:02,393:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 15:54:02,407:INFO:Starting cross validation
2023-11-24 15:54:02,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:02,842:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,865:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,878:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,880:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,881:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,897:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,907:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,917:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:02,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,296:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,297:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,308:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,309:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,309:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,330:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,333:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,336:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,710:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,710:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,736:INFO:Calculating mean and std
2023-11-24 15:54:03,736:INFO:Creating metrics dataframe
2023-11-24 15:54:03,743:INFO:Uploading results into container
2023-11-24 15:54:03,743:INFO:Uploading model into container now
2023-11-24 15:54:03,743:INFO:_master_model_container: 24
2023-11-24 15:54:03,743:INFO:_display_container: 3
2023-11-24 15:54:03,743:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 15:54:03,743:INFO:create_model() successfully completed......................................
2023-11-24 15:54:03,860:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:03,860:INFO:Creating metrics dataframe
2023-11-24 15:54:03,875:INFO:Initializing Linear Discriminant Analysis
2023-11-24 15:54:03,875:INFO:Total runtime is 0.10233925978342692 minutes
2023-11-24 15:54:03,875:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:03,875:INFO:Initializing create_model()
2023-11-24 15:54:03,875:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:03,875:INFO:Checking exceptions
2023-11-24 15:54:03,875:INFO:Importing libraries
2023-11-24 15:54:03,875:INFO:Copying training dataset
2023-11-24 15:54:03,891:INFO:Defining folds
2023-11-24 15:54:03,891:INFO:Declaring metric variables
2023-11-24 15:54:03,891:INFO:Importing untrained model
2023-11-24 15:54:03,908:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 15:54:03,919:INFO:Starting cross validation
2023-11-24 15:54:03,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:03,962:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,964:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,964:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,966:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,967:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,967:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,967:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,971:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,971:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,973:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:03,976:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,008:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,018:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,025:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,038:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,059:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,069:INFO:Calculating mean and std
2023-11-24 15:54:04,069:INFO:Creating metrics dataframe
2023-11-24 15:54:04,077:INFO:Uploading results into container
2023-11-24 15:54:04,078:INFO:Uploading model into container now
2023-11-24 15:54:04,078:INFO:_master_model_container: 25
2023-11-24 15:54:04,078:INFO:_display_container: 3
2023-11-24 15:54:04,078:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 15:54:04,078:INFO:create_model() successfully completed......................................
2023-11-24 15:54:04,189:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:04,189:INFO:Creating metrics dataframe
2023-11-24 15:54:04,205:INFO:Initializing Extra Trees Classifier
2023-11-24 15:54:04,205:INFO:Total runtime is 0.10782874425252278 minutes
2023-11-24 15:54:04,220:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:04,220:INFO:Initializing create_model()
2023-11-24 15:54:04,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:04,220:INFO:Checking exceptions
2023-11-24 15:54:04,220:INFO:Importing libraries
2023-11-24 15:54:04,220:INFO:Copying training dataset
2023-11-24 15:54:04,220:INFO:Defining folds
2023-11-24 15:54:04,220:INFO:Declaring metric variables
2023-11-24 15:54:04,236:INFO:Importing untrained model
2023-11-24 15:54:04,242:INFO:Extra Trees Classifier Imported successfully
2023-11-24 15:54:04,255:INFO:Starting cross validation
2023-11-24 15:54:04,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:04,526:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,533:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,533:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,533:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,537:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,537:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,546:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,551:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,551:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,616:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,618:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,618:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,809:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,816:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,816:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,821:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,832:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,832:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,832:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,979:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,979:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:04,979:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,079:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,084:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,084:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,106:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,116:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,116:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,126:INFO:Calculating mean and std
2023-11-24 15:54:05,126:INFO:Creating metrics dataframe
2023-11-24 15:54:05,132:INFO:Uploading results into container
2023-11-24 15:54:05,132:INFO:Uploading model into container now
2023-11-24 15:54:05,132:INFO:_master_model_container: 26
2023-11-24 15:54:05,132:INFO:_display_container: 3
2023-11-24 15:54:05,132:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:05,132:INFO:create_model() successfully completed......................................
2023-11-24 15:54:05,242:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:05,242:INFO:Creating metrics dataframe
2023-11-24 15:54:05,273:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 15:54:05,273:INFO:Total runtime is 0.12563560803731283 minutes
2023-11-24 15:54:05,280:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:05,281:INFO:Initializing create_model()
2023-11-24 15:54:05,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:05,281:INFO:Checking exceptions
2023-11-24 15:54:05,281:INFO:Importing libraries
2023-11-24 15:54:05,281:INFO:Copying training dataset
2023-11-24 15:54:05,289:INFO:Defining folds
2023-11-24 15:54:05,289:INFO:Declaring metric variables
2023-11-24 15:54:05,296:INFO:Importing untrained model
2023-11-24 15:54:05,298:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 15:54:05,315:INFO:Starting cross validation
2023-11-24 15:54:05,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:05,584:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,587:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,591:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,602:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,602:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,624:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,634:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,634:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,634:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,800:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,812:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,816:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,823:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,823:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,823:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,834:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,834:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,844:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,985:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,985:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,985:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,993:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:05,993:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,003:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,014:INFO:Calculating mean and std
2023-11-24 15:54:06,016:INFO:Creating metrics dataframe
2023-11-24 15:54:06,020:INFO:Uploading results into container
2023-11-24 15:54:06,020:INFO:Uploading model into container now
2023-11-24 15:54:06,020:INFO:_master_model_container: 27
2023-11-24 15:54:06,020:INFO:_display_container: 3
2023-11-24 15:54:06,020:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 15:54:06,020:INFO:create_model() successfully completed......................................
2023-11-24 15:54:06,162:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:06,162:INFO:Creating metrics dataframe
2023-11-24 15:54:06,181:INFO:Initializing Dummy Classifier
2023-11-24 15:54:06,182:INFO:Total runtime is 0.14079270760218301 minutes
2023-11-24 15:54:06,187:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:06,187:INFO:Initializing create_model()
2023-11-24 15:54:06,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C2166250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:06,188:INFO:Checking exceptions
2023-11-24 15:54:06,188:INFO:Importing libraries
2023-11-24 15:54:06,188:INFO:Copying training dataset
2023-11-24 15:54:06,193:INFO:Defining folds
2023-11-24 15:54:06,194:INFO:Declaring metric variables
2023-11-24 15:54:06,202:INFO:Importing untrained model
2023-11-24 15:54:06,207:INFO:Dummy Classifier Imported successfully
2023-11-24 15:54:06,219:INFO:Starting cross validation
2023-11-24 15:54:06,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:06,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,257:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,259:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,260:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,261:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,262:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,262:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,263:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,264:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,266:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,268:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,270:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,271:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,274:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,275:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,277:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,293:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,295:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,296:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,299:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,299:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,301:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,302:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,303:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,307:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,309:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,311:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,312:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,313:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,316:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,316:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,329:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,334:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,336:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,336:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,337:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,339:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,340:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:06,342:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:06,353:INFO:Calculating mean and std
2023-11-24 15:54:06,355:INFO:Creating metrics dataframe
2023-11-24 15:54:06,361:INFO:Uploading results into container
2023-11-24 15:54:06,362:INFO:Uploading model into container now
2023-11-24 15:54:06,362:INFO:_master_model_container: 28
2023-11-24 15:54:06,362:INFO:_display_container: 3
2023-11-24 15:54:06,363:INFO:DummyClassifier(constant=None, random_state=306, strategy='prior')
2023-11-24 15:54:06,363:INFO:create_model() successfully completed......................................
2023-11-24 15:54:06,484:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:06,484:INFO:Creating metrics dataframe
2023-11-24 15:54:06,521:INFO:Initializing create_model()
2023-11-24 15:54:06,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:06,521:INFO:Checking exceptions
2023-11-24 15:54:06,524:INFO:Importing libraries
2023-11-24 15:54:06,524:INFO:Copying training dataset
2023-11-24 15:54:06,524:INFO:Defining folds
2023-11-24 15:54:06,524:INFO:Declaring metric variables
2023-11-24 15:54:06,524:INFO:Importing untrained model
2023-11-24 15:54:06,524:INFO:Declaring custom model
2023-11-24 15:54:06,524:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:54:06,524:INFO:Cross validation set to False
2023-11-24 15:54:06,524:INFO:Fitting Model
2023-11-24 15:54:06,542:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:54:06,542:INFO:create_model() successfully completed......................................
2023-11-24 15:54:06,677:INFO:Initializing create_model()
2023-11-24 15:54:06,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:06,677:INFO:Checking exceptions
2023-11-24 15:54:06,680:INFO:Importing libraries
2023-11-24 15:54:06,680:INFO:Copying training dataset
2023-11-24 15:54:06,685:INFO:Defining folds
2023-11-24 15:54:06,685:INFO:Declaring metric variables
2023-11-24 15:54:06,685:INFO:Importing untrained model
2023-11-24 15:54:06,685:INFO:Declaring custom model
2023-11-24 15:54:06,685:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 15:54:06,685:INFO:Cross validation set to False
2023-11-24 15:54:06,685:INFO:Fitting Model
2023-11-24 15:54:06,732:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000050 seconds.
2023-11-24 15:54:06,732:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-24 15:54:06,732:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-24 15:54:06,732:INFO:[LightGBM] [Info] Total Bins 82
2023-11-24 15:54:06,732:INFO:[LightGBM] [Info] Number of data points in the train set: 105, number of used features: 4
2023-11-24 15:54:06,734:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:06,734:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:06,734:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:06,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:06,851:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 15:54:06,851:INFO:create_model() successfully completed......................................
2023-11-24 15:54:06,989:INFO:Initializing create_model()
2023-11-24 15:54:06,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:06,989:INFO:Checking exceptions
2023-11-24 15:54:06,989:INFO:Importing libraries
2023-11-24 15:54:06,989:INFO:Copying training dataset
2023-11-24 15:54:06,989:INFO:Defining folds
2023-11-24 15:54:06,989:INFO:Declaring metric variables
2023-11-24 15:54:06,989:INFO:Importing untrained model
2023-11-24 15:54:06,989:INFO:Declaring custom model
2023-11-24 15:54:06,989:INFO:K Neighbors Classifier Imported successfully
2023-11-24 15:54:06,989:INFO:Cross validation set to False
2023-11-24 15:54:06,989:INFO:Fitting Model
2023-11-24 15:54:07,004:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 15:54:07,004:INFO:create_model() successfully completed......................................
2023-11-24 15:54:07,140:INFO:Initializing create_model()
2023-11-24 15:54:07,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:07,142:INFO:Checking exceptions
2023-11-24 15:54:07,144:INFO:Importing libraries
2023-11-24 15:54:07,144:INFO:Copying training dataset
2023-11-24 15:54:07,144:INFO:Defining folds
2023-11-24 15:54:07,144:INFO:Declaring metric variables
2023-11-24 15:54:07,144:INFO:Importing untrained model
2023-11-24 15:54:07,144:INFO:Declaring custom model
2023-11-24 15:54:07,144:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 15:54:07,144:INFO:Cross validation set to False
2023-11-24 15:54:07,151:INFO:Fitting Model
2023-11-24 15:54:07,154:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 15:54:07,154:INFO:create_model() successfully completed......................................
2023-11-24 15:54:07,291:INFO:Initializing create_model()
2023-11-24 15:54:07,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:07,291:INFO:Checking exceptions
2023-11-24 15:54:07,293:INFO:Importing libraries
2023-11-24 15:54:07,293:INFO:Copying training dataset
2023-11-24 15:54:07,293:INFO:Defining folds
2023-11-24 15:54:07,293:INFO:Declaring metric variables
2023-11-24 15:54:07,293:INFO:Importing untrained model
2023-11-24 15:54:07,293:INFO:Declaring custom model
2023-11-24 15:54:07,293:INFO:Logistic Regression Imported successfully
2023-11-24 15:54:07,293:INFO:Cross validation set to False
2023-11-24 15:54:07,293:INFO:Fitting Model
2023-11-24 15:54:07,336:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 15:54:07,336:INFO:create_model() successfully completed......................................
2023-11-24 15:54:07,470:INFO:Initializing create_model()
2023-11-24 15:54:07,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:07,470:INFO:Checking exceptions
2023-11-24 15:54:07,472:INFO:Importing libraries
2023-11-24 15:54:07,472:INFO:Copying training dataset
2023-11-24 15:54:07,472:INFO:Defining folds
2023-11-24 15:54:07,472:INFO:Declaring metric variables
2023-11-24 15:54:07,472:INFO:Importing untrained model
2023-11-24 15:54:07,472:INFO:Declaring custom model
2023-11-24 15:54:07,472:INFO:Random Forest Classifier Imported successfully
2023-11-24 15:54:07,472:INFO:Cross validation set to False
2023-11-24 15:54:07,472:INFO:Fitting Model
2023-11-24 15:54:07,717:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:07,717:INFO:create_model() successfully completed......................................
2023-11-24 15:54:07,848:INFO:Initializing create_model()
2023-11-24 15:54:07,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:07,848:INFO:Checking exceptions
2023-11-24 15:54:07,850:INFO:Importing libraries
2023-11-24 15:54:07,850:INFO:Copying training dataset
2023-11-24 15:54:07,857:INFO:Defining folds
2023-11-24 15:54:07,857:INFO:Declaring metric variables
2023-11-24 15:54:07,858:INFO:Importing untrained model
2023-11-24 15:54:07,858:INFO:Declaring custom model
2023-11-24 15:54:07,859:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 15:54:07,860:INFO:Cross validation set to False
2023-11-24 15:54:07,860:INFO:Fitting Model
2023-11-24 15:54:08,208:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 15:54:08,208:INFO:create_model() successfully completed......................................
2023-11-24 15:54:08,341:INFO:Initializing create_model()
2023-11-24 15:54:08,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:08,341:INFO:Checking exceptions
2023-11-24 15:54:08,344:INFO:Importing libraries
2023-11-24 15:54:08,344:INFO:Copying training dataset
2023-11-24 15:54:08,347:INFO:Defining folds
2023-11-24 15:54:08,347:INFO:Declaring metric variables
2023-11-24 15:54:08,347:INFO:Importing untrained model
2023-11-24 15:54:08,347:INFO:Declaring custom model
2023-11-24 15:54:08,347:INFO:Naive Bayes Imported successfully
2023-11-24 15:54:08,347:INFO:Cross validation set to False
2023-11-24 15:54:08,347:INFO:Fitting Model
2023-11-24 15:54:08,358:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 15:54:08,358:INFO:create_model() successfully completed......................................
2023-11-24 15:54:08,479:INFO:Initializing create_model()
2023-11-24 15:54:08,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:08,495:INFO:Checking exceptions
2023-11-24 15:54:08,497:INFO:Importing libraries
2023-11-24 15:54:08,497:INFO:Copying training dataset
2023-11-24 15:54:08,497:INFO:Defining folds
2023-11-24 15:54:08,497:INFO:Declaring metric variables
2023-11-24 15:54:08,497:INFO:Importing untrained model
2023-11-24 15:54:08,497:INFO:Declaring custom model
2023-11-24 15:54:08,497:INFO:Decision Tree Classifier Imported successfully
2023-11-24 15:54:08,497:INFO:Cross validation set to False
2023-11-24 15:54:08,497:INFO:Fitting Model
2023-11-24 15:54:08,509:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best')
2023-11-24 15:54:08,509:INFO:create_model() successfully completed......................................
2023-11-24 15:54:08,645:INFO:Initializing create_model()
2023-11-24 15:54:08,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:08,646:INFO:Checking exceptions
2023-11-24 15:54:08,648:INFO:Importing libraries
2023-11-24 15:54:08,648:INFO:Copying training dataset
2023-11-24 15:54:08,652:INFO:Defining folds
2023-11-24 15:54:08,652:INFO:Declaring metric variables
2023-11-24 15:54:08,652:INFO:Importing untrained model
2023-11-24 15:54:08,652:INFO:Declaring custom model
2023-11-24 15:54:08,652:INFO:Extra Trees Classifier Imported successfully
2023-11-24 15:54:08,652:INFO:Cross validation set to False
2023-11-24 15:54:08,652:INFO:Fitting Model
2023-11-24 15:54:08,839:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:08,839:INFO:create_model() successfully completed......................................
2023-11-24 15:54:08,969:INFO:Initializing create_model()
2023-11-24 15:54:08,969:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:08,969:INFO:Checking exceptions
2023-11-24 15:54:08,976:INFO:Importing libraries
2023-11-24 15:54:08,976:INFO:Copying training dataset
2023-11-24 15:54:08,978:INFO:Defining folds
2023-11-24 15:54:08,978:INFO:Declaring metric variables
2023-11-24 15:54:08,978:INFO:Importing untrained model
2023-11-24 15:54:08,978:INFO:Declaring custom model
2023-11-24 15:54:08,978:INFO:Ada Boost Classifier Imported successfully
2023-11-24 15:54:08,978:INFO:Cross validation set to False
2023-11-24 15:54:08,978:INFO:Fitting Model
2023-11-24 15:54:09,081:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306)
2023-11-24 15:54:09,081:INFO:create_model() successfully completed......................................
2023-11-24 15:54:09,221:INFO:Initializing create_model()
2023-11-24 15:54:09,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:09,221:INFO:Checking exceptions
2023-11-24 15:54:09,223:INFO:Importing libraries
2023-11-24 15:54:09,224:INFO:Copying training dataset
2023-11-24 15:54:09,228:INFO:Defining folds
2023-11-24 15:54:09,228:INFO:Declaring metric variables
2023-11-24 15:54:09,228:INFO:Importing untrained model
2023-11-24 15:54:09,228:INFO:Declaring custom model
2023-11-24 15:54:09,228:INFO:Ridge Classifier Imported successfully
2023-11-24 15:54:09,228:INFO:Cross validation set to False
2023-11-24 15:54:09,228:INFO:Fitting Model
2023-11-24 15:54:09,244:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001)
2023-11-24 15:54:09,244:INFO:create_model() successfully completed......................................
2023-11-24 15:54:09,377:INFO:Initializing create_model()
2023-11-24 15:54:09,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:09,378:INFO:Checking exceptions
2023-11-24 15:54:09,380:INFO:Importing libraries
2023-11-24 15:54:09,380:INFO:Copying training dataset
2023-11-24 15:54:09,381:INFO:Defining folds
2023-11-24 15:54:09,381:INFO:Declaring metric variables
2023-11-24 15:54:09,381:INFO:Importing untrained model
2023-11-24 15:54:09,381:INFO:Declaring custom model
2023-11-24 15:54:09,381:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 15:54:09,381:INFO:Cross validation set to False
2023-11-24 15:54:09,381:INFO:Fitting Model
2023-11-24 15:54:09,417:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 15:54:09,417:INFO:create_model() successfully completed......................................
2023-11-24 15:54:09,531:INFO:Initializing create_model()
2023-11-24 15:54:09,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=DummyClassifier(constant=None, random_state=306, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:09,545:INFO:Checking exceptions
2023-11-24 15:54:09,547:INFO:Importing libraries
2023-11-24 15:54:09,547:INFO:Copying training dataset
2023-11-24 15:54:09,547:INFO:Defining folds
2023-11-24 15:54:09,547:INFO:Declaring metric variables
2023-11-24 15:54:09,547:INFO:Importing untrained model
2023-11-24 15:54:09,547:INFO:Declaring custom model
2023-11-24 15:54:09,547:INFO:Dummy Classifier Imported successfully
2023-11-24 15:54:09,547:INFO:Cross validation set to False
2023-11-24 15:54:09,547:INFO:Fitting Model
2023-11-24 15:54:09,562:INFO:DummyClassifier(constant=None, random_state=306, strategy='prior')
2023-11-24 15:54:09,562:INFO:create_model() successfully completed......................................
2023-11-24 15:54:09,732:INFO:_master_model_container: 28
2023-11-24 15:54:09,732:INFO:_display_container: 3
2023-11-24 15:54:09,736:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best'), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), DummyClassifier(constant=None, random_state=306, strategy='prior')]
2023-11-24 15:54:09,737:INFO:compare_models() successfully completed......................................
2023-11-24 15:54:28,395:INFO:Initializing compare_models()
2023-11-24 15:54:28,395:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 15:54:28,395:INFO:Checking exceptions
2023-11-24 15:54:28,400:INFO:Preparing display monitor
2023-11-24 15:54:28,430:INFO:Initializing Logistic Regression
2023-11-24 15:54:28,430:INFO:Total runtime is 0.0 minutes
2023-11-24 15:54:28,430:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:28,430:INFO:Initializing create_model()
2023-11-24 15:54:28,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:28,430:INFO:Checking exceptions
2023-11-24 15:54:28,430:INFO:Importing libraries
2023-11-24 15:54:28,430:INFO:Copying training dataset
2023-11-24 15:54:28,448:INFO:Defining folds
2023-11-24 15:54:28,448:INFO:Declaring metric variables
2023-11-24 15:54:28,453:INFO:Importing untrained model
2023-11-24 15:54:28,459:INFO:Logistic Regression Imported successfully
2023-11-24 15:54:28,498:INFO:Starting cross validation
2023-11-24 15:54:28,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:28,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,617:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,621:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,628:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,631:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,635:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,688:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,688:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,691:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,692:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,694:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,695:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,769:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,775:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,782:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,784:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,787:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,793:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,861:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,866:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,920:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,922:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,926:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,932:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:28,947:INFO:Calculating mean and std
2023-11-24 15:54:28,948:INFO:Creating metrics dataframe
2023-11-24 15:54:28,953:INFO:Uploading results into container
2023-11-24 15:54:28,953:INFO:Uploading model into container now
2023-11-24 15:54:28,953:INFO:_master_model_container: 29
2023-11-24 15:54:28,953:INFO:_display_container: 4
2023-11-24 15:54:28,953:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 15:54:28,953:INFO:create_model() successfully completed......................................
2023-11-24 15:54:29,171:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:29,171:INFO:Creating metrics dataframe
2023-11-24 15:54:29,201:INFO:Initializing K Neighbors Classifier
2023-11-24 15:54:29,201:INFO:Total runtime is 0.012856666247049968 minutes
2023-11-24 15:54:29,205:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:29,205:INFO:Initializing create_model()
2023-11-24 15:54:29,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:29,205:INFO:Checking exceptions
2023-11-24 15:54:29,205:INFO:Importing libraries
2023-11-24 15:54:29,205:INFO:Copying training dataset
2023-11-24 15:54:29,205:INFO:Defining folds
2023-11-24 15:54:29,205:INFO:Declaring metric variables
2023-11-24 15:54:29,241:INFO:Importing untrained model
2023-11-24 15:54:29,247:INFO:K Neighbors Classifier Imported successfully
2023-11-24 15:54:29,254:INFO:Starting cross validation
2023-11-24 15:54:29,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,335:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,345:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,345:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,357:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,415:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,417:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,418:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,418:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,421:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,442:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,449:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,452:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,476:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,485:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,485:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,485:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,485:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,505:INFO:Calculating mean and std
2023-11-24 15:54:29,505:INFO:Creating metrics dataframe
2023-11-24 15:54:29,505:INFO:Uploading results into container
2023-11-24 15:54:29,505:INFO:Uploading model into container now
2023-11-24 15:54:29,514:INFO:_master_model_container: 30
2023-11-24 15:54:29,514:INFO:_display_container: 4
2023-11-24 15:54:29,515:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 15:54:29,515:INFO:create_model() successfully completed......................................
2023-11-24 15:54:29,633:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:29,633:INFO:Creating metrics dataframe
2023-11-24 15:54:29,650:INFO:Initializing Naive Bayes
2023-11-24 15:54:29,650:INFO:Total runtime is 0.020333162943522137 minutes
2023-11-24 15:54:29,650:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:29,650:INFO:Initializing create_model()
2023-11-24 15:54:29,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:29,650:INFO:Checking exceptions
2023-11-24 15:54:29,650:INFO:Importing libraries
2023-11-24 15:54:29,650:INFO:Copying training dataset
2023-11-24 15:54:29,650:INFO:Defining folds
2023-11-24 15:54:29,650:INFO:Declaring metric variables
2023-11-24 15:54:29,666:INFO:Importing untrained model
2023-11-24 15:54:29,673:INFO:Naive Bayes Imported successfully
2023-11-24 15:54:29,685:INFO:Starting cross validation
2023-11-24 15:54:29,686:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:29,726:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,729:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,731:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,731:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,733:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,736:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,736:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,737:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,743:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,784:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,815:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,819:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:29,825:INFO:Calculating mean and std
2023-11-24 15:54:29,825:INFO:Creating metrics dataframe
2023-11-24 15:54:29,835:INFO:Uploading results into container
2023-11-24 15:54:29,835:INFO:Uploading model into container now
2023-11-24 15:54:29,835:INFO:_master_model_container: 31
2023-11-24 15:54:29,835:INFO:_display_container: 4
2023-11-24 15:54:29,835:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 15:54:29,835:INFO:create_model() successfully completed......................................
2023-11-24 15:54:29,953:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:29,953:INFO:Creating metrics dataframe
2023-11-24 15:54:29,968:INFO:Initializing Decision Tree Classifier
2023-11-24 15:54:29,968:INFO:Total runtime is 0.025645021597544355 minutes
2023-11-24 15:54:29,968:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:29,968:INFO:Initializing create_model()
2023-11-24 15:54:29,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:29,968:INFO:Checking exceptions
2023-11-24 15:54:29,968:INFO:Importing libraries
2023-11-24 15:54:29,968:INFO:Copying training dataset
2023-11-24 15:54:29,984:INFO:Defining folds
2023-11-24 15:54:29,984:INFO:Declaring metric variables
2023-11-24 15:54:29,984:INFO:Importing untrained model
2023-11-24 15:54:29,995:INFO:Decision Tree Classifier Imported successfully
2023-11-24 15:54:30,008:INFO:Starting cross validation
2023-11-24 15:54:30,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:30,053:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,053:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,054:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,056:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,056:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,057:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,062:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,062:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,065:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,073:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,095:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,105:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,105:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,105:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,105:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,115:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,135:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,138:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,138:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,138:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,138:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,157:INFO:Calculating mean and std
2023-11-24 15:54:30,157:INFO:Creating metrics dataframe
2023-11-24 15:54:30,157:INFO:Uploading results into container
2023-11-24 15:54:30,157:INFO:Uploading model into container now
2023-11-24 15:54:30,157:INFO:_master_model_container: 32
2023-11-24 15:54:30,157:INFO:_display_container: 4
2023-11-24 15:54:30,157:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best')
2023-11-24 15:54:30,157:INFO:create_model() successfully completed......................................
2023-11-24 15:54:30,285:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:30,285:INFO:Creating metrics dataframe
2023-11-24 15:54:30,303:INFO:Initializing SVM - Linear Kernel
2023-11-24 15:54:30,304:INFO:Total runtime is 0.0312429149945577 minutes
2023-11-24 15:54:30,310:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:30,310:INFO:Initializing create_model()
2023-11-24 15:54:30,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:30,310:INFO:Checking exceptions
2023-11-24 15:54:30,310:INFO:Importing libraries
2023-11-24 15:54:30,310:INFO:Copying training dataset
2023-11-24 15:54:30,323:INFO:Defining folds
2023-11-24 15:54:30,323:INFO:Declaring metric variables
2023-11-24 15:54:30,330:INFO:Importing untrained model
2023-11-24 15:54:30,343:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 15:54:30,355:INFO:Starting cross validation
2023-11-24 15:54:30,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:30,429:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,429:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,430:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,430:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,435:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,437:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,437:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,439:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,441:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,443:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,448:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,449:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:30,459:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,505:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,507:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,511:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,511:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,513:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,514:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,514:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,516:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,517:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,520:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,525:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,525:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,527:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:30,527:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,529:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,530:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,534:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:30,538:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,563:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,566:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 15:54:30,569:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,570:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,572:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:30,574:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,574:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,576:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:30,578:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,593:INFO:Calculating mean and std
2023-11-24 15:54:30,595:INFO:Creating metrics dataframe
2023-11-24 15:54:30,601:INFO:Uploading results into container
2023-11-24 15:54:30,602:INFO:Uploading model into container now
2023-11-24 15:54:30,604:INFO:_master_model_container: 33
2023-11-24 15:54:30,604:INFO:_display_container: 4
2023-11-24 15:54:30,605:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 15:54:30,605:INFO:create_model() successfully completed......................................
2023-11-24 15:54:30,722:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:30,722:INFO:Creating metrics dataframe
2023-11-24 15:54:30,737:INFO:Initializing Ridge Classifier
2023-11-24 15:54:30,737:INFO:Total runtime is 0.03846321105957031 minutes
2023-11-24 15:54:30,737:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:30,750:INFO:Initializing create_model()
2023-11-24 15:54:30,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:30,750:INFO:Checking exceptions
2023-11-24 15:54:30,751:INFO:Importing libraries
2023-11-24 15:54:30,751:INFO:Copying training dataset
2023-11-24 15:54:30,758:INFO:Defining folds
2023-11-24 15:54:30,758:INFO:Declaring metric variables
2023-11-24 15:54:30,762:INFO:Importing untrained model
2023-11-24 15:54:30,771:INFO:Ridge Classifier Imported successfully
2023-11-24 15:54:30,774:INFO:Starting cross validation
2023-11-24 15:54:30,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:30,820:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,821:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,824:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,825:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,826:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,827:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,827:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,828:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,829:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,829:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,830:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,837:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,863:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,864:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,865:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,868:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,872:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,888:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,888:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,908:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:30,918:INFO:Calculating mean and std
2023-11-24 15:54:30,918:INFO:Creating metrics dataframe
2023-11-24 15:54:30,928:INFO:Uploading results into container
2023-11-24 15:54:30,928:INFO:Uploading model into container now
2023-11-24 15:54:30,928:INFO:_master_model_container: 34
2023-11-24 15:54:30,928:INFO:_display_container: 4
2023-11-24 15:54:30,928:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001)
2023-11-24 15:54:30,928:INFO:create_model() successfully completed......................................
2023-11-24 15:54:31,043:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:31,043:INFO:Creating metrics dataframe
2023-11-24 15:54:31,058:INFO:Initializing Random Forest Classifier
2023-11-24 15:54:31,058:INFO:Total runtime is 0.043813637892405194 minutes
2023-11-24 15:54:31,071:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:31,072:INFO:Initializing create_model()
2023-11-24 15:54:31,072:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:31,072:INFO:Checking exceptions
2023-11-24 15:54:31,072:INFO:Importing libraries
2023-11-24 15:54:31,072:INFO:Copying training dataset
2023-11-24 15:54:31,079:INFO:Defining folds
2023-11-24 15:54:31,079:INFO:Declaring metric variables
2023-11-24 15:54:31,084:INFO:Importing untrained model
2023-11-24 15:54:31,093:INFO:Random Forest Classifier Imported successfully
2023-11-24 15:54:31,106:INFO:Starting cross validation
2023-11-24 15:54:31,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:31,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,414:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,425:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,425:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,432:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,436:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,450:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,744:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,749:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,749:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,749:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,753:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,754:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,760:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,760:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,765:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,768:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:31,768:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,058:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,069:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,069:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,089:INFO:Calculating mean and std
2023-11-24 15:54:32,089:INFO:Creating metrics dataframe
2023-11-24 15:54:32,089:INFO:Uploading results into container
2023-11-24 15:54:32,089:INFO:Uploading model into container now
2023-11-24 15:54:32,089:INFO:_master_model_container: 35
2023-11-24 15:54:32,089:INFO:_display_container: 4
2023-11-24 15:54:32,089:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:32,089:INFO:create_model() successfully completed......................................
2023-11-24 15:54:32,262:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:32,262:INFO:Creating metrics dataframe
2023-11-24 15:54:32,281:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 15:54:32,281:INFO:Total runtime is 0.06418443123499552 minutes
2023-11-24 15:54:32,281:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:32,281:INFO:Initializing create_model()
2023-11-24 15:54:32,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:32,281:INFO:Checking exceptions
2023-11-24 15:54:32,281:INFO:Importing libraries
2023-11-24 15:54:32,281:INFO:Copying training dataset
2023-11-24 15:54:32,281:INFO:Defining folds
2023-11-24 15:54:32,281:INFO:Declaring metric variables
2023-11-24 15:54:32,300:INFO:Importing untrained model
2023-11-24 15:54:32,306:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:54:32,315:INFO:Starting cross validation
2023-11-24 15:54:32,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:32,359:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,360:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,383:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,412:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,422:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,422:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,446:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,446:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,446:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,446:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,452:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,462:INFO:Calculating mean and std
2023-11-24 15:54:32,462:INFO:Creating metrics dataframe
2023-11-24 15:54:32,471:INFO:Uploading results into container
2023-11-24 15:54:32,472:INFO:Uploading model into container now
2023-11-24 15:54:32,472:INFO:_master_model_container: 36
2023-11-24 15:54:32,472:INFO:_display_container: 4
2023-11-24 15:54:32,472:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:54:32,472:INFO:create_model() successfully completed......................................
2023-11-24 15:54:32,595:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:32,596:INFO:Creating metrics dataframe
2023-11-24 15:54:32,602:INFO:Initializing Ada Boost Classifier
2023-11-24 15:54:32,602:INFO:Total runtime is 0.06953832308451334 minutes
2023-11-24 15:54:32,617:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:32,617:INFO:Initializing create_model()
2023-11-24 15:54:32,617:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:32,617:INFO:Checking exceptions
2023-11-24 15:54:32,617:INFO:Importing libraries
2023-11-24 15:54:32,617:INFO:Copying training dataset
2023-11-24 15:54:32,617:INFO:Defining folds
2023-11-24 15:54:32,617:INFO:Declaring metric variables
2023-11-24 15:54:32,630:INFO:Importing untrained model
2023-11-24 15:54:32,630:INFO:Ada Boost Classifier Imported successfully
2023-11-24 15:54:32,649:INFO:Starting cross validation
2023-11-24 15:54:32,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:32,830:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,834:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,837:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,877:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,880:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,882:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,884:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,894:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,898:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:32,901:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,133:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,133:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,140:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,148:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,155:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,155:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,155:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,177:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,177:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,177:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,177:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,194:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,304:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,314:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,314:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,314:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,324:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,324:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,335:INFO:Calculating mean and std
2023-11-24 15:54:33,335:INFO:Creating metrics dataframe
2023-11-24 15:54:33,335:INFO:Uploading results into container
2023-11-24 15:54:33,335:INFO:Uploading model into container now
2023-11-24 15:54:33,335:INFO:_master_model_container: 37
2023-11-24 15:54:33,335:INFO:_display_container: 4
2023-11-24 15:54:33,335:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306)
2023-11-24 15:54:33,335:INFO:create_model() successfully completed......................................
2023-11-24 15:54:33,468:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:33,468:INFO:Creating metrics dataframe
2023-11-24 15:54:33,489:INFO:Initializing Gradient Boosting Classifier
2023-11-24 15:54:33,490:INFO:Total runtime is 0.08434155782063801 minutes
2023-11-24 15:54:33,494:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:33,494:INFO:Initializing create_model()
2023-11-24 15:54:33,494:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:33,495:INFO:Checking exceptions
2023-11-24 15:54:33,495:INFO:Importing libraries
2023-11-24 15:54:33,496:INFO:Copying training dataset
2023-11-24 15:54:33,496:INFO:Defining folds
2023-11-24 15:54:33,496:INFO:Declaring metric variables
2023-11-24 15:54:33,496:INFO:Importing untrained model
2023-11-24 15:54:33,512:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 15:54:33,524:INFO:Starting cross validation
2023-11-24 15:54:33,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:33,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,986:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,988:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:33,994:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,006:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,009:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,012:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,035:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,039:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,042:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,453:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,453:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,453:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,475:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,515:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,515:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,525:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,881:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:34,901:INFO:Calculating mean and std
2023-11-24 15:54:34,901:INFO:Creating metrics dataframe
2023-11-24 15:54:34,909:INFO:Uploading results into container
2023-11-24 15:54:34,909:INFO:Uploading model into container now
2023-11-24 15:54:34,909:INFO:_master_model_container: 38
2023-11-24 15:54:34,909:INFO:_display_container: 4
2023-11-24 15:54:34,909:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 15:54:34,909:INFO:create_model() successfully completed......................................
2023-11-24 15:54:35,028:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:35,028:INFO:Creating metrics dataframe
2023-11-24 15:54:35,043:INFO:Initializing Linear Discriminant Analysis
2023-11-24 15:54:35,043:INFO:Total runtime is 0.11022942066192626 minutes
2023-11-24 15:54:35,059:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:35,059:INFO:Initializing create_model()
2023-11-24 15:54:35,059:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:35,059:INFO:Checking exceptions
2023-11-24 15:54:35,059:INFO:Importing libraries
2023-11-24 15:54:35,059:INFO:Copying training dataset
2023-11-24 15:54:35,059:INFO:Defining folds
2023-11-24 15:54:35,059:INFO:Declaring metric variables
2023-11-24 15:54:35,075:INFO:Importing untrained model
2023-11-24 15:54:35,080:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 15:54:35,092:INFO:Starting cross validation
2023-11-24 15:54:35,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:35,137:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,137:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,140:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,140:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,140:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,144:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,146:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,146:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,146:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,150:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,152:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,162:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,182:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,186:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,189:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,194:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,198:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,204:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,210:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,210:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,210:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,215:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,220:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,220:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,237:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,241:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,256:INFO:Calculating mean and std
2023-11-24 15:54:35,258:INFO:Creating metrics dataframe
2023-11-24 15:54:35,263:INFO:Uploading results into container
2023-11-24 15:54:35,264:INFO:Uploading model into container now
2023-11-24 15:54:35,264:INFO:_master_model_container: 39
2023-11-24 15:54:35,264:INFO:_display_container: 4
2023-11-24 15:54:35,265:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 15:54:35,265:INFO:create_model() successfully completed......................................
2023-11-24 15:54:35,426:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:35,426:INFO:Creating metrics dataframe
2023-11-24 15:54:35,445:INFO:Initializing Extra Trees Classifier
2023-11-24 15:54:35,453:INFO:Total runtime is 0.11705246369043985 minutes
2023-11-24 15:54:35,459:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:35,460:INFO:Initializing create_model()
2023-11-24 15:54:35,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:35,460:INFO:Checking exceptions
2023-11-24 15:54:35,460:INFO:Importing libraries
2023-11-24 15:54:35,460:INFO:Copying training dataset
2023-11-24 15:54:35,466:INFO:Defining folds
2023-11-24 15:54:35,466:INFO:Declaring metric variables
2023-11-24 15:54:35,473:INFO:Importing untrained model
2023-11-24 15:54:35,478:INFO:Extra Trees Classifier Imported successfully
2023-11-24 15:54:35,506:INFO:Starting cross validation
2023-11-24 15:54:35,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:35,802:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,806:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,808:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,809:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,814:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,840:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,843:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,846:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,929:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:35,934:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,098:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,108:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,108:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,155:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,159:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,162:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,290:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,300:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,300:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,307:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,310:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,320:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,424:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,428:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,445:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,445:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,445:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,466:INFO:Calculating mean and std
2023-11-24 15:54:36,466:INFO:Creating metrics dataframe
2023-11-24 15:54:36,476:INFO:Uploading results into container
2023-11-24 15:54:36,476:INFO:Uploading model into container now
2023-11-24 15:54:36,476:INFO:_master_model_container: 40
2023-11-24 15:54:36,476:INFO:_display_container: 4
2023-11-24 15:54:36,476:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:36,476:INFO:create_model() successfully completed......................................
2023-11-24 15:54:36,608:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:36,608:INFO:Creating metrics dataframe
2023-11-24 15:54:36,628:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 15:54:36,629:INFO:Total runtime is 0.13665165106455485 minutes
2023-11-24 15:54:36,635:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:36,635:INFO:Initializing create_model()
2023-11-24 15:54:36,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:36,635:INFO:Checking exceptions
2023-11-24 15:54:36,635:INFO:Importing libraries
2023-11-24 15:54:36,635:INFO:Copying training dataset
2023-11-24 15:54:36,641:INFO:Defining folds
2023-11-24 15:54:36,642:INFO:Declaring metric variables
2023-11-24 15:54:36,649:INFO:Importing untrained model
2023-11-24 15:54:36,656:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 15:54:36,667:INFO:Starting cross validation
2023-11-24 15:54:36,668:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:36,985:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,989:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,989:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,994:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,994:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:36,998:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,062:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,070:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,157:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,167:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,167:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,354:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,439:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,443:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,449:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,518:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,518:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,528:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,602:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,602:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,615:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,615:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,622:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,622:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,632:INFO:Calculating mean and std
2023-11-24 15:54:37,635:INFO:Creating metrics dataframe
2023-11-24 15:54:37,640:INFO:Uploading results into container
2023-11-24 15:54:37,640:INFO:Uploading model into container now
2023-11-24 15:54:37,640:INFO:_master_model_container: 41
2023-11-24 15:54:37,640:INFO:_display_container: 4
2023-11-24 15:54:37,640:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 15:54:37,640:INFO:create_model() successfully completed......................................
2023-11-24 15:54:37,780:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:37,780:INFO:Creating metrics dataframe
2023-11-24 15:54:37,800:INFO:Initializing Dummy Classifier
2023-11-24 15:54:37,800:INFO:Total runtime is 0.15618138710657756 minutes
2023-11-24 15:54:37,806:INFO:SubProcess create_model() called ==================================
2023-11-24 15:54:37,806:INFO:Initializing create_model()
2023-11-24 15:54:37,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192BE3BBA50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:37,807:INFO:Checking exceptions
2023-11-24 15:54:37,807:INFO:Importing libraries
2023-11-24 15:54:37,807:INFO:Copying training dataset
2023-11-24 15:54:37,813:INFO:Defining folds
2023-11-24 15:54:37,814:INFO:Declaring metric variables
2023-11-24 15:54:37,818:INFO:Importing untrained model
2023-11-24 15:54:37,823:INFO:Dummy Classifier Imported successfully
2023-11-24 15:54:37,836:INFO:Starting cross validation
2023-11-24 15:54:37,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 15:54:37,873:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,877:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,881:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,882:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,885:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,885:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,889:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,916:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,919:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,921:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,926:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,935:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,935:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,937:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,937:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,940:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,962:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,965:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,988:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,993:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:37,994:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 15:54:37,998:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 15:54:38,008:INFO:Calculating mean and std
2023-11-24 15:54:38,010:INFO:Creating metrics dataframe
2023-11-24 15:54:38,016:INFO:Uploading results into container
2023-11-24 15:54:38,019:INFO:Uploading model into container now
2023-11-24 15:54:38,019:INFO:_master_model_container: 42
2023-11-24 15:54:38,019:INFO:_display_container: 4
2023-11-24 15:54:38,019:INFO:DummyClassifier(constant=None, random_state=306, strategy='prior')
2023-11-24 15:54:38,019:INFO:create_model() successfully completed......................................
2023-11-24 15:54:38,204:INFO:SubProcess create_model() end ==================================
2023-11-24 15:54:38,204:INFO:Creating metrics dataframe
2023-11-24 15:54:38,241:INFO:Initializing create_model()
2023-11-24 15:54:38,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:38,246:INFO:Checking exceptions
2023-11-24 15:54:38,249:INFO:Importing libraries
2023-11-24 15:54:38,249:INFO:Copying training dataset
2023-11-24 15:54:38,249:INFO:Defining folds
2023-11-24 15:54:38,249:INFO:Declaring metric variables
2023-11-24 15:54:38,249:INFO:Importing untrained model
2023-11-24 15:54:38,249:INFO:Declaring custom model
2023-11-24 15:54:38,249:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 15:54:38,249:INFO:Cross validation set to False
2023-11-24 15:54:38,249:INFO:Fitting Model
2023-11-24 15:54:38,271:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 15:54:38,271:INFO:create_model() successfully completed......................................
2023-11-24 15:54:38,417:INFO:Initializing create_model()
2023-11-24 15:54:38,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:38,417:INFO:Checking exceptions
2023-11-24 15:54:38,420:INFO:Importing libraries
2023-11-24 15:54:38,420:INFO:Copying training dataset
2023-11-24 15:54:38,420:INFO:Defining folds
2023-11-24 15:54:38,420:INFO:Declaring metric variables
2023-11-24 15:54:38,420:INFO:Importing untrained model
2023-11-24 15:54:38,420:INFO:Declaring custom model
2023-11-24 15:54:38,420:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 15:54:38,420:INFO:Cross validation set to False
2023-11-24 15:54:38,420:INFO:Fitting Model
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000047 seconds.
2023-11-24 15:54:38,436:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Total Bins 82
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Number of data points in the train set: 105, number of used features: 4
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:38,436:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 15:54:38,520:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 15:54:38,520:INFO:create_model() successfully completed......................................
2023-11-24 15:54:38,653:INFO:Initializing create_model()
2023-11-24 15:54:38,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:38,653:INFO:Checking exceptions
2023-11-24 15:54:38,656:INFO:Importing libraries
2023-11-24 15:54:38,656:INFO:Copying training dataset
2023-11-24 15:54:38,656:INFO:Defining folds
2023-11-24 15:54:38,656:INFO:Declaring metric variables
2023-11-24 15:54:38,656:INFO:Importing untrained model
2023-11-24 15:54:38,656:INFO:Declaring custom model
2023-11-24 15:54:38,656:INFO:K Neighbors Classifier Imported successfully
2023-11-24 15:54:38,656:INFO:Cross validation set to False
2023-11-24 15:54:38,656:INFO:Fitting Model
2023-11-24 15:54:38,667:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 15:54:38,667:INFO:create_model() successfully completed......................................
2023-11-24 15:54:38,788:INFO:Initializing create_model()
2023-11-24 15:54:38,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:38,802:INFO:Checking exceptions
2023-11-24 15:54:38,804:INFO:Importing libraries
2023-11-24 15:54:38,804:INFO:Copying training dataset
2023-11-24 15:54:38,804:INFO:Defining folds
2023-11-24 15:54:38,804:INFO:Declaring metric variables
2023-11-24 15:54:38,804:INFO:Importing untrained model
2023-11-24 15:54:38,804:INFO:Declaring custom model
2023-11-24 15:54:38,804:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 15:54:38,804:INFO:Cross validation set to False
2023-11-24 15:54:38,804:INFO:Fitting Model
2023-11-24 15:54:38,821:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 15:54:38,821:INFO:create_model() successfully completed......................................
2023-11-24 15:54:38,952:INFO:Initializing create_model()
2023-11-24 15:54:38,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:38,952:INFO:Checking exceptions
2023-11-24 15:54:38,954:INFO:Importing libraries
2023-11-24 15:54:38,954:INFO:Copying training dataset
2023-11-24 15:54:38,954:INFO:Defining folds
2023-11-24 15:54:38,954:INFO:Declaring metric variables
2023-11-24 15:54:38,954:INFO:Importing untrained model
2023-11-24 15:54:38,954:INFO:Declaring custom model
2023-11-24 15:54:38,954:INFO:Logistic Regression Imported successfully
2023-11-24 15:54:38,954:INFO:Cross validation set to False
2023-11-24 15:54:38,954:INFO:Fitting Model
2023-11-24 15:54:39,000:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 15:54:39,000:INFO:create_model() successfully completed......................................
2023-11-24 15:54:39,131:INFO:Initializing create_model()
2023-11-24 15:54:39,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:39,132:INFO:Checking exceptions
2023-11-24 15:54:39,134:INFO:Importing libraries
2023-11-24 15:54:39,134:INFO:Copying training dataset
2023-11-24 15:54:39,139:INFO:Defining folds
2023-11-24 15:54:39,140:INFO:Declaring metric variables
2023-11-24 15:54:39,140:INFO:Importing untrained model
2023-11-24 15:54:39,140:INFO:Declaring custom model
2023-11-24 15:54:39,140:INFO:Random Forest Classifier Imported successfully
2023-11-24 15:54:39,140:INFO:Cross validation set to False
2023-11-24 15:54:39,140:INFO:Fitting Model
2023-11-24 15:54:39,378:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:39,378:INFO:create_model() successfully completed......................................
2023-11-24 15:54:39,522:INFO:Initializing create_model()
2023-11-24 15:54:39,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:39,522:INFO:Checking exceptions
2023-11-24 15:54:39,522:INFO:Importing libraries
2023-11-24 15:54:39,522:INFO:Copying training dataset
2023-11-24 15:54:39,534:INFO:Defining folds
2023-11-24 15:54:39,534:INFO:Declaring metric variables
2023-11-24 15:54:39,535:INFO:Importing untrained model
2023-11-24 15:54:39,535:INFO:Declaring custom model
2023-11-24 15:54:39,536:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 15:54:39,537:INFO:Cross validation set to False
2023-11-24 15:54:39,537:INFO:Fitting Model
2023-11-24 15:54:39,904:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 15:54:39,904:INFO:create_model() successfully completed......................................
2023-11-24 15:54:40,037:INFO:Initializing create_model()
2023-11-24 15:54:40,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:40,038:INFO:Checking exceptions
2023-11-24 15:54:40,041:INFO:Importing libraries
2023-11-24 15:54:40,041:INFO:Copying training dataset
2023-11-24 15:54:40,043:INFO:Defining folds
2023-11-24 15:54:40,043:INFO:Declaring metric variables
2023-11-24 15:54:40,043:INFO:Importing untrained model
2023-11-24 15:54:40,043:INFO:Declaring custom model
2023-11-24 15:54:40,043:INFO:Naive Bayes Imported successfully
2023-11-24 15:54:40,043:INFO:Cross validation set to False
2023-11-24 15:54:40,043:INFO:Fitting Model
2023-11-24 15:54:40,055:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 15:54:40,055:INFO:create_model() successfully completed......................................
2023-11-24 15:54:40,189:INFO:Initializing create_model()
2023-11-24 15:54:40,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:40,189:INFO:Checking exceptions
2023-11-24 15:54:40,191:INFO:Importing libraries
2023-11-24 15:54:40,191:INFO:Copying training dataset
2023-11-24 15:54:40,195:INFO:Defining folds
2023-11-24 15:54:40,195:INFO:Declaring metric variables
2023-11-24 15:54:40,195:INFO:Importing untrained model
2023-11-24 15:54:40,195:INFO:Declaring custom model
2023-11-24 15:54:40,195:INFO:Decision Tree Classifier Imported successfully
2023-11-24 15:54:40,195:INFO:Cross validation set to False
2023-11-24 15:54:40,195:INFO:Fitting Model
2023-11-24 15:54:40,206:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best')
2023-11-24 15:54:40,206:INFO:create_model() successfully completed......................................
2023-11-24 15:54:40,342:INFO:Initializing create_model()
2023-11-24 15:54:40,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:40,342:INFO:Checking exceptions
2023-11-24 15:54:40,355:INFO:Importing libraries
2023-11-24 15:54:40,355:INFO:Copying training dataset
2023-11-24 15:54:40,360:INFO:Defining folds
2023-11-24 15:54:40,360:INFO:Declaring metric variables
2023-11-24 15:54:40,360:INFO:Importing untrained model
2023-11-24 15:54:40,360:INFO:Declaring custom model
2023-11-24 15:54:40,360:INFO:Extra Trees Classifier Imported successfully
2023-11-24 15:54:40,360:INFO:Cross validation set to False
2023-11-24 15:54:40,360:INFO:Fitting Model
2023-11-24 15:54:40,551:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False)
2023-11-24 15:54:40,551:INFO:create_model() successfully completed......................................
2023-11-24 15:54:40,740:INFO:Initializing create_model()
2023-11-24 15:54:40,746:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:40,746:INFO:Checking exceptions
2023-11-24 15:54:40,747:INFO:Importing libraries
2023-11-24 15:54:40,747:INFO:Copying training dataset
2023-11-24 15:54:40,747:INFO:Defining folds
2023-11-24 15:54:40,747:INFO:Declaring metric variables
2023-11-24 15:54:40,747:INFO:Importing untrained model
2023-11-24 15:54:40,747:INFO:Declaring custom model
2023-11-24 15:54:40,747:INFO:Ada Boost Classifier Imported successfully
2023-11-24 15:54:40,747:INFO:Cross validation set to False
2023-11-24 15:54:40,747:INFO:Fitting Model
2023-11-24 15:54:40,866:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306)
2023-11-24 15:54:40,866:INFO:create_model() successfully completed......................................
2023-11-24 15:54:41,007:INFO:Initializing create_model()
2023-11-24 15:54:41,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:41,007:INFO:Checking exceptions
2023-11-24 15:54:41,014:INFO:Importing libraries
2023-11-24 15:54:41,014:INFO:Copying training dataset
2023-11-24 15:54:41,014:INFO:Defining folds
2023-11-24 15:54:41,014:INFO:Declaring metric variables
2023-11-24 15:54:41,014:INFO:Importing untrained model
2023-11-24 15:54:41,014:INFO:Declaring custom model
2023-11-24 15:54:41,014:INFO:Ridge Classifier Imported successfully
2023-11-24 15:54:41,014:INFO:Cross validation set to False
2023-11-24 15:54:41,014:INFO:Fitting Model
2023-11-24 15:54:41,025:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001)
2023-11-24 15:54:41,025:INFO:create_model() successfully completed......................................
2023-11-24 15:54:41,161:INFO:Initializing create_model()
2023-11-24 15:54:41,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:41,161:INFO:Checking exceptions
2023-11-24 15:54:41,161:INFO:Importing libraries
2023-11-24 15:54:41,161:INFO:Copying training dataset
2023-11-24 15:54:41,161:INFO:Defining folds
2023-11-24 15:54:41,161:INFO:Declaring metric variables
2023-11-24 15:54:41,161:INFO:Importing untrained model
2023-11-24 15:54:41,161:INFO:Declaring custom model
2023-11-24 15:54:41,173:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 15:54:41,175:INFO:Cross validation set to False
2023-11-24 15:54:41,175:INFO:Fitting Model
2023-11-24 15:54:41,201:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 15:54:41,202:INFO:create_model() successfully completed......................................
2023-11-24 15:54:41,336:INFO:Initializing create_model()
2023-11-24 15:54:41,336:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=DummyClassifier(constant=None, random_state=306, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 15:54:41,336:INFO:Checking exceptions
2023-11-24 15:54:41,339:INFO:Importing libraries
2023-11-24 15:54:41,339:INFO:Copying training dataset
2023-11-24 15:54:41,344:INFO:Defining folds
2023-11-24 15:54:41,344:INFO:Declaring metric variables
2023-11-24 15:54:41,344:INFO:Importing untrained model
2023-11-24 15:54:41,345:INFO:Declaring custom model
2023-11-24 15:54:41,345:INFO:Dummy Classifier Imported successfully
2023-11-24 15:54:41,346:INFO:Cross validation set to False
2023-11-24 15:54:41,346:INFO:Fitting Model
2023-11-24 15:54:41,360:INFO:DummyClassifier(constant=None, random_state=306, strategy='prior')
2023-11-24 15:54:41,361:INFO:create_model() successfully completed......................................
2023-11-24 15:54:41,511:INFO:_master_model_container: 42
2023-11-24 15:54:41,511:INFO:_display_container: 4
2023-11-24 15:54:41,528:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=306, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=306, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=306, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=306, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=306, splitter='best'), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=306, verbose=0, warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=306), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=306, solver='auto',
                tol=0.0001), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=306, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), DummyClassifier(constant=None, random_state=306, strategy='prior')]
2023-11-24 15:54:41,529:INFO:compare_models() successfully completed......................................
2023-11-24 16:01:01,827:INFO:Initializing predict_model()
2023-11-24 16:01:01,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA0ABCE0>)
2023-11-24 16:01:01,827:INFO:Checking exceptions
2023-11-24 16:01:01,827:INFO:Preloading libraries
2023-11-24 16:01:01,827:INFO:Set up data.
2023-11-24 16:01:01,827:INFO:Set up index.
2023-11-24 16:02:33,306:INFO:Initializing predict_model()
2023-11-24 16:02:33,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192ABC676A0>)
2023-11-24 16:02:33,306:INFO:Checking exceptions
2023-11-24 16:02:33,306:INFO:Preloading libraries
2023-11-24 16:02:33,306:INFO:Set up data.
2023-11-24 16:02:33,306:INFO:Set up index.
2023-11-24 16:02:38,338:INFO:Initializing predict_model()
2023-11-24 16:02:38,338:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192ABC676A0>)
2023-11-24 16:02:38,338:INFO:Checking exceptions
2023-11-24 16:02:38,339:INFO:Preloading libraries
2023-11-24 16:02:38,341:INFO:Set up data.
2023-11-24 16:02:38,346:INFO:Set up index.
2023-11-24 16:05:37,887:INFO:Initializing predict_model()
2023-11-24 16:05:37,887:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA3ACB80>)
2023-11-24 16:05:37,887:INFO:Checking exceptions
2023-11-24 16:05:37,887:INFO:Preloading libraries
2023-11-24 16:05:37,887:INFO:Set up data.
2023-11-24 16:05:37,903:INFO:Set up index.
2023-11-24 16:05:41,452:INFO:Initializing predict_model()
2023-11-24 16:05:41,452:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D28E0>)
2023-11-24 16:05:41,452:INFO:Checking exceptions
2023-11-24 16:05:41,452:INFO:Preloading libraries
2023-11-24 16:05:41,452:INFO:Set up data.
2023-11-24 16:05:41,452:INFO:Set up index.
2023-11-24 16:05:43,358:INFO:Initializing predict_model()
2023-11-24 16:05:43,358:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D28E0>)
2023-11-24 16:05:43,358:INFO:Checking exceptions
2023-11-24 16:05:43,358:INFO:Preloading libraries
2023-11-24 16:05:43,358:INFO:Set up data.
2023-11-24 16:05:43,358:INFO:Set up index.
2023-11-24 16:05:45,182:INFO:Initializing predict_model()
2023-11-24 16:05:45,182:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D39C0>)
2023-11-24 16:05:45,182:INFO:Checking exceptions
2023-11-24 16:05:45,182:INFO:Preloading libraries
2023-11-24 16:05:45,182:INFO:Set up data.
2023-11-24 16:05:45,193:INFO:Set up index.
2023-11-24 16:05:48,242:INFO:Initializing predict_model()
2023-11-24 16:05:48,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D3D80>)
2023-11-24 16:05:48,243:INFO:Checking exceptions
2023-11-24 16:05:48,243:INFO:Preloading libraries
2023-11-24 16:05:48,246:INFO:Set up data.
2023-11-24 16:05:48,246:INFO:Set up index.
2023-11-24 16:05:54,061:INFO:Initializing predict_model()
2023-11-24 16:05:54,061:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D3B00>)
2023-11-24 16:05:54,061:INFO:Checking exceptions
2023-11-24 16:05:54,061:INFO:Preloading libraries
2023-11-24 16:05:54,061:INFO:Set up data.
2023-11-24 16:05:54,071:INFO:Set up index.
2023-11-24 16:05:56,004:INFO:Initializing predict_model()
2023-11-24 16:05:56,005:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192BF53C650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA2D0180>)
2023-11-24 16:05:56,006:INFO:Checking exceptions
2023-11-24 16:05:56,006:INFO:Preloading libraries
2023-11-24 16:05:56,006:INFO:Set up data.
2023-11-24 16:05:56,006:INFO:Set up index.
2023-11-24 16:07:48,645:INFO:PyCaret ClassificationExperiment
2023-11-24 16:07:48,645:INFO:Logging name: clf-default-name
2023-11-24 16:07:48,645:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:07:48,645:INFO:version 3.2.0
2023-11-24 16:07:48,645:INFO:Initializing setup()
2023-11-24 16:07:48,645:INFO:self.USI: 03b4
2023-11-24 16:07:48,645:INFO:self._variable_keys: {'memory', '_available_plots', 'idx', 'y', 'y_train', 'exp_name_log', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'html_param', 'n_jobs_param', 'gpu_param', 'log_plots_param', 'USI', 'X_test', 'y_test', 'X', 'exp_id', 'pipeline', 'data', 'fold_groups_param', 'is_multiclass', 'seed', 'gpu_n_jobs_param', '_ml_usecase', 'fix_imbalance', 'X_train', 'target_param'}
2023-11-24 16:07:48,645:INFO:Checking environment
2023-11-24 16:07:48,645:INFO:python_version: 3.11.4
2023-11-24 16:07:48,645:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2023-11-24 16:07:48,645:INFO:machine: AMD64
2023-11-24 16:07:48,645:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-24 16:07:48,645:INFO:Memory: svmem(total=8548933632, available=1903349760, percent=77.7, used=6645583872, free=1903349760)
2023-11-24 16:07:48,645:INFO:Physical Core: 4
2023-11-24 16:07:48,656:INFO:Logical Core: 4
2023-11-24 16:07:48,656:INFO:Checking libraries
2023-11-24 16:07:48,656:INFO:System:
2023-11-24 16:07:48,656:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2023-11-24 16:07:48,656:INFO:executable: c:\Users\PC\AppData\Local\Programs\Python\Python311\python.exe
2023-11-24 16:07:48,656:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-24 16:07:48,656:INFO:PyCaret required dependencies:
2023-11-24 16:07:48,657:INFO:                 pip: 23.3.1
2023-11-24 16:07:48,657:INFO:          setuptools: 65.5.0
2023-11-24 16:07:48,657:INFO:             pycaret: 3.2.0
2023-11-24 16:07:48,657:INFO:             IPython: 8.14.0
2023-11-24 16:07:48,657:INFO:          ipywidgets: 8.1.0
2023-11-24 16:07:48,657:INFO:                tqdm: 4.66.1
2023-11-24 16:07:48,657:INFO:               numpy: 1.24.3
2023-11-24 16:07:48,657:INFO:              pandas: 1.5.3
2023-11-24 16:07:48,657:INFO:              jinja2: 3.1.2
2023-11-24 16:07:48,657:INFO:               scipy: 1.10.1
2023-11-24 16:07:48,658:INFO:              joblib: 1.3.2
2023-11-24 16:07:48,658:INFO:             sklearn: 1.2.2
2023-11-24 16:07:48,658:INFO:                pyod: 1.1.1
2023-11-24 16:07:48,658:INFO:            imblearn: 0.11.0
2023-11-24 16:07:48,658:INFO:   category_encoders: 2.6.3
2023-11-24 16:07:48,658:INFO:            lightgbm: 4.1.0
2023-11-24 16:07:48,658:INFO:               numba: 0.58.1
2023-11-24 16:07:48,658:INFO:            requests: 2.31.0
2023-11-24 16:07:48,659:INFO:          matplotlib: 3.6.0
2023-11-24 16:07:48,659:INFO:          scikitplot: 0.3.7
2023-11-24 16:07:48,660:INFO:         yellowbrick: 1.5
2023-11-24 16:07:48,660:INFO:              plotly: 5.17.0
2023-11-24 16:07:48,660:INFO:    plotly-resampler: Not installed
2023-11-24 16:07:48,660:INFO:             kaleido: 0.2.1
2023-11-24 16:07:48,660:INFO:           schemdraw: 0.15
2023-11-24 16:07:48,660:INFO:         statsmodels: 0.14.0
2023-11-24 16:07:48,660:INFO:              sktime: 0.21.1
2023-11-24 16:07:48,660:INFO:               tbats: 1.1.3
2023-11-24 16:07:48,660:INFO:            pmdarima: 2.0.4
2023-11-24 16:07:48,661:INFO:              psutil: 5.9.5
2023-11-24 16:07:48,661:INFO:          markupsafe: 2.1.3
2023-11-24 16:07:48,661:INFO:             pickle5: Not installed
2023-11-24 16:07:48,661:INFO:         cloudpickle: 3.0.0
2023-11-24 16:07:48,661:INFO:         deprecation: 2.1.0
2023-11-24 16:07:48,661:INFO:              xxhash: 3.4.1
2023-11-24 16:07:48,661:INFO:           wurlitzer: Not installed
2023-11-24 16:07:48,661:INFO:PyCaret optional dependencies:
2023-11-24 16:07:48,662:INFO:                shap: Not installed
2023-11-24 16:07:48,662:INFO:           interpret: Not installed
2023-11-24 16:07:48,662:INFO:                umap: Not installed
2023-11-24 16:07:48,662:INFO:     ydata_profiling: 4.5.1
2023-11-24 16:07:48,662:INFO:  explainerdashboard: Not installed
2023-11-24 16:07:48,662:INFO:             autoviz: Not installed
2023-11-24 16:07:48,662:INFO:           fairlearn: Not installed
2023-11-24 16:07:48,662:INFO:          deepchecks: Not installed
2023-11-24 16:07:48,662:INFO:             xgboost: Not installed
2023-11-24 16:07:48,662:INFO:            catboost: Not installed
2023-11-24 16:07:48,662:INFO:              kmodes: Not installed
2023-11-24 16:07:48,662:INFO:             mlxtend: Not installed
2023-11-24 16:07:48,663:INFO:       statsforecast: Not installed
2023-11-24 16:07:48,663:INFO:        tune_sklearn: Not installed
2023-11-24 16:07:48,663:INFO:                 ray: Not installed
2023-11-24 16:07:48,663:INFO:            hyperopt: Not installed
2023-11-24 16:07:48,663:INFO:              optuna: Not installed
2023-11-24 16:07:48,663:INFO:               skopt: Not installed
2023-11-24 16:07:48,663:INFO:              mlflow: Not installed
2023-11-24 16:07:48,663:INFO:              gradio: 4.5.0
2023-11-24 16:07:48,663:INFO:             fastapi: 0.104.1
2023-11-24 16:07:48,663:INFO:             uvicorn: 0.24.0.post1
2023-11-24 16:07:48,663:INFO:              m2cgen: Not installed
2023-11-24 16:07:48,664:INFO:           evidently: Not installed
2023-11-24 16:07:48,664:INFO:               fugue: Not installed
2023-11-24 16:07:48,664:INFO:           streamlit: 1.27.1
2023-11-24 16:07:48,664:INFO:             prophet: Not installed
2023-11-24 16:07:48,664:INFO:None
2023-11-24 16:07:48,664:INFO:Set up data.
2023-11-24 16:07:48,671:INFO:Set up folding strategy.
2023-11-24 16:07:48,671:INFO:Set up train/test split.
2023-11-24 16:07:48,677:INFO:Set up index.
2023-11-24 16:07:48,677:INFO:Assigning column types.
2023-11-24 16:07:48,683:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:07:48,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:07:48,802:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:07:48,869:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:48,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:07:49,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:07:49,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,092:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:07:49,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:07:49,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:07:49,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,524:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:07:49,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,918:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:49,919:INFO:Preparing preprocessing pipeline...
2023-11-24 16:07:49,919:INFO:Set up label encoding.
2023-11-24 16:07:49,919:INFO:Set up simple imputation.
2023-11-24 16:07:49,951:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:07:49,951:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-11-24 16:07:49,951:INFO:Creating final display dataframe.
2023-11-24 16:07:50,074:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                8701  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 5)  
5                                            (150, 5)  
6                                            (105, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               03b4  
2023-11-24 16:07:50,296:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:50,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:50,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:50,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:07:50,497:INFO:setup() successfully completed in 1.85s...............
2023-11-24 16:07:50,531:INFO:Initializing compare_models()
2023-11-24 16:07:50,531:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:07:50,531:INFO:Checking exceptions
2023-11-24 16:07:50,536:INFO:Preparing display monitor
2023-11-24 16:07:50,581:INFO:Initializing Logistic Regression
2023-11-24 16:07:50,581:INFO:Total runtime is 0.0 minutes
2023-11-24 16:07:50,586:INFO:SubProcess create_model() called ==================================
2023-11-24 16:07:50,586:INFO:Initializing create_model()
2023-11-24 16:07:50,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:07:50,587:INFO:Checking exceptions
2023-11-24 16:07:50,587:INFO:Importing libraries
2023-11-24 16:07:50,587:INFO:Copying training dataset
2023-11-24 16:07:50,592:INFO:Defining folds
2023-11-24 16:07:50,631:INFO:Declaring metric variables
2023-11-24 16:07:50,631:INFO:Importing untrained model
2023-11-24 16:07:50,631:INFO:Logistic Regression Imported successfully
2023-11-24 16:07:50,659:INFO:Starting cross validation
2023-11-24 16:07:50,661:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:07:53,943:INFO:Initializing predict_model()
2023-11-24 16:07:53,943:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA6A5440>)
2023-11-24 16:07:53,943:INFO:Checking exceptions
2023-11-24 16:07:53,943:INFO:Preloading libraries
2023-11-24 16:07:53,943:INFO:Set up data.
2023-11-24 16:07:53,943:INFO:Set up index.
2023-11-24 16:07:57,506:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,515:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,527:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,722:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,744:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,748:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,830:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,831:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,833:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,835:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,836:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,838:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,878:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,879:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,882:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,882:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,931:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,938:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:57,950:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,017:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,022:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,052:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,057:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,060:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,114:INFO:Calculating mean and std
2023-11-24 16:07:58,118:INFO:Creating metrics dataframe
2023-11-24 16:07:58,129:INFO:Uploading results into container
2023-11-24 16:07:58,130:INFO:Uploading model into container now
2023-11-24 16:07:58,131:INFO:_master_model_container: 1
2023-11-24 16:07:58,131:INFO:_display_container: 2
2023-11-24 16:07:58,131:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:07:58,131:INFO:create_model() successfully completed......................................
2023-11-24 16:07:58,331:INFO:SubProcess create_model() end ==================================
2023-11-24 16:07:58,331:INFO:Creating metrics dataframe
2023-11-24 16:07:58,343:INFO:Initializing K Neighbors Classifier
2023-11-24 16:07:58,343:INFO:Total runtime is 0.12936598857243856 minutes
2023-11-24 16:07:58,343:INFO:SubProcess create_model() called ==================================
2023-11-24 16:07:58,343:INFO:Initializing create_model()
2023-11-24 16:07:58,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:07:58,343:INFO:Checking exceptions
2023-11-24 16:07:58,343:INFO:Importing libraries
2023-11-24 16:07:58,343:INFO:Copying training dataset
2023-11-24 16:07:58,361:INFO:Defining folds
2023-11-24 16:07:58,361:INFO:Declaring metric variables
2023-11-24 16:07:58,361:INFO:Importing untrained model
2023-11-24 16:07:58,375:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:07:58,387:INFO:Starting cross validation
2023-11-24 16:07:58,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:07:58,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,488:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,491:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,495:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,495:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,498:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,498:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,498:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,512:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,522:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,522:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,573:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,578:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,578:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,583:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,604:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,604:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,612:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,647:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,647:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,647:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,647:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,660:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,662:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,678:INFO:Calculating mean and std
2023-11-24 16:07:58,678:INFO:Creating metrics dataframe
2023-11-24 16:07:58,678:INFO:Uploading results into container
2023-11-24 16:07:58,678:INFO:Uploading model into container now
2023-11-24 16:07:58,678:INFO:_master_model_container: 2
2023-11-24 16:07:58,678:INFO:_display_container: 2
2023-11-24 16:07:58,678:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:07:58,678:INFO:create_model() successfully completed......................................
2023-11-24 16:07:58,848:INFO:SubProcess create_model() end ==================================
2023-11-24 16:07:58,848:INFO:Creating metrics dataframe
2023-11-24 16:07:58,864:INFO:Initializing Naive Bayes
2023-11-24 16:07:58,864:INFO:Total runtime is 0.13803877433141074 minutes
2023-11-24 16:07:58,864:INFO:SubProcess create_model() called ==================================
2023-11-24 16:07:58,864:INFO:Initializing create_model()
2023-11-24 16:07:58,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:07:58,864:INFO:Checking exceptions
2023-11-24 16:07:58,864:INFO:Importing libraries
2023-11-24 16:07:58,864:INFO:Copying training dataset
2023-11-24 16:07:58,881:INFO:Defining folds
2023-11-24 16:07:58,885:INFO:Declaring metric variables
2023-11-24 16:07:58,885:INFO:Importing untrained model
2023-11-24 16:07:58,896:INFO:Naive Bayes Imported successfully
2023-11-24 16:07:58,896:INFO:Starting cross validation
2023-11-24 16:07:58,896:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:07:58,953:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,954:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,955:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,955:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,956:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,957:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:58,961:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,011:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,023:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,026:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,027:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,027:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,027:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,033:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,033:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,033:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,054:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,064:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,064:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,064:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,074:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,085:INFO:Calculating mean and std
2023-11-24 16:07:59,085:INFO:Creating metrics dataframe
2023-11-24 16:07:59,085:INFO:Uploading results into container
2023-11-24 16:07:59,085:INFO:Uploading model into container now
2023-11-24 16:07:59,094:INFO:_master_model_container: 3
2023-11-24 16:07:59,094:INFO:_display_container: 2
2023-11-24 16:07:59,094:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:07:59,094:INFO:create_model() successfully completed......................................
2023-11-24 16:07:59,231:INFO:SubProcess create_model() end ==================================
2023-11-24 16:07:59,231:INFO:Creating metrics dataframe
2023-11-24 16:07:59,246:INFO:Initializing Decision Tree Classifier
2023-11-24 16:07:59,246:INFO:Total runtime is 0.14440716902414957 minutes
2023-11-24 16:07:59,246:INFO:SubProcess create_model() called ==================================
2023-11-24 16:07:59,246:INFO:Initializing create_model()
2023-11-24 16:07:59,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:07:59,246:INFO:Checking exceptions
2023-11-24 16:07:59,260:INFO:Importing libraries
2023-11-24 16:07:59,260:INFO:Copying training dataset
2023-11-24 16:07:59,261:INFO:Defining folds
2023-11-24 16:07:59,261:INFO:Declaring metric variables
2023-11-24 16:07:59,261:INFO:Importing untrained model
2023-11-24 16:07:59,278:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:07:59,290:INFO:Starting cross validation
2023-11-24 16:07:59,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:07:59,340:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,341:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,343:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,343:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,345:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,346:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,346:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,346:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,346:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,346:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,356:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,363:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,421:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,439:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,448:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,451:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,454:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,471:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,495:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,503:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,514:INFO:Calculating mean and std
2023-11-24 16:07:59,516:INFO:Creating metrics dataframe
2023-11-24 16:07:59,521:INFO:Uploading results into container
2023-11-24 16:07:59,522:INFO:Uploading model into container now
2023-11-24 16:07:59,523:INFO:_master_model_container: 4
2023-11-24 16:07:59,523:INFO:_display_container: 2
2023-11-24 16:07:59,524:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8701, splitter='best')
2023-11-24 16:07:59,524:INFO:create_model() successfully completed......................................
2023-11-24 16:07:59,677:INFO:SubProcess create_model() end ==================================
2023-11-24 16:07:59,677:INFO:Creating metrics dataframe
2023-11-24 16:07:59,692:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:07:59,692:INFO:Total runtime is 0.1518520712852478 minutes
2023-11-24 16:07:59,698:INFO:SubProcess create_model() called ==================================
2023-11-24 16:07:59,698:INFO:Initializing create_model()
2023-11-24 16:07:59,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:07:59,698:INFO:Checking exceptions
2023-11-24 16:07:59,699:INFO:Importing libraries
2023-11-24 16:07:59,699:INFO:Copying training dataset
2023-11-24 16:07:59,704:INFO:Defining folds
2023-11-24 16:07:59,704:INFO:Declaring metric variables
2023-11-24 16:07:59,710:INFO:Importing untrained model
2023-11-24 16:07:59,716:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:07:59,725:INFO:Starting cross validation
2023-11-24 16:07:59,726:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:07:59,779:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,779:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,781:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,781:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,782:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,784:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,784:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,784:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,787:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,792:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,796:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,806:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,834:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,835:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,836:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,837:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,838:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,839:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,839:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,841:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,842:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,842:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,845:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,845:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,858:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,859:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,863:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,865:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:07:59,867:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,885:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:07:59,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,888:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,893:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,894:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:07:59,908:INFO:Calculating mean and std
2023-11-24 16:07:59,910:INFO:Creating metrics dataframe
2023-11-24 16:07:59,915:INFO:Uploading results into container
2023-11-24 16:07:59,916:INFO:Uploading model into container now
2023-11-24 16:07:59,916:INFO:_master_model_container: 5
2023-11-24 16:07:59,916:INFO:_display_container: 2
2023-11-24 16:07:59,917:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8701, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:07:59,917:INFO:create_model() successfully completed......................................
2023-11-24 16:08:00,060:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:00,060:INFO:Creating metrics dataframe
2023-11-24 16:08:00,075:INFO:Initializing Ridge Classifier
2023-11-24 16:08:00,075:INFO:Total runtime is 0.15823384126027426 minutes
2023-11-24 16:08:00,079:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:00,080:INFO:Initializing create_model()
2023-11-24 16:08:00,080:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:00,081:INFO:Checking exceptions
2023-11-24 16:08:00,081:INFO:Importing libraries
2023-11-24 16:08:00,081:INFO:Copying training dataset
2023-11-24 16:08:00,086:INFO:Defining folds
2023-11-24 16:08:00,087:INFO:Declaring metric variables
2023-11-24 16:08:00,092:INFO:Importing untrained model
2023-11-24 16:08:00,097:INFO:Ridge Classifier Imported successfully
2023-11-24 16:08:00,108:INFO:Starting cross validation
2023-11-24 16:08:00,109:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:00,145:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,146:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,148:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,149:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,151:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,151:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,152:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,154:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,154:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,154:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,155:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,156:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,159:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,166:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,181:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,182:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,183:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,184:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,186:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,187:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,188:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,193:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,198:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,200:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,202:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,205:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,209:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,220:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,221:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,224:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,226:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:08:00,227:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,228:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,232:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,235:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,241:INFO:Calculating mean and std
2023-11-24 16:08:00,243:INFO:Creating metrics dataframe
2023-11-24 16:08:00,248:INFO:Uploading results into container
2023-11-24 16:08:00,249:INFO:Uploading model into container now
2023-11-24 16:08:00,249:INFO:_master_model_container: 6
2023-11-24 16:08:00,250:INFO:_display_container: 2
2023-11-24 16:08:00,250:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8701, solver='auto',
                tol=0.0001)
2023-11-24 16:08:00,250:INFO:create_model() successfully completed......................................
2023-11-24 16:08:00,404:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:00,405:INFO:Creating metrics dataframe
2023-11-24 16:08:00,421:INFO:Initializing Random Forest Classifier
2023-11-24 16:08:00,421:INFO:Total runtime is 0.16398929754892985 minutes
2023-11-24 16:08:00,425:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:00,426:INFO:Initializing create_model()
2023-11-24 16:08:00,426:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:00,426:INFO:Checking exceptions
2023-11-24 16:08:00,427:INFO:Importing libraries
2023-11-24 16:08:00,427:INFO:Copying training dataset
2023-11-24 16:08:00,432:INFO:Defining folds
2023-11-24 16:08:00,433:INFO:Declaring metric variables
2023-11-24 16:08:00,438:INFO:Importing untrained model
2023-11-24 16:08:00,442:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:08:00,452:INFO:Starting cross validation
2023-11-24 16:08:00,453:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:00,751:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,753:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,754:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,756:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,758:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,760:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,772:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,775:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,779:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,792:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:00,795:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,055:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,058:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,076:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,079:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,079:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,082:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,083:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,087:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,123:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,126:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,129:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,362:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,365:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,370:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,377:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,383:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,396:INFO:Calculating mean and std
2023-11-24 16:08:01,398:INFO:Creating metrics dataframe
2023-11-24 16:08:01,403:INFO:Uploading results into container
2023-11-24 16:08:01,403:INFO:Uploading model into container now
2023-11-24 16:08:01,404:INFO:_master_model_container: 7
2023-11-24 16:08:01,404:INFO:_display_container: 2
2023-11-24 16:08:01,405:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8701, verbose=0, warm_start=False)
2023-11-24 16:08:01,405:INFO:create_model() successfully completed......................................
2023-11-24 16:08:01,549:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:01,550:INFO:Creating metrics dataframe
2023-11-24 16:08:01,565:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:08:01,565:INFO:Total runtime is 0.18306275208791098 minutes
2023-11-24 16:08:01,571:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:01,571:INFO:Initializing create_model()
2023-11-24 16:08:01,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:01,571:INFO:Checking exceptions
2023-11-24 16:08:01,571:INFO:Importing libraries
2023-11-24 16:08:01,571:INFO:Copying training dataset
2023-11-24 16:08:01,577:INFO:Defining folds
2023-11-24 16:08:01,578:INFO:Declaring metric variables
2023-11-24 16:08:01,583:INFO:Importing untrained model
2023-11-24 16:08:01,588:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:08:01,597:INFO:Starting cross validation
2023-11-24 16:08:01,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:01,639:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,640:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,641:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,642:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,643:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,644:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,644:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,646:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,647:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,648:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,648:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,650:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,681:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,684:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,686:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,688:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,688:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,690:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,691:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,691:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,693:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,694:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,696:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,697:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,717:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,722:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,725:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,725:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,728:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,731:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:01,743:INFO:Calculating mean and std
2023-11-24 16:08:01,745:INFO:Creating metrics dataframe
2023-11-24 16:08:01,750:INFO:Uploading results into container
2023-11-24 16:08:01,750:INFO:Uploading model into container now
2023-11-24 16:08:01,751:INFO:_master_model_container: 8
2023-11-24 16:08:01,751:INFO:_display_container: 2
2023-11-24 16:08:01,752:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:08:01,752:INFO:create_model() successfully completed......................................
2023-11-24 16:08:01,891:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:01,891:INFO:Creating metrics dataframe
2023-11-24 16:08:01,906:INFO:Initializing Ada Boost Classifier
2023-11-24 16:08:01,907:INFO:Total runtime is 0.18877028624216716 minutes
2023-11-24 16:08:01,912:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:01,912:INFO:Initializing create_model()
2023-11-24 16:08:01,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:01,912:INFO:Checking exceptions
2023-11-24 16:08:01,912:INFO:Importing libraries
2023-11-24 16:08:01,912:INFO:Copying training dataset
2023-11-24 16:08:01,918:INFO:Defining folds
2023-11-24 16:08:01,918:INFO:Declaring metric variables
2023-11-24 16:08:01,924:INFO:Importing untrained model
2023-11-24 16:08:01,929:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:08:01,939:INFO:Starting cross validation
2023-11-24 16:08:01,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:02,094:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,098:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,099:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,101:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,102:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,106:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,107:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,111:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,115:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,116:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,120:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,125:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,253:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,259:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,260:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,263:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,277:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,280:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,283:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,283:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,290:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,404:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,407:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,410:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,411:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,412:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,415:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:02,430:INFO:Calculating mean and std
2023-11-24 16:08:02,432:INFO:Creating metrics dataframe
2023-11-24 16:08:02,437:INFO:Uploading results into container
2023-11-24 16:08:02,438:INFO:Uploading model into container now
2023-11-24 16:08:02,439:INFO:_master_model_container: 9
2023-11-24 16:08:02,439:INFO:_display_container: 2
2023-11-24 16:08:02,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8701)
2023-11-24 16:08:02,439:INFO:create_model() successfully completed......................................
2023-11-24 16:08:02,578:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:02,578:INFO:Creating metrics dataframe
2023-11-24 16:08:02,596:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:08:02,596:INFO:Total runtime is 0.20024341344833374 minutes
2023-11-24 16:08:02,600:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:02,600:INFO:Initializing create_model()
2023-11-24 16:08:02,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:02,601:INFO:Checking exceptions
2023-11-24 16:08:02,601:INFO:Importing libraries
2023-11-24 16:08:02,601:INFO:Copying training dataset
2023-11-24 16:08:02,607:INFO:Defining folds
2023-11-24 16:08:02,607:INFO:Declaring metric variables
2023-11-24 16:08:02,612:INFO:Importing untrained model
2023-11-24 16:08:02,617:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:08:02,627:INFO:Starting cross validation
2023-11-24 16:08:02,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:03,018:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,021:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,023:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,026:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,026:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,026:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,029:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,030:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,032:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,032:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,035:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,038:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,499:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,503:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,506:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,554:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,560:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,570:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,645:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,650:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,655:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,655:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,667:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:03,679:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,048:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,058:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,064:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,089:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,098:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,100:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,110:INFO:Calculating mean and std
2023-11-24 16:08:04,113:INFO:Creating metrics dataframe
2023-11-24 16:08:04,115:INFO:Uploading results into container
2023-11-24 16:08:04,115:INFO:Uploading model into container now
2023-11-24 16:08:04,121:INFO:_master_model_container: 10
2023-11-24 16:08:04,121:INFO:_display_container: 2
2023-11-24 16:08:04,121:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8701, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:08:04,121:INFO:create_model() successfully completed......................................
2023-11-24 16:08:04,287:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:04,287:INFO:Creating metrics dataframe
2023-11-24 16:08:04,306:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:08:04,306:INFO:Total runtime is 0.2287473201751709 minutes
2023-11-24 16:08:04,311:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:04,313:INFO:Initializing create_model()
2023-11-24 16:08:04,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:04,313:INFO:Checking exceptions
2023-11-24 16:08:04,313:INFO:Importing libraries
2023-11-24 16:08:04,313:INFO:Copying training dataset
2023-11-24 16:08:04,313:INFO:Defining folds
2023-11-24 16:08:04,313:INFO:Declaring metric variables
2023-11-24 16:08:04,313:INFO:Importing untrained model
2023-11-24 16:08:04,330:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:08:04,330:INFO:Starting cross validation
2023-11-24 16:08:04,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,380:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,430:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,466:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,472:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,472:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,483:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,493:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:04,503:INFO:Calculating mean and std
2023-11-24 16:08:04,503:INFO:Creating metrics dataframe
2023-11-24 16:08:04,503:INFO:Uploading results into container
2023-11-24 16:08:04,503:INFO:Uploading model into container now
2023-11-24 16:08:04,503:INFO:_master_model_container: 11
2023-11-24 16:08:04,503:INFO:_display_container: 2
2023-11-24 16:08:04,503:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:08:04,503:INFO:create_model() successfully completed......................................
2023-11-24 16:08:04,767:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:04,767:INFO:Creating metrics dataframe
2023-11-24 16:08:04,785:INFO:Initializing Extra Trees Classifier
2023-11-24 16:08:04,785:INFO:Total runtime is 0.23673055171966553 minutes
2023-11-24 16:08:04,801:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:04,801:INFO:Initializing create_model()
2023-11-24 16:08:04,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:04,801:INFO:Checking exceptions
2023-11-24 16:08:04,801:INFO:Importing libraries
2023-11-24 16:08:04,801:INFO:Copying training dataset
2023-11-24 16:08:04,801:INFO:Defining folds
2023-11-24 16:08:04,801:INFO:Declaring metric variables
2023-11-24 16:08:04,817:INFO:Importing untrained model
2023-11-24 16:08:04,818:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:08:04,832:INFO:Starting cross validation
2023-11-24 16:08:04,832:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:05,099:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,103:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,104:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,104:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,104:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,104:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,121:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,121:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,121:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,158:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,158:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,166:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,604:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,608:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,609:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,609:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,620:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,623:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,670:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,676:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,676:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,718:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,718:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,729:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,905:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,915:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:05,925:INFO:Calculating mean and std
2023-11-24 16:08:05,925:INFO:Creating metrics dataframe
2023-11-24 16:08:05,925:INFO:Uploading results into container
2023-11-24 16:08:05,925:INFO:Uploading model into container now
2023-11-24 16:08:05,925:INFO:_master_model_container: 12
2023-11-24 16:08:05,925:INFO:_display_container: 2
2023-11-24 16:08:05,925:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8701, verbose=0, warm_start=False)
2023-11-24 16:08:05,936:INFO:create_model() successfully completed......................................
2023-11-24 16:08:06,070:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:06,070:INFO:Creating metrics dataframe
2023-11-24 16:08:06,094:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:08:06,094:INFO:Total runtime is 0.25853943824768066 minutes
2023-11-24 16:08:06,094:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:06,094:INFO:Initializing create_model()
2023-11-24 16:08:06,103:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:06,103:INFO:Checking exceptions
2023-11-24 16:08:06,103:INFO:Importing libraries
2023-11-24 16:08:06,103:INFO:Copying training dataset
2023-11-24 16:08:06,103:INFO:Defining folds
2023-11-24 16:08:06,103:INFO:Declaring metric variables
2023-11-24 16:08:06,103:INFO:Importing untrained model
2023-11-24 16:08:06,119:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:08:06,119:INFO:Starting cross validation
2023-11-24 16:08:06,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:07,852:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:07,852:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:07,862:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,143:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,151:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,151:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,162:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,162:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,172:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,197:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,199:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,704:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,714:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,871:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,881:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,881:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,891:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,938:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,942:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:08,947:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,159:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,164:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,169:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,394:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,398:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,401:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,413:INFO:Calculating mean and std
2023-11-24 16:08:09,415:INFO:Creating metrics dataframe
2023-11-24 16:08:09,421:INFO:Uploading results into container
2023-11-24 16:08:09,422:INFO:Uploading model into container now
2023-11-24 16:08:09,422:INFO:_master_model_container: 13
2023-11-24 16:08:09,422:INFO:_display_container: 2
2023-11-24 16:08:09,422:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8701, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 16:08:09,422:INFO:create_model() successfully completed......................................
2023-11-24 16:08:09,585:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:09,585:INFO:Creating metrics dataframe
2023-11-24 16:08:09,604:INFO:Initializing Dummy Classifier
2023-11-24 16:08:09,604:INFO:Total runtime is 0.3170527378718058 minutes
2023-11-24 16:08:09,620:INFO:SubProcess create_model() called ==================================
2023-11-24 16:08:09,621:INFO:Initializing create_model()
2023-11-24 16:08:09,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192C39D1250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:09,621:INFO:Checking exceptions
2023-11-24 16:08:09,621:INFO:Importing libraries
2023-11-24 16:08:09,621:INFO:Copying training dataset
2023-11-24 16:08:09,623:INFO:Defining folds
2023-11-24 16:08:09,623:INFO:Declaring metric variables
2023-11-24 16:08:09,640:INFO:Importing untrained model
2023-11-24 16:08:09,653:INFO:Dummy Classifier Imported successfully
2023-11-24 16:08:09,666:INFO:Starting cross validation
2023-11-24 16:08:09,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:08:09,711:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,711:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,715:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,715:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,717:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,717:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,719:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,719:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,726:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,736:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,736:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,737:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,737:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,769:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,773:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,776:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,774:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,785:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,792:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,799:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,801:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,819:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,866:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,870:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,888:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,889:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,902:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,905:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:08:09,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:08:09,926:INFO:Calculating mean and std
2023-11-24 16:08:09,926:INFO:Creating metrics dataframe
2023-11-24 16:08:09,934:INFO:Uploading results into container
2023-11-24 16:08:09,935:INFO:Uploading model into container now
2023-11-24 16:08:09,935:INFO:_master_model_container: 14
2023-11-24 16:08:09,935:INFO:_display_container: 2
2023-11-24 16:08:09,935:INFO:DummyClassifier(constant=None, random_state=8701, strategy='prior')
2023-11-24 16:08:09,935:INFO:create_model() successfully completed......................................
2023-11-24 16:08:10,086:INFO:SubProcess create_model() end ==================================
2023-11-24 16:08:10,100:INFO:Creating metrics dataframe
2023-11-24 16:08:10,137:INFO:Initializing create_model()
2023-11-24 16:08:10,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:10,138:INFO:Checking exceptions
2023-11-24 16:08:10,140:INFO:Importing libraries
2023-11-24 16:08:10,140:INFO:Copying training dataset
2023-11-24 16:08:10,145:INFO:Defining folds
2023-11-24 16:08:10,145:INFO:Declaring metric variables
2023-11-24 16:08:10,145:INFO:Importing untrained model
2023-11-24 16:08:10,145:INFO:Declaring custom model
2023-11-24 16:08:10,146:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:08:10,147:INFO:Cross validation set to False
2023-11-24 16:08:10,147:INFO:Fitting Model
2023-11-24 16:08:10,153:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:08:10,153:INFO:create_model() successfully completed......................................
2023-11-24 16:08:10,320:INFO:Initializing create_model()
2023-11-24 16:08:10,320:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:10,320:INFO:Checking exceptions
2023-11-24 16:08:10,320:INFO:Importing libraries
2023-11-24 16:08:10,320:INFO:Copying training dataset
2023-11-24 16:08:10,335:INFO:Defining folds
2023-11-24 16:08:10,335:INFO:Declaring metric variables
2023-11-24 16:08:10,335:INFO:Importing untrained model
2023-11-24 16:08:10,335:INFO:Declaring custom model
2023-11-24 16:08:10,336:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:08:10,337:INFO:Cross validation set to False
2023-11-24 16:08:10,337:INFO:Fitting Model
2023-11-24 16:08:10,347:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:08:10,347:INFO:create_model() successfully completed......................................
2023-11-24 16:08:10,501:INFO:Initializing create_model()
2023-11-24 16:08:10,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:10,502:INFO:Checking exceptions
2023-11-24 16:08:10,502:INFO:Importing libraries
2023-11-24 16:08:10,502:INFO:Copying training dataset
2023-11-24 16:08:10,502:INFO:Defining folds
2023-11-24 16:08:10,502:INFO:Declaring metric variables
2023-11-24 16:08:10,502:INFO:Importing untrained model
2023-11-24 16:08:10,502:INFO:Declaring custom model
2023-11-24 16:08:10,502:INFO:Logistic Regression Imported successfully
2023-11-24 16:08:10,502:INFO:Cross validation set to False
2023-11-24 16:08:10,502:INFO:Fitting Model
2023-11-24 16:08:10,552:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:08:10,552:INFO:create_model() successfully completed......................................
2023-11-24 16:08:10,725:INFO:Initializing create_model()
2023-11-24 16:08:10,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:10,726:INFO:Checking exceptions
2023-11-24 16:08:10,735:INFO:Importing libraries
2023-11-24 16:08:10,735:INFO:Copying training dataset
2023-11-24 16:08:10,741:INFO:Defining folds
2023-11-24 16:08:10,741:INFO:Declaring metric variables
2023-11-24 16:08:10,742:INFO:Importing untrained model
2023-11-24 16:08:10,742:INFO:Declaring custom model
2023-11-24 16:08:10,743:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:08:10,745:INFO:Cross validation set to False
2023-11-24 16:08:10,745:INFO:Fitting Model
2023-11-24 16:08:10,759:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:08:10,760:INFO:create_model() successfully completed......................................
2023-11-24 16:08:10,961:INFO:Initializing create_model()
2023-11-24 16:08:10,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8701, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:10,963:INFO:Checking exceptions
2023-11-24 16:08:10,963:INFO:Importing libraries
2023-11-24 16:08:10,963:INFO:Copying training dataset
2023-11-24 16:08:10,972:INFO:Defining folds
2023-11-24 16:08:10,972:INFO:Declaring metric variables
2023-11-24 16:08:10,972:INFO:Importing untrained model
2023-11-24 16:08:10,972:INFO:Declaring custom model
2023-11-24 16:08:10,972:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:08:10,972:INFO:Cross validation set to False
2023-11-24 16:08:10,972:INFO:Fitting Model
2023-11-24 16:08:11,229:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8701, verbose=0, warm_start=False)
2023-11-24 16:08:11,229:INFO:create_model() successfully completed......................................
2023-11-24 16:08:11,372:INFO:Initializing create_model()
2023-11-24 16:08:11,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8701, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:11,372:INFO:Checking exceptions
2023-11-24 16:08:11,388:INFO:Importing libraries
2023-11-24 16:08:11,388:INFO:Copying training dataset
2023-11-24 16:08:11,388:INFO:Defining folds
2023-11-24 16:08:11,388:INFO:Declaring metric variables
2023-11-24 16:08:11,388:INFO:Importing untrained model
2023-11-24 16:08:11,388:INFO:Declaring custom model
2023-11-24 16:08:11,388:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:08:11,388:INFO:Cross validation set to False
2023-11-24 16:08:11,388:INFO:Fitting Model
2023-11-24 16:08:11,774:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8701, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:08:11,774:INFO:create_model() successfully completed......................................
2023-11-24 16:08:11,927:INFO:Initializing create_model()
2023-11-24 16:08:11,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8701, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:11,927:INFO:Checking exceptions
2023-11-24 16:08:11,927:INFO:Importing libraries
2023-11-24 16:08:11,927:INFO:Copying training dataset
2023-11-24 16:08:11,940:INFO:Defining folds
2023-11-24 16:08:11,940:INFO:Declaring metric variables
2023-11-24 16:08:11,940:INFO:Importing untrained model
2023-11-24 16:08:11,940:INFO:Declaring custom model
2023-11-24 16:08:11,940:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:08:11,940:INFO:Cross validation set to False
2023-11-24 16:08:11,940:INFO:Fitting Model
2023-11-24 16:08:11,940:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8701, splitter='best')
2023-11-24 16:08:11,940:INFO:create_model() successfully completed......................................
2023-11-24 16:08:12,111:INFO:Initializing create_model()
2023-11-24 16:08:12,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8701), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:12,111:INFO:Checking exceptions
2023-11-24 16:08:12,111:INFO:Importing libraries
2023-11-24 16:08:12,111:INFO:Copying training dataset
2023-11-24 16:08:12,111:INFO:Defining folds
2023-11-24 16:08:12,111:INFO:Declaring metric variables
2023-11-24 16:08:12,111:INFO:Importing untrained model
2023-11-24 16:08:12,111:INFO:Declaring custom model
2023-11-24 16:08:12,111:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:08:12,111:INFO:Cross validation set to False
2023-11-24 16:08:12,111:INFO:Fitting Model
2023-11-24 16:08:12,277:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8701)
2023-11-24 16:08:12,277:INFO:create_model() successfully completed......................................
2023-11-24 16:08:12,578:INFO:Initializing create_model()
2023-11-24 16:08:12,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8701, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:12,578:INFO:Checking exceptions
2023-11-24 16:08:12,578:INFO:Importing libraries
2023-11-24 16:08:12,578:INFO:Copying training dataset
2023-11-24 16:08:12,593:INFO:Defining folds
2023-11-24 16:08:12,593:INFO:Declaring metric variables
2023-11-24 16:08:12,593:INFO:Importing untrained model
2023-11-24 16:08:12,593:INFO:Declaring custom model
2023-11-24 16:08:12,593:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:08:12,593:INFO:Cross validation set to False
2023-11-24 16:08:12,593:INFO:Fitting Model
2023-11-24 16:08:12,783:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8701, verbose=0, warm_start=False)
2023-11-24 16:08:12,783:INFO:create_model() successfully completed......................................
2023-11-24 16:08:12,927:INFO:Initializing create_model()
2023-11-24 16:08:12,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8701, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:12,943:INFO:Checking exceptions
2023-11-24 16:08:12,946:INFO:Importing libraries
2023-11-24 16:08:12,946:INFO:Copying training dataset
2023-11-24 16:08:12,950:INFO:Defining folds
2023-11-24 16:08:12,950:INFO:Declaring metric variables
2023-11-24 16:08:12,950:INFO:Importing untrained model
2023-11-24 16:08:12,950:INFO:Declaring custom model
2023-11-24 16:08:12,950:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:08:12,950:INFO:Cross validation set to False
2023-11-24 16:08:12,950:INFO:Fitting Model
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000052 seconds.
2023-11-24 16:08:12,969:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Total Bins 84
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Number of data points in the train set: 105, number of used features: 4
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:08:12,969:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:12,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:08:13,034:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8701, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 16:08:13,034:INFO:create_model() successfully completed......................................
2023-11-24 16:08:13,184:INFO:Initializing create_model()
2023-11-24 16:08:13,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:13,184:INFO:Checking exceptions
2023-11-24 16:08:13,197:INFO:Importing libraries
2023-11-24 16:08:13,197:INFO:Copying training dataset
2023-11-24 16:08:13,200:INFO:Defining folds
2023-11-24 16:08:13,200:INFO:Declaring metric variables
2023-11-24 16:08:13,200:INFO:Importing untrained model
2023-11-24 16:08:13,200:INFO:Declaring custom model
2023-11-24 16:08:13,200:INFO:Naive Bayes Imported successfully
2023-11-24 16:08:13,200:INFO:Cross validation set to False
2023-11-24 16:08:13,200:INFO:Fitting Model
2023-11-24 16:08:13,212:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:08:13,212:INFO:create_model() successfully completed......................................
2023-11-24 16:08:13,366:INFO:Initializing create_model()
2023-11-24 16:08:13,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8701, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:13,366:INFO:Checking exceptions
2023-11-24 16:08:13,378:INFO:Importing libraries
2023-11-24 16:08:13,378:INFO:Copying training dataset
2023-11-24 16:08:13,384:INFO:Defining folds
2023-11-24 16:08:13,385:INFO:Declaring metric variables
2023-11-24 16:08:13,385:INFO:Importing untrained model
2023-11-24 16:08:13,385:INFO:Declaring custom model
2023-11-24 16:08:13,387:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:08:13,387:INFO:Cross validation set to False
2023-11-24 16:08:13,387:INFO:Fitting Model
2023-11-24 16:08:13,417:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8701, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:08:13,417:INFO:create_model() successfully completed......................................
2023-11-24 16:08:13,596:INFO:Initializing create_model()
2023-11-24 16:08:13,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8701, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:13,596:INFO:Checking exceptions
2023-11-24 16:08:13,596:INFO:Importing libraries
2023-11-24 16:08:13,596:INFO:Copying training dataset
2023-11-24 16:08:13,596:INFO:Defining folds
2023-11-24 16:08:13,596:INFO:Declaring metric variables
2023-11-24 16:08:13,596:INFO:Importing untrained model
2023-11-24 16:08:13,596:INFO:Declaring custom model
2023-11-24 16:08:13,596:INFO:Ridge Classifier Imported successfully
2023-11-24 16:08:13,596:INFO:Cross validation set to False
2023-11-24 16:08:13,596:INFO:Fitting Model
2023-11-24 16:08:13,613:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8701, solver='auto',
                tol=0.0001)
2023-11-24 16:08:13,613:INFO:create_model() successfully completed......................................
2023-11-24 16:08:13,764:INFO:Initializing create_model()
2023-11-24 16:08:13,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=DummyClassifier(constant=None, random_state=8701, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:08:13,764:INFO:Checking exceptions
2023-11-24 16:08:13,764:INFO:Importing libraries
2023-11-24 16:08:13,764:INFO:Copying training dataset
2023-11-24 16:08:13,779:INFO:Defining folds
2023-11-24 16:08:13,779:INFO:Declaring metric variables
2023-11-24 16:08:13,779:INFO:Importing untrained model
2023-11-24 16:08:13,780:INFO:Declaring custom model
2023-11-24 16:08:13,780:INFO:Dummy Classifier Imported successfully
2023-11-24 16:08:13,781:INFO:Cross validation set to False
2023-11-24 16:08:13,781:INFO:Fitting Model
2023-11-24 16:08:13,791:INFO:DummyClassifier(constant=None, random_state=8701, strategy='prior')
2023-11-24 16:08:13,791:INFO:create_model() successfully completed......................................
2023-11-24 16:08:14,025:INFO:_master_model_container: 14
2023-11-24 16:08:14,025:INFO:_display_container: 2
2023-11-24 16:08:14,029:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8701, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8701, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8701, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8701, splitter='best'), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8701), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8701, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8701, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), GaussianNB(priors=None, var_smoothing=1e-09), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8701, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8701, solver='auto',
                tol=0.0001), DummyClassifier(constant=None, random_state=8701, strategy='prior')]
2023-11-24 16:08:14,029:INFO:compare_models() successfully completed......................................
2023-11-24 16:08:14,371:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\gradio\components\dropdown.py:163: UserWarning: The value passed into gr.Dropdown() is not in the list of choices. Please update the list of choices to include: ['Quadratic Discriminant Analysis', 'Linear Discriminant Analysis', 'Logistic Regression', 'K Neighbors Classifier', 'Random Forest Classifier', 'Gradient Boosting Classifier', 'Decision Tree Classifier', 'Ada Boost Classifier', 'Extra Trees Classifier', 'Light Gradient Boosting Machine', 'Naive Bayes', 'SVM - Linear Kernel', 'Ridge Classifier', 'Dummy Classifier'] or set allow_custom_value=True.
  warnings.warn(

2023-11-24 16:20:28,176:INFO:Initializing predict_model()
2023-11-24 16:20:28,177:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192CA465A80>)
2023-11-24 16:20:28,177:INFO:Checking exceptions
2023-11-24 16:20:28,177:INFO:Preloading libraries
2023-11-24 16:20:28,182:INFO:Set up data.
2023-11-24 16:20:28,186:INFO:Set up index.
2023-11-24 16:20:33,067:INFO:Initializing predict_model()
2023-11-24 16:20:33,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC220>)
2023-11-24 16:20:33,068:INFO:Checking exceptions
2023-11-24 16:20:33,068:INFO:Preloading libraries
2023-11-24 16:20:33,070:INFO:Set up data.
2023-11-24 16:20:33,077:INFO:Set up index.
2023-11-24 16:20:35,363:INFO:Initializing predict_model()
2023-11-24 16:20:35,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCF40>)
2023-11-24 16:20:35,364:INFO:Checking exceptions
2023-11-24 16:20:35,364:INFO:Preloading libraries
2023-11-24 16:20:35,367:INFO:Set up data.
2023-11-24 16:20:35,372:INFO:Set up index.
2023-11-24 16:20:38,342:INFO:Initializing predict_model()
2023-11-24 16:20:38,342:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CECA0>)
2023-11-24 16:20:38,343:INFO:Checking exceptions
2023-11-24 16:20:38,343:INFO:Preloading libraries
2023-11-24 16:20:38,349:INFO:Set up data.
2023-11-24 16:20:38,359:INFO:Set up index.
2023-11-24 16:20:41,121:INFO:Initializing predict_model()
2023-11-24 16:20:41,121:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCEA0>)
2023-11-24 16:20:41,122:INFO:Checking exceptions
2023-11-24 16:20:41,122:INFO:Preloading libraries
2023-11-24 16:20:41,125:INFO:Set up data.
2023-11-24 16:20:41,125:INFO:Set up index.
2023-11-24 16:20:43,814:INFO:Initializing predict_model()
2023-11-24 16:20:43,815:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC540>)
2023-11-24 16:20:43,815:INFO:Checking exceptions
2023-11-24 16:20:43,815:INFO:Preloading libraries
2023-11-24 16:20:43,817:INFO:Set up data.
2023-11-24 16:20:43,817:INFO:Set up index.
2023-11-24 16:20:44,851:INFO:Initializing predict_model()
2023-11-24 16:20:44,851:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CF240>)
2023-11-24 16:20:44,851:INFO:Checking exceptions
2023-11-24 16:20:44,851:INFO:Preloading libraries
2023-11-24 16:20:44,851:INFO:Set up data.
2023-11-24 16:20:44,851:INFO:Set up index.
2023-11-24 16:20:46,743:INFO:Initializing predict_model()
2023-11-24 16:20:46,743:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDEE0>)
2023-11-24 16:20:46,744:INFO:Checking exceptions
2023-11-24 16:20:46,744:INFO:Preloading libraries
2023-11-24 16:20:46,745:INFO:Set up data.
2023-11-24 16:20:46,750:INFO:Set up index.
2023-11-24 16:20:48,949:INFO:Initializing predict_model()
2023-11-24 16:20:48,949:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDA80>)
2023-11-24 16:20:48,949:INFO:Checking exceptions
2023-11-24 16:20:48,949:INFO:Preloading libraries
2023-11-24 16:20:48,949:INFO:Set up data.
2023-11-24 16:20:48,949:INFO:Set up index.
2023-11-24 16:20:51,273:INFO:Initializing predict_model()
2023-11-24 16:20:51,273:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC220>)
2023-11-24 16:20:51,273:INFO:Checking exceptions
2023-11-24 16:20:51,273:INFO:Preloading libraries
2023-11-24 16:20:51,275:INFO:Set up data.
2023-11-24 16:20:51,281:INFO:Set up index.
2023-11-24 16:20:53,649:INFO:Initializing predict_model()
2023-11-24 16:20:53,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCEA0>)
2023-11-24 16:20:53,649:INFO:Checking exceptions
2023-11-24 16:20:53,649:INFO:Preloading libraries
2023-11-24 16:20:53,649:INFO:Set up data.
2023-11-24 16:20:53,659:INFO:Set up index.
2023-11-24 16:20:56,461:INFO:Initializing predict_model()
2023-11-24 16:20:56,461:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CF240>)
2023-11-24 16:20:56,462:INFO:Checking exceptions
2023-11-24 16:20:56,462:INFO:Preloading libraries
2023-11-24 16:20:56,463:INFO:Set up data.
2023-11-24 16:20:56,463:INFO:Set up index.
2023-11-24 16:20:58,366:INFO:Initializing predict_model()
2023-11-24 16:20:58,366:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC220>)
2023-11-24 16:20:58,366:INFO:Checking exceptions
2023-11-24 16:20:58,366:INFO:Preloading libraries
2023-11-24 16:20:58,366:INFO:Set up data.
2023-11-24 16:20:58,366:INFO:Set up index.
2023-11-24 16:21:00,390:INFO:Initializing predict_model()
2023-11-24 16:21:00,390:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC5E0>)
2023-11-24 16:21:00,390:INFO:Checking exceptions
2023-11-24 16:21:00,390:INFO:Preloading libraries
2023-11-24 16:21:00,393:INFO:Set up data.
2023-11-24 16:21:00,398:INFO:Set up index.
2023-11-24 16:21:02,699:INFO:Initializing predict_model()
2023-11-24 16:21:02,699:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC540>)
2023-11-24 16:21:02,699:INFO:Checking exceptions
2023-11-24 16:21:02,699:INFO:Preloading libraries
2023-11-24 16:21:02,699:INFO:Set up data.
2023-11-24 16:21:02,699:INFO:Set up index.
2023-11-24 16:21:06,445:INFO:Initializing predict_model()
2023-11-24 16:21:06,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC720>)
2023-11-24 16:21:06,445:INFO:Checking exceptions
2023-11-24 16:21:06,445:INFO:Preloading libraries
2023-11-24 16:21:06,445:INFO:Set up data.
2023-11-24 16:21:06,453:INFO:Set up index.
2023-11-24 16:21:13,620:INFO:Initializing predict_model()
2023-11-24 16:21:13,620:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCA40>)
2023-11-24 16:21:13,620:INFO:Checking exceptions
2023-11-24 16:21:13,620:INFO:Preloading libraries
2023-11-24 16:21:13,620:INFO:Set up data.
2023-11-24 16:21:13,620:INFO:Set up index.
2023-11-24 16:21:18,336:INFO:Initializing predict_model()
2023-11-24 16:21:18,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDE40>)
2023-11-24 16:21:18,336:INFO:Checking exceptions
2023-11-24 16:21:18,336:INFO:Preloading libraries
2023-11-24 16:21:18,336:INFO:Set up data.
2023-11-24 16:21:18,336:INFO:Set up index.
2023-11-24 16:21:19,242:INFO:Initializing predict_model()
2023-11-24 16:21:19,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC9A0>)
2023-11-24 16:21:19,242:INFO:Checking exceptions
2023-11-24 16:21:19,242:INFO:Preloading libraries
2023-11-24 16:21:19,242:INFO:Set up data.
2023-11-24 16:21:19,242:INFO:Set up index.
2023-11-24 16:21:22,971:INFO:Initializing predict_model()
2023-11-24 16:21:22,971:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCEA0>)
2023-11-24 16:21:22,971:INFO:Checking exceptions
2023-11-24 16:21:22,971:INFO:Preloading libraries
2023-11-24 16:21:22,971:INFO:Set up data.
2023-11-24 16:21:22,971:INFO:Set up index.
2023-11-24 16:21:24,042:INFO:Initializing predict_model()
2023-11-24 16:21:24,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC5E0>)
2023-11-24 16:21:24,042:INFO:Checking exceptions
2023-11-24 16:21:24,042:INFO:Preloading libraries
2023-11-24 16:21:24,042:INFO:Set up data.
2023-11-24 16:21:24,042:INFO:Set up index.
2023-11-24 16:21:26,819:INFO:Initializing predict_model()
2023-11-24 16:21:26,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CFC40>)
2023-11-24 16:21:26,819:INFO:Checking exceptions
2023-11-24 16:21:26,819:INFO:Preloading libraries
2023-11-24 16:21:26,824:INFO:Set up data.
2023-11-24 16:21:26,827:INFO:Set up index.
2023-11-24 16:21:32,172:INFO:Initializing predict_model()
2023-11-24 16:21:32,172:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC2C0>)
2023-11-24 16:21:32,172:INFO:Checking exceptions
2023-11-24 16:21:32,172:INFO:Preloading libraries
2023-11-24 16:21:32,172:INFO:Set up data.
2023-11-24 16:21:32,181:INFO:Set up index.
2023-11-24 16:22:55,354:INFO:Initializing predict_model()
2023-11-24 16:22:55,354:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC720>)
2023-11-24 16:22:55,354:INFO:Checking exceptions
2023-11-24 16:22:55,354:INFO:Preloading libraries
2023-11-24 16:22:55,354:INFO:Set up data.
2023-11-24 16:22:55,354:INFO:Set up index.
2023-11-24 16:23:36,684:INFO:Initializing predict_model()
2023-11-24 16:23:36,684:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDEE0>)
2023-11-24 16:23:36,684:INFO:Checking exceptions
2023-11-24 16:23:36,684:INFO:Preloading libraries
2023-11-24 16:23:36,684:INFO:Set up data.
2023-11-24 16:23:36,684:INFO:Set up index.
2023-11-24 16:24:22,602:INFO:Initializing predict_model()
2023-11-24 16:24:22,602:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CECA0>)
2023-11-24 16:24:22,602:INFO:Checking exceptions
2023-11-24 16:24:22,602:INFO:Preloading libraries
2023-11-24 16:24:22,602:INFO:Set up data.
2023-11-24 16:24:22,602:INFO:Set up index.
2023-11-24 16:24:29,524:INFO:Initializing predict_model()
2023-11-24 16:24:29,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LinearDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDA80>)
2023-11-24 16:24:29,524:INFO:Checking exceptions
2023-11-24 16:24:29,524:INFO:Preloading libraries
2023-11-24 16:24:29,524:INFO:Set up data.
2023-11-24 16:24:29,524:INFO:Set up index.
2023-11-24 16:24:31,968:INFO:Initializing predict_model()
2023-11-24 16:24:31,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=KNeighborsClassifier(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC220>)
2023-11-24 16:24:31,969:INFO:Checking exceptions
2023-11-24 16:24:31,969:INFO:Preloading libraries
2023-11-24 16:24:31,974:INFO:Set up data.
2023-11-24 16:24:31,980:INFO:Set up index.
2023-11-24 16:24:34,644:INFO:Initializing predict_model()
2023-11-24 16:24:34,644:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=DummyClassifier(random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CE8E0>)
2023-11-24 16:24:34,644:INFO:Checking exceptions
2023-11-24 16:24:34,644:INFO:Preloading libraries
2023-11-24 16:24:34,644:INFO:Set up data.
2023-11-24 16:24:34,644:INFO:Set up index.
2023-11-24 16:24:38,245:INFO:Initializing predict_model()
2023-11-24 16:24:38,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=RidgeClassifier(random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDEE0>)
2023-11-24 16:24:38,245:INFO:Checking exceptions
2023-11-24 16:24:38,245:INFO:Preloading libraries
2023-11-24 16:24:38,248:INFO:Set up data.
2023-11-24 16:24:38,250:INFO:Set up index.
2023-11-24 16:24:59,617:INFO:Initializing predict_model()
2023-11-24 16:24:59,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=GaussianNB(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CD080>)
2023-11-24 16:24:59,617:INFO:Checking exceptions
2023-11-24 16:24:59,617:INFO:Preloading libraries
2023-11-24 16:24:59,617:INFO:Set up data.
2023-11-24 16:24:59,617:INFO:Set up index.
2023-11-24 16:25:02,679:INFO:Initializing predict_model()
2023-11-24 16:25:02,679:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=SGDClassifier(eta0=0.001, n_jobs=-1, random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCA40>)
2023-11-24 16:25:02,679:INFO:Checking exceptions
2023-11-24 16:25:02,679:INFO:Preloading libraries
2023-11-24 16:25:02,679:INFO:Set up data.
2023-11-24 16:25:02,689:INFO:Set up index.
2023-11-24 16:25:05,790:INFO:Initializing predict_model()
2023-11-24 16:25:05,790:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LGBMClassifier(n_jobs=-1, random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CF7E0>)
2023-11-24 16:25:05,790:INFO:Checking exceptions
2023-11-24 16:25:05,790:INFO:Preloading libraries
2023-11-24 16:25:05,790:INFO:Set up data.
2023-11-24 16:25:05,801:INFO:Set up index.
2023-11-24 16:25:09,486:INFO:Initializing predict_model()
2023-11-24 16:25:09,486:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=ExtraTreesClassifier(n_jobs=-1, random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDA80>)
2023-11-24 16:25:09,486:INFO:Checking exceptions
2023-11-24 16:25:09,486:INFO:Preloading libraries
2023-11-24 16:25:09,486:INFO:Set up data.
2023-11-24 16:25:09,486:INFO:Set up index.
2023-11-24 16:25:13,133:INFO:Initializing predict_model()
2023-11-24 16:25:13,133:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=AdaBoostClassifier(random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCEA0>)
2023-11-24 16:25:13,133:INFO:Checking exceptions
2023-11-24 16:25:13,133:INFO:Preloading libraries
2023-11-24 16:25:13,134:INFO:Set up data.
2023-11-24 16:25:13,134:INFO:Set up index.
2023-11-24 16:25:15,592:INFO:Initializing predict_model()
2023-11-24 16:25:15,592:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=DecisionTreeClassifier(random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCCC0>)
2023-11-24 16:25:15,592:INFO:Checking exceptions
2023-11-24 16:25:15,592:INFO:Preloading libraries
2023-11-24 16:25:15,592:INFO:Set up data.
2023-11-24 16:25:15,592:INFO:Set up index.
2023-11-24 16:25:20,358:INFO:Initializing predict_model()
2023-11-24 16:25:20,358:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=RandomForestClassifier(n_jobs=-1, random_state=8701), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CC220>)
2023-11-24 16:25:20,358:INFO:Checking exceptions
2023-11-24 16:25:20,358:INFO:Preloading libraries
2023-11-24 16:25:20,360:INFO:Set up data.
2023-11-24 16:25:20,360:INFO:Set up index.
2023-11-24 16:25:23,772:INFO:Initializing predict_model()
2023-11-24 16:25:23,772:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=LinearDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CCA40>)
2023-11-24 16:25:23,772:INFO:Checking exceptions
2023-11-24 16:25:23,772:INFO:Preloading libraries
2023-11-24 16:25:23,772:INFO:Set up data.
2023-11-24 16:25:23,784:INFO:Set up index.
2023-11-24 16:25:26,699:INFO:Initializing predict_model()
2023-11-24 16:25:26,699:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000192CA24B650>, estimator=QuadraticDiscriminantAnalysis(), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192C41CDEE0>)
2023-11-24 16:25:26,699:INFO:Checking exceptions
2023-11-24 16:25:26,699:INFO:Preloading libraries
2023-11-24 16:25:26,699:INFO:Set up data.
2023-11-24 16:25:26,699:INFO:Set up index.
2023-11-24 16:26:01,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:26:01,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:26:01,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:26:01,259:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-24 16:26:02,628:INFO:PyCaret ClassificationExperiment
2023-11-24 16:26:02,628:INFO:Logging name: clf-default-name
2023-11-24 16:26:02,628:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-24 16:26:02,628:INFO:version 3.2.0
2023-11-24 16:26:02,628:INFO:Initializing setup()
2023-11-24 16:26:02,628:INFO:self.USI: f0ef
2023-11-24 16:26:02,628:INFO:self._variable_keys: {'X_test', 'y', 'memory', 'fold_generator', 'html_param', 'seed', 'X_train', 'gpu_n_jobs_param', 'log_plots_param', 'fold_groups_param', 'exp_id', 'n_jobs_param', 'pipeline', 'fix_imbalance', 'y_test', 'target_param', 'USI', '_available_plots', 'fold_shuffle_param', 'logging_param', 'data', '_ml_usecase', 'y_train', 'is_multiclass', 'idx', 'gpu_param', 'X', 'exp_name_log'}
2023-11-24 16:26:02,628:INFO:Checking environment
2023-11-24 16:26:02,628:INFO:python_version: 3.11.4
2023-11-24 16:26:02,628:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2023-11-24 16:26:02,628:INFO:machine: AMD64
2023-11-24 16:26:02,628:INFO:platform: Windows-10-10.0.19045-SP0
2023-11-24 16:26:02,628:INFO:Memory: svmem(total=8548933632, available=2312192000, percent=73.0, used=6236741632, free=2312192000)
2023-11-24 16:26:02,628:INFO:Physical Core: 4
2023-11-24 16:26:02,628:INFO:Logical Core: 4
2023-11-24 16:26:02,628:INFO:Checking libraries
2023-11-24 16:26:02,628:INFO:System:
2023-11-24 16:26:02,628:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2023-11-24 16:26:02,628:INFO:executable: c:\Users\PC\AppData\Local\Programs\Python\Python311\python.exe
2023-11-24 16:26:02,628:INFO:   machine: Windows-10-10.0.19045-SP0
2023-11-24 16:26:02,628:INFO:PyCaret required dependencies:
2023-11-24 16:26:02,714:INFO:                 pip: 23.3.1
2023-11-24 16:26:02,714:INFO:          setuptools: 65.5.0
2023-11-24 16:26:02,714:INFO:             pycaret: 3.2.0
2023-11-24 16:26:02,714:INFO:             IPython: 8.14.0
2023-11-24 16:26:02,714:INFO:          ipywidgets: 8.1.0
2023-11-24 16:26:02,714:INFO:                tqdm: 4.66.1
2023-11-24 16:26:02,714:INFO:               numpy: 1.24.3
2023-11-24 16:26:02,714:INFO:              pandas: 1.5.3
2023-11-24 16:26:02,714:INFO:              jinja2: 3.1.2
2023-11-24 16:26:02,714:INFO:               scipy: 1.10.1
2023-11-24 16:26:02,714:INFO:              joblib: 1.3.2
2023-11-24 16:26:02,714:INFO:             sklearn: 1.2.2
2023-11-24 16:26:02,714:INFO:                pyod: 1.1.1
2023-11-24 16:26:02,714:INFO:            imblearn: 0.11.0
2023-11-24 16:26:02,714:INFO:   category_encoders: 2.6.3
2023-11-24 16:26:02,714:INFO:            lightgbm: 4.1.0
2023-11-24 16:26:02,714:INFO:               numba: 0.58.1
2023-11-24 16:26:02,714:INFO:            requests: 2.31.0
2023-11-24 16:26:02,714:INFO:          matplotlib: 3.6.0
2023-11-24 16:26:02,714:INFO:          scikitplot: 0.3.7
2023-11-24 16:26:02,714:INFO:         yellowbrick: 1.5
2023-11-24 16:26:02,714:INFO:              plotly: 5.17.0
2023-11-24 16:26:02,714:INFO:    plotly-resampler: Not installed
2023-11-24 16:26:02,714:INFO:             kaleido: 0.2.1
2023-11-24 16:26:02,714:INFO:           schemdraw: 0.15
2023-11-24 16:26:02,714:INFO:         statsmodels: 0.14.0
2023-11-24 16:26:02,719:INFO:              sktime: 0.21.1
2023-11-24 16:26:02,719:INFO:               tbats: 1.1.3
2023-11-24 16:26:02,719:INFO:            pmdarima: 2.0.4
2023-11-24 16:26:02,719:INFO:              psutil: 5.9.5
2023-11-24 16:26:02,719:INFO:          markupsafe: 2.1.3
2023-11-24 16:26:02,720:INFO:             pickle5: Not installed
2023-11-24 16:26:02,720:INFO:         cloudpickle: 3.0.0
2023-11-24 16:26:02,720:INFO:         deprecation: 2.1.0
2023-11-24 16:26:02,720:INFO:              xxhash: 3.4.1
2023-11-24 16:26:02,720:INFO:           wurlitzer: Not installed
2023-11-24 16:26:02,720:INFO:PyCaret optional dependencies:
2023-11-24 16:26:08,923:INFO:                shap: Not installed
2023-11-24 16:26:08,924:INFO:           interpret: Not installed
2023-11-24 16:26:08,924:INFO:                umap: Not installed
2023-11-24 16:26:08,924:INFO:     ydata_profiling: 4.5.1
2023-11-24 16:26:08,924:INFO:  explainerdashboard: Not installed
2023-11-24 16:26:08,924:INFO:             autoviz: Not installed
2023-11-24 16:26:08,924:INFO:           fairlearn: Not installed
2023-11-24 16:26:08,924:INFO:          deepchecks: Not installed
2023-11-24 16:26:08,924:INFO:             xgboost: Not installed
2023-11-24 16:26:08,924:INFO:            catboost: Not installed
2023-11-24 16:26:08,924:INFO:              kmodes: Not installed
2023-11-24 16:26:08,924:INFO:             mlxtend: Not installed
2023-11-24 16:26:08,925:INFO:       statsforecast: Not installed
2023-11-24 16:26:08,925:INFO:        tune_sklearn: Not installed
2023-11-24 16:26:08,925:INFO:                 ray: Not installed
2023-11-24 16:26:08,925:INFO:            hyperopt: Not installed
2023-11-24 16:26:08,925:INFO:              optuna: Not installed
2023-11-24 16:26:08,925:INFO:               skopt: Not installed
2023-11-24 16:26:08,925:INFO:              mlflow: Not installed
2023-11-24 16:26:08,925:INFO:              gradio: 4.5.0
2023-11-24 16:26:08,925:INFO:             fastapi: 0.104.1
2023-11-24 16:26:08,925:INFO:             uvicorn: 0.24.0.post1
2023-11-24 16:26:08,925:INFO:              m2cgen: Not installed
2023-11-24 16:26:08,925:INFO:           evidently: Not installed
2023-11-24 16:26:08,926:INFO:               fugue: Not installed
2023-11-24 16:26:08,926:INFO:           streamlit: 1.27.1
2023-11-24 16:26:08,926:INFO:             prophet: Not installed
2023-11-24 16:26:08,926:INFO:None
2023-11-24 16:26:08,926:INFO:Set up data.
2023-11-24 16:26:08,935:INFO:Set up folding strategy.
2023-11-24 16:26:08,936:INFO:Set up train/test split.
2023-11-24 16:26:08,941:INFO:Set up index.
2023-11-24 16:26:08,942:INFO:Assigning column types.
2023-11-24 16:26:08,946:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-24 16:26:09,079:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,318:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,408:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-24 16:26:09,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,774:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-24 16:26:09,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:09,865:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-24 16:26:10,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:10,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:10,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:10,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:10,349:INFO:Preparing preprocessing pipeline...
2023-11-24 16:26:10,350:INFO:Set up label encoding.
2023-11-24 16:26:10,350:INFO:Set up simple imputation.
2023-11-24 16:26:10,393:INFO:Finished creating preprocessing pipeline.
2023-11-24 16:26:10,401:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\PC\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['sepal_length', 'sepal_width',
                                             'petal_length', 'petal_width'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-11-24 16:26:10,401:INFO:Creating final display dataframe.
2023-11-24 16:26:10,525:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13               Fold Generator   
14                  Fold Number   
15                     CPU Jobs   
16                      Use GPU   
17               Log Experiment   
18              Experiment Name   
19                          USI   

                                                Value  
0                                                2377  
1                                             species  
2                                          Multiclass  
3   Iris-setosa: 0, Iris-versicolor: 1, Iris-virgi...  
4                                            (150, 5)  
5                                            (150, 5)  
6                                            (105, 5)  
7                                             (45, 5)  
8                                                   4  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                    StratifiedKFold  
14                                                 10  
15                                                 -1  
16                                              False  
17                                              False  
18                                   clf-default-name  
19                                               f0ef  
2023-11-24 16:26:10,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:10,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:11,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:11,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-24 16:26:11,118:INFO:setup() successfully completed in 8.49s...............
2023-11-24 16:26:11,151:INFO:Initializing compare_models()
2023-11-24 16:26:11,151:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=15, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 15, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2023-11-24 16:26:11,151:INFO:Checking exceptions
2023-11-24 16:26:11,157:INFO:Preparing display monitor
2023-11-24 16:26:11,207:INFO:Initializing Logistic Regression
2023-11-24 16:26:11,208:INFO:Total runtime is 1.6629695892333984e-05 minutes
2023-11-24 16:26:11,213:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:11,213:INFO:Initializing create_model()
2023-11-24 16:26:11,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:11,214:INFO:Checking exceptions
2023-11-24 16:26:11,214:INFO:Importing libraries
2023-11-24 16:26:11,214:INFO:Copying training dataset
2023-11-24 16:26:11,218:INFO:Defining folds
2023-11-24 16:26:11,219:INFO:Declaring metric variables
2023-11-24 16:26:11,231:INFO:Importing untrained model
2023-11-24 16:26:11,236:INFO:Logistic Regression Imported successfully
2023-11-24 16:26:11,248:INFO:Starting cross validation
2023-11-24 16:26:11,250:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:17,384:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,388:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,390:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,398:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,405:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,552:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,556:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,559:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,559:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,559:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,566:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,566:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,570:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,626:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,632:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,635:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,640:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,649:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,656:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,677:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,684:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,688:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,732:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,736:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,739:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,741:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,751:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,757:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:17,772:INFO:Calculating mean and std
2023-11-24 16:26:17,774:INFO:Creating metrics dataframe
2023-11-24 16:26:17,782:INFO:Uploading results into container
2023-11-24 16:26:17,783:INFO:Uploading model into container now
2023-11-24 16:26:17,783:INFO:_master_model_container: 1
2023-11-24 16:26:17,783:INFO:_display_container: 2
2023-11-24 16:26:17,784:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:26:17,785:INFO:create_model() successfully completed......................................
2023-11-24 16:26:17,921:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:17,921:INFO:Creating metrics dataframe
2023-11-24 16:26:17,936:INFO:Initializing K Neighbors Classifier
2023-11-24 16:26:17,936:INFO:Total runtime is 0.11214032967885336 minutes
2023-11-24 16:26:17,940:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:17,941:INFO:Initializing create_model()
2023-11-24 16:26:17,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:17,942:INFO:Checking exceptions
2023-11-24 16:26:17,942:INFO:Importing libraries
2023-11-24 16:26:17,942:INFO:Copying training dataset
2023-11-24 16:26:17,949:INFO:Defining folds
2023-11-24 16:26:17,950:INFO:Declaring metric variables
2023-11-24 16:26:17,958:INFO:Importing untrained model
2023-11-24 16:26:17,967:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:26:17,976:INFO:Starting cross validation
2023-11-24 16:26:17,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:18,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,070:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,070:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,070:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,104:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,107:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,110:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,142:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,143:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,147:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,148:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,150:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,150:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,151:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,154:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,183:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,187:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,190:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,221:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,225:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,228:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,240:INFO:Calculating mean and std
2023-11-24 16:26:18,242:INFO:Creating metrics dataframe
2023-11-24 16:26:18,248:INFO:Uploading results into container
2023-11-24 16:26:18,249:INFO:Uploading model into container now
2023-11-24 16:26:18,250:INFO:_master_model_container: 2
2023-11-24 16:26:18,250:INFO:_display_container: 2
2023-11-24 16:26:18,250:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:26:18,251:INFO:create_model() successfully completed......................................
2023-11-24 16:26:18,390:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:18,390:INFO:Creating metrics dataframe
2023-11-24 16:26:18,406:INFO:Initializing Naive Bayes
2023-11-24 16:26:18,406:INFO:Total runtime is 0.11997798283894857 minutes
2023-11-24 16:26:18,416:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:18,417:INFO:Initializing create_model()
2023-11-24 16:26:18,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:18,417:INFO:Checking exceptions
2023-11-24 16:26:18,417:INFO:Importing libraries
2023-11-24 16:26:18,418:INFO:Copying training dataset
2023-11-24 16:26:18,425:INFO:Defining folds
2023-11-24 16:26:18,425:INFO:Declaring metric variables
2023-11-24 16:26:18,436:INFO:Importing untrained model
2023-11-24 16:26:18,441:INFO:Naive Bayes Imported successfully
2023-11-24 16:26:18,457:INFO:Starting cross validation
2023-11-24 16:26:18,459:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:18,502:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,503:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,504:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,505:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,507:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,508:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,509:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,510:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,513:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,528:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,534:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,563:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,566:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,568:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,572:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,572:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,575:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,575:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,589:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,593:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,596:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,619:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,623:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,626:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,629:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,630:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,634:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,635:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,638:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,644:INFO:Calculating mean and std
2023-11-24 16:26:18,646:INFO:Creating metrics dataframe
2023-11-24 16:26:18,654:INFO:Uploading results into container
2023-11-24 16:26:18,654:INFO:Uploading model into container now
2023-11-24 16:26:18,655:INFO:_master_model_container: 3
2023-11-24 16:26:18,655:INFO:_display_container: 2
2023-11-24 16:26:18,655:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:26:18,655:INFO:create_model() successfully completed......................................
2023-11-24 16:26:18,779:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:18,779:INFO:Creating metrics dataframe
2023-11-24 16:26:18,794:INFO:Initializing Decision Tree Classifier
2023-11-24 16:26:18,795:INFO:Total runtime is 0.12646450996398925 minutes
2023-11-24 16:26:18,801:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:18,802:INFO:Initializing create_model()
2023-11-24 16:26:18,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:18,802:INFO:Checking exceptions
2023-11-24 16:26:18,802:INFO:Importing libraries
2023-11-24 16:26:18,802:INFO:Copying training dataset
2023-11-24 16:26:18,808:INFO:Defining folds
2023-11-24 16:26:18,809:INFO:Declaring metric variables
2023-11-24 16:26:18,814:INFO:Importing untrained model
2023-11-24 16:26:18,820:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:26:18,831:INFO:Starting cross validation
2023-11-24 16:26:18,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:18,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,886:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,887:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,890:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,893:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,895:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,906:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,910:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,923:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,927:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,930:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,935:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,938:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,954:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,957:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,960:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,964:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,969:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,972:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,975:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:18,986:INFO:Calculating mean and std
2023-11-24 16:26:18,988:INFO:Creating metrics dataframe
2023-11-24 16:26:18,992:INFO:Uploading results into container
2023-11-24 16:26:18,993:INFO:Uploading model into container now
2023-11-24 16:26:18,994:INFO:_master_model_container: 4
2023-11-24 16:26:18,994:INFO:_display_container: 2
2023-11-24 16:26:18,994:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2377, splitter='best')
2023-11-24 16:26:18,995:INFO:create_model() successfully completed......................................
2023-11-24 16:26:19,126:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:19,126:INFO:Creating metrics dataframe
2023-11-24 16:26:19,144:INFO:Initializing SVM - Linear Kernel
2023-11-24 16:26:19,144:INFO:Total runtime is 0.1322687029838562 minutes
2023-11-24 16:26:19,148:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:19,148:INFO:Initializing create_model()
2023-11-24 16:26:19,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:19,149:INFO:Checking exceptions
2023-11-24 16:26:19,149:INFO:Importing libraries
2023-11-24 16:26:19,150:INFO:Copying training dataset
2023-11-24 16:26:19,157:INFO:Defining folds
2023-11-24 16:26:19,157:INFO:Declaring metric variables
2023-11-24 16:26:19,163:INFO:Importing untrained model
2023-11-24 16:26:19,170:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:26:19,180:INFO:Starting cross validation
2023-11-24 16:26:19,182:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:19,248:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,250:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,250:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,252:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,258:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:19,259:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,260:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,261:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,263:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,266:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,274:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,276:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,281:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,283:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:19,285:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:19,287:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,287:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,319:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,320:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,321:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,326:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,330:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,336:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,338:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:19,341:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,347:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,349:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,357:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,359:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:19,361:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,379:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,388:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,396:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,404:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,429:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,431:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,433:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-24 16:26:19,437:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,440:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,442:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,444:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,463:INFO:Calculating mean and std
2023-11-24 16:26:19,465:INFO:Creating metrics dataframe
2023-11-24 16:26:19,475:INFO:Uploading results into container
2023-11-24 16:26:19,476:INFO:Uploading model into container now
2023-11-24 16:26:19,476:INFO:_master_model_container: 5
2023-11-24 16:26:19,477:INFO:_display_container: 2
2023-11-24 16:26:19,477:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2377, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:26:19,477:INFO:create_model() successfully completed......................................
2023-11-24 16:26:19,624:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:19,624:INFO:Creating metrics dataframe
2023-11-24 16:26:19,643:INFO:Initializing Ridge Classifier
2023-11-24 16:26:19,644:INFO:Total runtime is 0.1406019449234009 minutes
2023-11-24 16:26:19,654:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:19,654:INFO:Initializing create_model()
2023-11-24 16:26:19,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:19,654:INFO:Checking exceptions
2023-11-24 16:26:19,654:INFO:Importing libraries
2023-11-24 16:26:19,655:INFO:Copying training dataset
2023-11-24 16:26:19,661:INFO:Defining folds
2023-11-24 16:26:19,661:INFO:Declaring metric variables
2023-11-24 16:26:19,667:INFO:Importing untrained model
2023-11-24 16:26:19,676:INFO:Ridge Classifier Imported successfully
2023-11-24 16:26:19,688:INFO:Starting cross validation
2023-11-24 16:26:19,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:19,731:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,731:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,733:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,733:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,738:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,738:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,739:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,741:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,741:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,742:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,745:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,749:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,775:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,776:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,780:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,780:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,782:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,783:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,794:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,813:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,817:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,822:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,827:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,829:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,834:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

s usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,839:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,839:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,845:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,849:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,850:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,857:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,874:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
           ~~~~~^^^^^^^^
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-11-24 16:26:19,876:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,880:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,883:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:19,900:INFO:Calculating mean and std
2023-11-24 16:26:19,906:INFO:Creating metrics dataframe
2023-11-24 16:26:19,919:INFO:Uploading results into container
2023-11-24 16:26:19,921:INFO:Uploading model into container now
2023-11-24 16:26:19,922:INFO:_master_model_container: 6
2023-11-24 16:26:19,922:INFO:_display_container: 2
2023-11-24 16:26:19,922:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2377, solver='auto',
                tol=0.0001)
2023-11-24 16:26:19,922:INFO:create_model() successfully completed......................................
2023-11-24 16:26:20,116:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:20,119:INFO:Creating metrics dataframe
2023-11-24 16:26:20,161:INFO:Initializing Random Forest Classifier
2023-11-24 16:26:20,161:INFO:Total runtime is 0.14923337300618492 minutes
2023-11-24 16:26:20,171:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:20,172:INFO:Initializing create_model()
2023-11-24 16:26:20,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:20,172:INFO:Checking exceptions
2023-11-24 16:26:20,173:INFO:Importing libraries
2023-11-24 16:26:20,173:INFO:Copying training dataset
2023-11-24 16:26:20,184:INFO:Defining folds
2023-11-24 16:26:20,184:INFO:Declaring metric variables
2023-11-24 16:26:20,194:INFO:Importing untrained model
2023-11-24 16:26:20,199:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:26:20,211:INFO:Starting cross validation
2023-11-24 16:26:20,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:20,667:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,670:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,675:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,676:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,680:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,683:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,783:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,786:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,792:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,832:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,836:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:20,842:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,704:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,708:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,714:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,753:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,758:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,763:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,803:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,803:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,807:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,807:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,811:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:21,812:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,213:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,213:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,216:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,217:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,219:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,220:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,240:INFO:Calculating mean and std
2023-11-24 16:26:22,242:INFO:Creating metrics dataframe
2023-11-24 16:26:22,251:INFO:Uploading results into container
2023-11-24 16:26:22,252:INFO:Uploading model into container now
2023-11-24 16:26:22,252:INFO:_master_model_container: 7
2023-11-24 16:26:22,253:INFO:_display_container: 2
2023-11-24 16:26:22,253:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2377, verbose=0, warm_start=False)
2023-11-24 16:26:22,253:INFO:create_model() successfully completed......................................
2023-11-24 16:26:22,405:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:22,406:INFO:Creating metrics dataframe
2023-11-24 16:26:22,429:INFO:Initializing Quadratic Discriminant Analysis
2023-11-24 16:26:22,429:INFO:Total runtime is 0.18702878157297773 minutes
2023-11-24 16:26:22,435:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:22,435:INFO:Initializing create_model()
2023-11-24 16:26:22,435:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:22,436:INFO:Checking exceptions
2023-11-24 16:26:22,436:INFO:Importing libraries
2023-11-24 16:26:22,436:INFO:Copying training dataset
2023-11-24 16:26:22,443:INFO:Defining folds
2023-11-24 16:26:22,443:INFO:Declaring metric variables
2023-11-24 16:26:22,451:INFO:Importing untrained model
2023-11-24 16:26:22,458:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:26:22,467:INFO:Starting cross validation
2023-11-24 16:26:22,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:22,514:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,516:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,517:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,519:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,520:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,522:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,526:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,526:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,527:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,540:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,561:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,565:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,568:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,568:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,572:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,586:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,590:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,593:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,593:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,601:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,604:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,609:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,611:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,614:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,615:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,617:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,618:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,632:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,635:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,639:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:22,646:INFO:Calculating mean and std
2023-11-24 16:26:22,649:INFO:Creating metrics dataframe
2023-11-24 16:26:22,654:INFO:Uploading results into container
2023-11-24 16:26:22,654:INFO:Uploading model into container now
2023-11-24 16:26:22,655:INFO:_master_model_container: 8
2023-11-24 16:26:22,655:INFO:_display_container: 2
2023-11-24 16:26:22,655:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:26:22,656:INFO:create_model() successfully completed......................................
2023-11-24 16:26:22,784:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:22,784:INFO:Creating metrics dataframe
2023-11-24 16:26:22,803:INFO:Initializing Ada Boost Classifier
2023-11-24 16:26:22,803:INFO:Total runtime is 0.1932641665140788 minutes
2023-11-24 16:26:22,808:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:22,808:INFO:Initializing create_model()
2023-11-24 16:26:22,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:22,809:INFO:Checking exceptions
2023-11-24 16:26:22,809:INFO:Importing libraries
2023-11-24 16:26:22,809:INFO:Copying training dataset
2023-11-24 16:26:22,817:INFO:Defining folds
2023-11-24 16:26:22,817:INFO:Declaring metric variables
2023-11-24 16:26:22,823:INFO:Importing untrained model
2023-11-24 16:26:22,828:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:26:22,840:INFO:Starting cross validation
2023-11-24 16:26:22,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:23,020:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,021:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,023:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,024:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,027:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,028:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,028:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,030:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,057:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,061:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,069:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,200:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,203:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,205:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,207:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,208:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,208:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,211:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,217:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,244:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,249:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,253:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,379:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,385:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,389:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,391:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:23,415:INFO:Calculating mean and std
2023-11-24 16:26:23,420:INFO:Creating metrics dataframe
2023-11-24 16:26:23,430:INFO:Uploading results into container
2023-11-24 16:26:23,434:INFO:Uploading model into container now
2023-11-24 16:26:23,436:INFO:_master_model_container: 9
2023-11-24 16:26:23,436:INFO:_display_container: 2
2023-11-24 16:26:23,436:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2377)
2023-11-24 16:26:23,436:INFO:create_model() successfully completed......................................
2023-11-24 16:26:23,574:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:23,574:INFO:Creating metrics dataframe
2023-11-24 16:26:23,592:INFO:Initializing Gradient Boosting Classifier
2023-11-24 16:26:23,593:INFO:Total runtime is 0.20642542441685996 minutes
2023-11-24 16:26:23,597:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:23,597:INFO:Initializing create_model()
2023-11-24 16:26:23,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:23,597:INFO:Checking exceptions
2023-11-24 16:26:23,598:INFO:Importing libraries
2023-11-24 16:26:23,598:INFO:Copying training dataset
2023-11-24 16:26:23,606:INFO:Defining folds
2023-11-24 16:26:23,607:INFO:Declaring metric variables
2023-11-24 16:26:23,612:INFO:Importing untrained model
2023-11-24 16:26:23,619:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:26:23,628:INFO:Starting cross validation
2023-11-24 16:26:23,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:24,082:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,091:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,094:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,096:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,099:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,099:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,106:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,106:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,109:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,132:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,139:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,142:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,598:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,601:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,610:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,613:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,618:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,623:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,630:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,632:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,633:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,637:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,641:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:24,641:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,081:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,084:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,086:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,091:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,094:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,097:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,107:INFO:Calculating mean and std
2023-11-24 16:26:25,110:INFO:Creating metrics dataframe
2023-11-24 16:26:25,115:INFO:Uploading results into container
2023-11-24 16:26:25,115:INFO:Uploading model into container now
2023-11-24 16:26:25,116:INFO:_master_model_container: 10
2023-11-24 16:26:25,116:INFO:_display_container: 2
2023-11-24 16:26:25,116:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2377, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:26:25,117:INFO:create_model() successfully completed......................................
2023-11-24 16:26:25,244:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:25,244:INFO:Creating metrics dataframe
2023-11-24 16:26:25,265:INFO:Initializing Linear Discriminant Analysis
2023-11-24 16:26:25,265:INFO:Total runtime is 0.2342912038167318 minutes
2023-11-24 16:26:25,270:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:25,271:INFO:Initializing create_model()
2023-11-24 16:26:25,271:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:25,271:INFO:Checking exceptions
2023-11-24 16:26:25,271:INFO:Importing libraries
2023-11-24 16:26:25,271:INFO:Copying training dataset
2023-11-24 16:26:25,278:INFO:Defining folds
2023-11-24 16:26:25,278:INFO:Declaring metric variables
2023-11-24 16:26:25,283:INFO:Importing untrained model
2023-11-24 16:26:25,290:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:26:25,301:INFO:Starting cross validation
2023-11-24 16:26:25,302:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:25,344:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,347:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,351:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,352:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,353:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,355:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,357:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,364:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,367:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,376:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,392:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,394:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,395:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,397:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,398:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,400:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,402:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,408:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,412:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,414:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,417:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,420:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,434:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,438:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,442:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,443:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,445:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,448:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,457:INFO:Calculating mean and std
2023-11-24 16:26:25,459:INFO:Creating metrics dataframe
2023-11-24 16:26:25,464:INFO:Uploading results into container
2023-11-24 16:26:25,465:INFO:Uploading model into container now
2023-11-24 16:26:25,466:INFO:_master_model_container: 11
2023-11-24 16:26:25,466:INFO:_display_container: 2
2023-11-24 16:26:25,466:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:26:25,466:INFO:create_model() successfully completed......................................
2023-11-24 16:26:25,595:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:25,595:INFO:Creating metrics dataframe
2023-11-24 16:26:25,614:INFO:Initializing Extra Trees Classifier
2023-11-24 16:26:25,615:INFO:Total runtime is 0.24012765487035118 minutes
2023-11-24 16:26:25,620:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:25,621:INFO:Initializing create_model()
2023-11-24 16:26:25,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:25,621:INFO:Checking exceptions
2023-11-24 16:26:25,621:INFO:Importing libraries
2023-11-24 16:26:25,621:INFO:Copying training dataset
2023-11-24 16:26:25,630:INFO:Defining folds
2023-11-24 16:26:25,630:INFO:Declaring metric variables
2023-11-24 16:26:25,647:INFO:Importing untrained model
2023-11-24 16:26:25,652:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:26:25,665:INFO:Starting cross validation
2023-11-24 16:26:25,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:25,973:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,977:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,978:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,981:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,982:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:25,984:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,000:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,003:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,007:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,062:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,070:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,269:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,273:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,278:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,286:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,290:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,294:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,319:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,322:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,325:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,452:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,456:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,459:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,580:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,581:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,583:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,584:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,586:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,587:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:26,594:INFO:Calculating mean and std
2023-11-24 16:26:26,596:INFO:Creating metrics dataframe
2023-11-24 16:26:26,602:INFO:Uploading results into container
2023-11-24 16:26:26,602:INFO:Uploading model into container now
2023-11-24 16:26:26,603:INFO:_master_model_container: 12
2023-11-24 16:26:26,603:INFO:_display_container: 2
2023-11-24 16:26:26,604:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2377, verbose=0, warm_start=False)
2023-11-24 16:26:26,604:INFO:create_model() successfully completed......................................
2023-11-24 16:26:26,734:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:26,735:INFO:Creating metrics dataframe
2023-11-24 16:26:26,754:INFO:Initializing Light Gradient Boosting Machine
2023-11-24 16:26:26,755:INFO:Total runtime is 0.2591280261675517 minutes
2023-11-24 16:26:26,760:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:26,761:INFO:Initializing create_model()
2023-11-24 16:26:26,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:26,762:INFO:Checking exceptions
2023-11-24 16:26:26,762:INFO:Importing libraries
2023-11-24 16:26:26,762:INFO:Copying training dataset
2023-11-24 16:26:26,769:INFO:Defining folds
2023-11-24 16:26:26,769:INFO:Declaring metric variables
2023-11-24 16:26:26,775:INFO:Importing untrained model
2023-11-24 16:26:26,782:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:26:26,792:INFO:Starting cross validation
2023-11-24 16:26:26,793:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:27,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,013:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,017:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,017:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,020:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,021:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,025:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,029:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,035:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,066:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,069:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,073:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,239:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,239:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,242:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,243:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,245:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,248:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,256:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,259:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,265:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,327:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,331:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,339:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,442:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,445:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,450:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,455:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,458:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,460:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,475:INFO:Calculating mean and std
2023-11-24 16:26:27,477:INFO:Creating metrics dataframe
2023-11-24 16:26:27,485:INFO:Uploading results into container
2023-11-24 16:26:27,486:INFO:Uploading model into container now
2023-11-24 16:26:27,486:INFO:_master_model_container: 13
2023-11-24 16:26:27,486:INFO:_display_container: 2
2023-11-24 16:26:27,487:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2377, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 16:26:27,487:INFO:create_model() successfully completed......................................
2023-11-24 16:26:27,612:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:27,612:INFO:Creating metrics dataframe
2023-11-24 16:26:27,634:INFO:Initializing Dummy Classifier
2023-11-24 16:26:27,635:INFO:Total runtime is 0.27380037307739263 minutes
2023-11-24 16:26:27,640:INFO:SubProcess create_model() called ==================================
2023-11-24 16:26:27,641:INFO:Initializing create_model()
2023-11-24 16:26:27,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018353DF9A10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:27,641:INFO:Checking exceptions
2023-11-24 16:26:27,641:INFO:Importing libraries
2023-11-24 16:26:27,641:INFO:Copying training dataset
2023-11-24 16:26:27,649:INFO:Defining folds
2023-11-24 16:26:27,649:INFO:Declaring metric variables
2023-11-24 16:26:27,655:INFO:Importing untrained model
2023-11-24 16:26:27,661:INFO:Dummy Classifier Imported successfully
2023-11-24 16:26:27,675:INFO:Starting cross validation
2023-11-24 16:26:27,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-24 16:26:27,716:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,718:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,719:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,720:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,721:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,721:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,722:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,723:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,724:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,724:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,726:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,735:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,739:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,740:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,742:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,756:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,759:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,760:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,761:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,761:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,763:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,764:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,766:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,768:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,768:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,770:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,771:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,782:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,787:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,788:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,790:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,798:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,802:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,802:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,804:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,805:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,806:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-24 16:26:27,808:WARNING:c:\Users\PC\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Iris-virginica') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-11-24 16:26:27,821:INFO:Calculating mean and std
2023-11-24 16:26:27,823:INFO:Creating metrics dataframe
2023-11-24 16:26:27,828:INFO:Uploading results into container
2023-11-24 16:26:27,828:INFO:Uploading model into container now
2023-11-24 16:26:27,829:INFO:_master_model_container: 14
2023-11-24 16:26:27,829:INFO:_display_container: 2
2023-11-24 16:26:27,829:INFO:DummyClassifier(constant=None, random_state=2377, strategy='prior')
2023-11-24 16:26:27,829:INFO:create_model() successfully completed......................................
2023-11-24 16:26:27,958:INFO:SubProcess create_model() end ==================================
2023-11-24 16:26:27,958:INFO:Creating metrics dataframe
2023-11-24 16:26:28,004:INFO:Initializing create_model()
2023-11-24 16:26:28,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:28,004:INFO:Checking exceptions
2023-11-24 16:26:28,007:INFO:Importing libraries
2023-11-24 16:26:28,007:INFO:Copying training dataset
2023-11-24 16:26:28,011:INFO:Defining folds
2023-11-24 16:26:28,011:INFO:Declaring metric variables
2023-11-24 16:26:28,012:INFO:Importing untrained model
2023-11-24 16:26:28,012:INFO:Declaring custom model
2023-11-24 16:26:28,012:INFO:Quadratic Discriminant Analysis Imported successfully
2023-11-24 16:26:28,013:INFO:Cross validation set to False
2023-11-24 16:26:28,013:INFO:Fitting Model
2023-11-24 16:26:28,026:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-11-24 16:26:28,026:INFO:create_model() successfully completed......................................
2023-11-24 16:26:28,161:INFO:Initializing create_model()
2023-11-24 16:26:28,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:28,162:INFO:Checking exceptions
2023-11-24 16:26:28,164:INFO:Importing libraries
2023-11-24 16:26:28,164:INFO:Copying training dataset
2023-11-24 16:26:28,171:INFO:Defining folds
2023-11-24 16:26:28,171:INFO:Declaring metric variables
2023-11-24 16:26:28,171:INFO:Importing untrained model
2023-11-24 16:26:28,171:INFO:Declaring custom model
2023-11-24 16:26:28,172:INFO:Linear Discriminant Analysis Imported successfully
2023-11-24 16:26:28,173:INFO:Cross validation set to False
2023-11-24 16:26:28,173:INFO:Fitting Model
2023-11-24 16:26:28,186:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-11-24 16:26:28,187:INFO:create_model() successfully completed......................................
2023-11-24 16:26:28,316:INFO:Initializing create_model()
2023-11-24 16:26:28,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:28,317:INFO:Checking exceptions
2023-11-24 16:26:28,320:INFO:Importing libraries
2023-11-24 16:26:28,321:INFO:Copying training dataset
2023-11-24 16:26:28,325:INFO:Defining folds
2023-11-24 16:26:28,325:INFO:Declaring metric variables
2023-11-24 16:26:28,325:INFO:Importing untrained model
2023-11-24 16:26:28,325:INFO:Declaring custom model
2023-11-24 16:26:28,326:INFO:K Neighbors Classifier Imported successfully
2023-11-24 16:26:28,327:INFO:Cross validation set to False
2023-11-24 16:26:28,327:INFO:Fitting Model
2023-11-24 16:26:28,339:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-11-24 16:26:28,339:INFO:create_model() successfully completed......................................
2023-11-24 16:26:28,474:INFO:Initializing create_model()
2023-11-24 16:26:28,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:28,474:INFO:Checking exceptions
2023-11-24 16:26:28,477:INFO:Importing libraries
2023-11-24 16:26:28,477:INFO:Copying training dataset
2023-11-24 16:26:28,481:INFO:Defining folds
2023-11-24 16:26:28,481:INFO:Declaring metric variables
2023-11-24 16:26:28,481:INFO:Importing untrained model
2023-11-24 16:26:28,481:INFO:Declaring custom model
2023-11-24 16:26:28,482:INFO:Naive Bayes Imported successfully
2023-11-24 16:26:28,483:INFO:Cross validation set to False
2023-11-24 16:26:28,483:INFO:Fitting Model
2023-11-24 16:26:28,496:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-11-24 16:26:28,496:INFO:create_model() successfully completed......................................
2023-11-24 16:26:28,629:INFO:Initializing create_model()
2023-11-24 16:26:28,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2377, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:28,629:INFO:Checking exceptions
2023-11-24 16:26:28,632:INFO:Importing libraries
2023-11-24 16:26:28,632:INFO:Copying training dataset
2023-11-24 16:26:28,637:INFO:Defining folds
2023-11-24 16:26:28,638:INFO:Declaring metric variables
2023-11-24 16:26:28,638:INFO:Importing untrained model
2023-11-24 16:26:28,638:INFO:Declaring custom model
2023-11-24 16:26:28,639:INFO:Random Forest Classifier Imported successfully
2023-11-24 16:26:28,640:INFO:Cross validation set to False
2023-11-24 16:26:28,640:INFO:Fitting Model
2023-11-24 16:26:28,890:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2377, verbose=0, warm_start=False)
2023-11-24 16:26:28,891:INFO:create_model() successfully completed......................................
2023-11-24 16:26:29,024:INFO:Initializing create_model()
2023-11-24 16:26:29,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2377, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:29,026:INFO:Checking exceptions
2023-11-24 16:26:29,029:INFO:Importing libraries
2023-11-24 16:26:29,029:INFO:Copying training dataset
2023-11-24 16:26:29,033:INFO:Defining folds
2023-11-24 16:26:29,034:INFO:Declaring metric variables
2023-11-24 16:26:29,034:INFO:Importing untrained model
2023-11-24 16:26:29,034:INFO:Declaring custom model
2023-11-24 16:26:29,035:INFO:Gradient Boosting Classifier Imported successfully
2023-11-24 16:26:29,037:INFO:Cross validation set to False
2023-11-24 16:26:29,037:INFO:Fitting Model
2023-11-24 16:26:29,430:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2377, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-11-24 16:26:29,431:INFO:create_model() successfully completed......................................
2023-11-24 16:26:29,565:INFO:Initializing create_model()
2023-11-24 16:26:29,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:29,566:INFO:Checking exceptions
2023-11-24 16:26:29,569:INFO:Importing libraries
2023-11-24 16:26:29,569:INFO:Copying training dataset
2023-11-24 16:26:29,574:INFO:Defining folds
2023-11-24 16:26:29,574:INFO:Declaring metric variables
2023-11-24 16:26:29,575:INFO:Importing untrained model
2023-11-24 16:26:29,575:INFO:Declaring custom model
2023-11-24 16:26:29,575:INFO:Logistic Regression Imported successfully
2023-11-24 16:26:29,576:INFO:Cross validation set to False
2023-11-24 16:26:29,576:INFO:Fitting Model
2023-11-24 16:26:29,618:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-24 16:26:29,618:INFO:create_model() successfully completed......................................
2023-11-24 16:26:29,756:INFO:Initializing create_model()
2023-11-24 16:26:29,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2377, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:29,758:INFO:Checking exceptions
2023-11-24 16:26:29,760:INFO:Importing libraries
2023-11-24 16:26:29,761:INFO:Copying training dataset
2023-11-24 16:26:29,764:INFO:Defining folds
2023-11-24 16:26:29,765:INFO:Declaring metric variables
2023-11-24 16:26:29,765:INFO:Importing untrained model
2023-11-24 16:26:29,765:INFO:Declaring custom model
2023-11-24 16:26:29,766:INFO:Decision Tree Classifier Imported successfully
2023-11-24 16:26:29,767:INFO:Cross validation set to False
2023-11-24 16:26:29,767:INFO:Fitting Model
2023-11-24 16:26:29,778:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2377, splitter='best')
2023-11-24 16:26:29,778:INFO:create_model() successfully completed......................................
2023-11-24 16:26:29,913:INFO:Initializing create_model()
2023-11-24 16:26:29,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2377, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:29,914:INFO:Checking exceptions
2023-11-24 16:26:29,916:INFO:Importing libraries
2023-11-24 16:26:29,916:INFO:Copying training dataset
2023-11-24 16:26:29,920:INFO:Defining folds
2023-11-24 16:26:29,920:INFO:Declaring metric variables
2023-11-24 16:26:29,920:INFO:Importing untrained model
2023-11-24 16:26:29,920:INFO:Declaring custom model
2023-11-24 16:26:29,921:INFO:Extra Trees Classifier Imported successfully
2023-11-24 16:26:29,923:INFO:Cross validation set to False
2023-11-24 16:26:29,924:INFO:Fitting Model
2023-11-24 16:26:30,116:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2377, verbose=0, warm_start=False)
2023-11-24 16:26:30,117:INFO:create_model() successfully completed......................................
2023-11-24 16:26:30,250:INFO:Initializing create_model()
2023-11-24 16:26:30,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2377, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:30,251:INFO:Checking exceptions
2023-11-24 16:26:30,254:INFO:Importing libraries
2023-11-24 16:26:30,254:INFO:Copying training dataset
2023-11-24 16:26:30,295:INFO:Defining folds
2023-11-24 16:26:30,296:INFO:Declaring metric variables
2023-11-24 16:26:30,296:INFO:Importing untrained model
2023-11-24 16:26:30,296:INFO:Declaring custom model
2023-11-24 16:26:30,297:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-24 16:26:30,298:INFO:Cross validation set to False
2023-11-24 16:26:30,298:INFO:Fitting Model
2023-11-24 16:26:30,319:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000082 seconds.
2023-11-24 16:26:30,320:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-24 16:26:30,320:INFO:[LightGBM] [Info] Total Bins 83
2023-11-24 16:26:30,320:INFO:[LightGBM] [Info] Number of data points in the train set: 105, number of used features: 4
2023-11-24 16:26:30,320:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:26:30,320:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:26:30,321:INFO:[LightGBM] [Info] Start training from score -1.098612
2023-11-24 16:26:30,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2023-11-24 16:26:30,395:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2377, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-24 16:26:30,395:INFO:create_model() successfully completed......................................
2023-11-24 16:26:30,529:INFO:Initializing create_model()
2023-11-24 16:26:30,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2377), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:30,531:INFO:Checking exceptions
2023-11-24 16:26:30,534:INFO:Importing libraries
2023-11-24 16:26:30,534:INFO:Copying training dataset
2023-11-24 16:26:30,538:INFO:Defining folds
2023-11-24 16:26:30,538:INFO:Declaring metric variables
2023-11-24 16:26:30,538:INFO:Importing untrained model
2023-11-24 16:26:30,538:INFO:Declaring custom model
2023-11-24 16:26:30,539:INFO:Ada Boost Classifier Imported successfully
2023-11-24 16:26:30,540:INFO:Cross validation set to False
2023-11-24 16:26:30,540:INFO:Fitting Model
2023-11-24 16:26:30,654:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2377)
2023-11-24 16:26:30,654:INFO:create_model() successfully completed......................................
2023-11-24 16:26:30,790:INFO:Initializing create_model()
2023-11-24 16:26:30,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2377, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:30,791:INFO:Checking exceptions
2023-11-24 16:26:30,795:INFO:Importing libraries
2023-11-24 16:26:30,795:INFO:Copying training dataset
2023-11-24 16:26:30,799:INFO:Defining folds
2023-11-24 16:26:30,800:INFO:Declaring metric variables
2023-11-24 16:26:30,800:INFO:Importing untrained model
2023-11-24 16:26:30,800:INFO:Declaring custom model
2023-11-24 16:26:30,801:INFO:Ridge Classifier Imported successfully
2023-11-24 16:26:30,802:INFO:Cross validation set to False
2023-11-24 16:26:30,802:INFO:Fitting Model
2023-11-24 16:26:30,816:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2377, solver='auto',
                tol=0.0001)
2023-11-24 16:26:30,817:INFO:create_model() successfully completed......................................
2023-11-24 16:26:30,953:INFO:Initializing create_model()
2023-11-24 16:26:30,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2377, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:30,953:INFO:Checking exceptions
2023-11-24 16:26:30,955:INFO:Importing libraries
2023-11-24 16:26:30,955:INFO:Copying training dataset
2023-11-24 16:26:30,961:INFO:Defining folds
2023-11-24 16:26:30,961:INFO:Declaring metric variables
2023-11-24 16:26:30,962:INFO:Importing untrained model
2023-11-24 16:26:30,962:INFO:Declaring custom model
2023-11-24 16:26:30,963:INFO:SVM - Linear Kernel Imported successfully
2023-11-24 16:26:30,964:INFO:Cross validation set to False
2023-11-24 16:26:30,964:INFO:Fitting Model
2023-11-24 16:26:30,994:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2377, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-24 16:26:30,994:INFO:create_model() successfully completed......................................
2023-11-24 16:26:31,129:INFO:Initializing create_model()
2023-11-24 16:26:31,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001834FD2CDD0>, estimator=DummyClassifier(constant=None, random_state=2377, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-11-24 16:26:31,129:INFO:Checking exceptions
2023-11-24 16:26:31,131:INFO:Importing libraries
2023-11-24 16:26:31,132:INFO:Copying training dataset
2023-11-24 16:26:31,136:INFO:Defining folds
2023-11-24 16:26:31,136:INFO:Declaring metric variables
2023-11-24 16:26:31,136:INFO:Importing untrained model
2023-11-24 16:26:31,136:INFO:Declaring custom model
2023-11-24 16:26:31,137:INFO:Dummy Classifier Imported successfully
2023-11-24 16:26:31,138:INFO:Cross validation set to False
2023-11-24 16:26:31,138:INFO:Fitting Model
2023-11-24 16:26:31,147:INFO:DummyClassifier(constant=None, random_state=2377, strategy='prior')
2023-11-24 16:26:31,147:INFO:create_model() successfully completed......................................
2023-11-24 16:26:31,308:INFO:_master_model_container: 14
2023-11-24 16:26:31,308:INFO:_display_container: 2
2023-11-24 16:26:31,313:INFO:[QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GaussianNB(priors=None, var_smoothing=1e-09), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2377, verbose=0, warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2377, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2377, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2377, splitter='best'), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2377, verbose=0, warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2377, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2377), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2377, solver='auto',
                tol=0.0001), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2377, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), DummyClassifier(constant=None, random_state=2377, strategy='prior')]
2023-11-24 16:26:31,314:INFO:compare_models() successfully completed......................................
